{
  "0x66ab220fadd8879442cdf42d982b2216c9204b656c4e9ff0086a3df84768a58f": {
    "name": "X402PaymentRouter",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "X402PaymentRouter",
      "sourceName": "contracts/X402PaymentRouter.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pyusd",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_endpoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_delegate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "OwnableInvalidOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "OwnableUnauthorizedAccount",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ReentrancyGuardReentrantCall",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "name": "SafeERC20FailedOperation",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "destinationChain",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "guid",
              "type": "bytes32"
            }
          ],
          "name": "CrossChainPaymentSent",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32"
            }
          ],
          "name": "PaymentCompleted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "serviceId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "requestedToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "destinationChain",
              "type": "uint32"
            }
          ],
          "name": "PaymentRequested",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "serviceId",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "ServiceRegistered",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "endpoint",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "name": "paymentRequests",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "serviceId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "serviceProvider",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "requestedToken",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "destinationChain",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "providerServices",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "pyusd",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "pyusdOFTAdapter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_serviceId",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "_destinationChain",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_options",
              "type": "bytes"
            }
          ],
          "name": "quotePayment",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nativeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lzTokenFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OApp.MessagingFee",
              "name": "fee",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "name": "recoverTokens",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_endpoint",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerCall",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_acceptedTokens",
              "type": "address[]"
            },
            {
              "internalType": "uint32[]",
              "name": "_supportedChains",
              "type": "uint32[]"
            }
          ],
          "name": "registerService",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "serviceId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "requestCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_serviceId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "_requestedToken",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_destinationChain",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_options",
              "type": "bytes"
            }
          ],
          "name": "requestPayment",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "name": "services",
          "outputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "endpoint",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "pricePerCall",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_adapter",
              "type": "address"
            }
          ],
          "name": "setPYUSDOFTAdapter",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_composer",
              "type": "address"
            }
          ],
          "name": "setTokenSwapComposer",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "tokenSwapComposer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_serviceId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "_active",
              "type": "bool"
            }
          ],
          "name": "updateServiceStatus",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "",
      "deployedBytecode": "0x6080604052600436106101095760003560e01c8063239bd611116100955780638da5cb5b116100645780638da5cb5b146103c3578063945a322a146103e1578063973a814e14610401578063ba7c873214610417578063f2fde38b1461043757600080fd5b8063239bd6111461033a57806337001ca41461035a5780635e280f111461037a578063715018a6146103ae57600080fd5b80630ca1bdab116100dc5780630ca1bdab146101ce5780630d7a55ba146101e157806310619dce146102ae5780631b6b204a146102ce57806322e669d3146102ee57600080fd5b806303731b9e1461010e57806304a5bf1e14610141578063069c9fae1461017c5780630a790eb71461019e575b600080fd5b34801561011a57600080fd5b5061012e610129366004611772565b610457565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b5061016161015c3660046117f9565b610488565b60408051825181526020928301519281019290925201610138565b34801561018857600080fd5b5061019c610197366004611772565b6106d7565b005b3480156101aa57600080fd5b506101be6101b9366004611853565b610709565b6040516101389493929190611890565b61012e6101dc3660046118e1565b6107c8565b3480156101ed57600080fd5b506102596101fc366004611853565b6006602081905260009182526040909120805460018201546002830154600384015460048501546005860154959096015493956001600160a01b0393841695928416949193811692600160a01b90910463ffffffff169160ff1688565b604080519889526001600160a01b0397881660208a01529587169588019590955260608701939093529316608085015263ffffffff90921660a084015260c0830191909152151560e082015261010001610138565b3480156102ba57600080fd5b5061019c6102c9366004611950565b610e67565b3480156102da57600080fd5b5061019c6102e9366004611950565b610e91565b3480156102fa57600080fd5b506103227f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b34801561034657600080fd5b5061012e6103553660046119b7565b610ebb565b34801561036657600080fd5b50600354610322906001600160a01b031681565b34801561038657600080fd5b506103227f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ba57600080fd5b5061019c6110a8565b3480156103cf57600080fd5b506000546001600160a01b0316610322565b3480156103ed57600080fd5b5061019c6103fc366004611a5b565b6110bc565b34801561040d57600080fd5b5061012e60075481565b34801561042357600080fd5b50600254610322906001600160a01b031681565b34801561044357600080fd5b5061019c610452366004611950565b611139565b6005602052816000526040600020818154811061047357600080fd5b90600052602060002001600091509150505481565b6040805180820182526000808252602080830182905287825260048152838220845160c0810190955280546001600160a01b031685526001810180549495939491928401916104d690611a90565b80601f016020809104026020016040519081016040528092919081815260200182805461050290611a90565b801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050815260200160028201548152602001600382018054806020026020016040519081016040528092919081815260200182805480156105bb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161059d575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561063f57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106025790505b50505091835250506005919091015460ff161515602091820152815160408084015181519384018b90526001600160a01b039092169083015260608201529091506106cd90869060800160408051601f198184030181526020601f89018190048102840181019092528783529190889088908190840183828082843760009201829052509250611177915050565b9695505050505050565b6106df6111ab565b6107056106f46000546001600160a01b031690565b6001600160a01b03841690836111d8565b5050565b600460205260009081526040902080546001820180546001600160a01b03909216929161073590611a90565b80601f016020809104026020016040519081016040528092919081815260200182805461076190611a90565b80156107ae5780601f10610783576101008083540402835291602001916107ae565b820191906000526020600020905b81548152906001019060200180831161079157829003601f168201915b50505050600283015460059093015491929160ff16905084565b60006107d261123c565b6000868152600460209081526040808320815160c0810190925280546001600160a01b03168252600181018054929391929184019161081090611a90565b80601f016020809104026020016040519081016040528092919081815260200182805461083c90611a90565b80156108895780601f1061085e57610100808354040283529160200191610889565b820191906000526020600020905b81548152906001019060200180831161086c57829003601f168201915b5050505050815260200160028201548152602001600382018054806020026020016040519081016040528092919081815260200182805480156108f557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108d7575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561097957602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161093c5790505b50505091835250506005919091015460ff16151560209091015260a08101519091506109e15760405162461bcd60e51b815260206004820152601260248201527153657276696365206e6f742061637469766560701b60448201526064015b60405180910390fd5b6109eb8187611266565b610a2c5760405162461bcd60e51b8152602060048201526012602482015271151bdad95b881b9bdd081858d8d95c1d195960721b60448201526064016109d8565b610a3681866112cb565b610a785760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016109d8565b6040810151610ab5906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903390309061131e565b60078054906000610ac583611ae0565b909155506040805160208101929092526bffffffffffffffffffffffff193360601b1690820152426054820152607401604051602081830303815290604052805190602001209150604051806101000160405280888152602001336001600160a01b0316815260200182600001516001600160a01b0316815260200182604001518152602001876001600160a01b031681526020018663ffffffff16815260200142815260200160001515815250600660008481526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160040160146101000a81548163ffffffff021916908363ffffffff16021790555060c0820151816005015560e08201518160060160006101000a81548160ff02191690831515021790555090505086827fba3d72ca72a32058f329441a3a0a404295eeea063467b1954afecb143aabb99b3384604001518a8a604051610cdb94939291906001600160a01b03948516815260208101939093529216604082015263ffffffff91909116606082015260800190565b60405180910390a37f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316141580610d2a5750468563ffffffff1614155b15610dc5576000828152600660208181526040928390208351610100810185528154815260018201546001600160a01b039081169382019390935260028201548316948101949094526003810154606085015260048101549182166080850152600160a01b90910463ffffffff1660a0840152600581015460c0840152015460ff16151560e0820152610dc0908390868661135d565b610e54565b6000828152600660208181526040928390208351610100810185528154815260018201546001600160a01b039081169382019390935260028201548316948101949094526003810154606085015260048101549182166080850152600160a01b90910463ffffffff1660a0840152600581015460c0840152015460ff16151560e0820152610e549083906114b5565b50610e5e60018055565b95945050505050565b610e6f6111ab565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610e996111ab565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600033888842604051602001610ed49493929190611af9565b60408051601f19818403018152828252805160209182012060c0840183523384528251601f8c018390048302810183019093528a8352935082810191908b908b9081908401838280828437600092019190915250505090825250602080820189905260408051888302818101840183528982529190930192918991899182919085019084908082843760009201919091525050509082525060408051602086810282810182019093528682529283019290918791879182918501908490808284376000920182905250938552505060016020938401819052858352600484526040909220845181546001600160a01b0319166001600160a01b039091161781559284015191830191610fe7915082611b8c565b50604082015160028201556060820151805161100d916003840191602090910190611636565b506080820151805161102991600484019160209091019061169b565b5060a091909101516005918201805460ff19169115159190911790553360008181526020928352604080822080546001810182559083529184902090910184905551888152909183917f1bd0bc8e83e4b1ca39e055b0ee51fbde9f6004eef864db76dd1fc7386693eb79910160405180910390a3979650505050505050565b6110b06111ab565b6110ba600061153c565b565b6000828152600460205260409020546001600160a01b031633146111165760405162461bcd60e51b81526020600482015260116024820152702737ba1039b2b93b34b1b29037bbb732b960791b60448201526064016109d8565b600091825260046020526040909120600501805460ff1916911515919091179055565b6111416111ab565b6001600160a01b03811661116b57604051631e4fbdf760e01b8152600060048201526024016109d8565b6111748161153c565b50565b505060408051808201825260008082526020918201819052825180840190935266038d7ea4c6800083529082015292915050565b6000546001600160a01b031633146110ba5760405163118cdaa760e01b81523360048201526024016109d8565b6040516001600160a01b0383811660248301526044820183905261123791859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061158c565b505050565b60026001540361125f57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000805b8360600151518110156112bf57826001600160a01b03168460600151828151811061129757611297611c4c565b60200260200101516001600160a01b0316036112b75760019150506112c5565b60010161126a565b50600090505b92915050565b6000805b8360800151518110156112bf578263ffffffff16846080015182815181106112f9576112f9611c4c565b602002602001015163ffffffff16036113165760019150506112c5565b6001016112cf565b6040516001600160a01b0384811660248301528381166044830152606482018390526113579186918216906323b872dd90608401611205565b50505050565b6040830151606084015160808501516000929190606461137e836063611c62565b6113889190611c79565b604080516001600160a01b0395861660208201529081019390935292166060820152608081019190915260a001604051602081830303815290604052905060006114638560a001518787604001518860600151604051602001611407939291909283526001600160a01b03919091166020830152604082015260600190565b60408051601f198184030181526020601f890181900481028401810190925287835291908890889081908401838280828437600092018290525060408051808201909152348152602081019190915292503391508890506115fd565b60a08601516040805163ffffffff90921682526020820183905291925087917fb8cb06e60d12513400244bca527994b43b879ff6428e977f67071d81497b6f5f910160405180910390a2505050505050565b604081015160608201516114f3916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916111d8565b6000828152600660208190526040808320909101805460ff191660011790555183917ff2baea2668e36a27a898b8c745decb4439ff61ae04d545dcc6954b84bd3e3c4291a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080602060008451602086016000885af1806115af576040513d6000823e3d81fd5b50506000513d915081156115c75780600114156115d4565b6001600160a01b0384163b155b1561135757604051635274afe760e01b81526001600160a01b03851660048201526024016109d8565b600086864260405160200161161493929190611c9b565b6040516020818303038152906040528051906020012090509695505050505050565b82805482825590600052602060002090810192821561168b579160200282015b8281111561168b57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611656565b50611697929150611741565b5090565b8280548282559060005260206000209060070160089004810192821561168b5791602002820160005b8382111561170857835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026116c4565b80156117385782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611708565b50506116979291505b5b808211156116975760008155600101611742565b80356001600160a01b038116811461176d57600080fd5b919050565b6000806040838503121561178557600080fd5b61178e83611756565b946020939093013593505050565b803563ffffffff8116811461176d57600080fd5b60008083601f8401126117c257600080fd5b50813567ffffffffffffffff8111156117da57600080fd5b6020830191508360208285010111156117f257600080fd5b9250929050565b6000806000806060858703121561180f57600080fd5b8435935061181f6020860161179c565b9250604085013567ffffffffffffffff81111561183b57600080fd5b611847878288016117b0565b95989497509550505050565b60006020828403121561186557600080fd5b5035919050565b60005b8381101561188757818101518382015260200161186f565b50506000910152565b60018060a01b038516815260806020820152600084518060808401526118bd8160a085016020890161186c565b604083019490945250901515606082015260a0601f909201601f1916010192915050565b6000806000806000608086880312156118f957600080fd5b8535945061190960208701611756565b93506119176040870161179c565b9250606086013567ffffffffffffffff81111561193357600080fd5b61193f888289016117b0565b969995985093965092949392505050565b60006020828403121561196257600080fd5b61196b82611756565b9392505050565b60008083601f84011261198457600080fd5b50813567ffffffffffffffff81111561199c57600080fd5b6020830191508360208260051b85010111156117f257600080fd5b60008060008060008060006080888a0312156119d257600080fd5b873567ffffffffffffffff808211156119ea57600080fd5b6119f68b838c016117b0565b909950975060208a0135965060408a0135915080821115611a1657600080fd5b611a228b838c01611972565b909650945060608a0135915080821115611a3b57600080fd5b50611a488a828b01611972565b989b979a50959850939692959293505050565b60008060408385031215611a6e57600080fd5b8235915060208301358015158114611a8557600080fd5b809150509250929050565b600181811c90821680611aa457607f821691505b602082108103611ac457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611af257611af2611aca565b5060010190565b6bffffffffffffffffffffffff198560601b16815282846014830137601492019182015260340192915050565b634e487b7160e01b600052604160045260246000fd5b601f821115611237576000816000526020600020601f850160051c81016020861015611b655750805b601f850160051c820191505b81811015611b8457828155600101611b71565b505050505050565b815167ffffffffffffffff811115611ba657611ba6611b26565b611bba81611bb48454611a90565b84611b3c565b602080601f831160018114611bef5760008415611bd75750858301515b600019600386901b1c1916600185901b178555611b84565b600085815260208120601f198616915b82811015611c1e57888601518255948401946001909101908401611bff565b5085821015611c3c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176112c5576112c5611aca565b600082611c9657634e487b7160e01b600052601260045260246000fd5b500490565b63ffffffff60e01b8460e01b16815260008351611cbf81600485016020880161186c565b6004920191820192909252602401939250505056fea264697066735822122033bcf3a3be30ebd4c6e4f46e7afc03dcbdabb034f463d62922506377ec4d653b64736f6c63430008160033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "details": "Routes PYUSD payments cross-chain with automatic token swapping",
        "errors": {
          "OwnableInvalidOwner(address)": [
            {
              "details": "The owner is not a valid owner account. (eg. `address(0)`)"
            }
          ],
          "OwnableUnauthorizedAccount(address)": [
            {
              "details": "The caller account is not authorized to perform an operation."
            }
          ],
          "ReentrancyGuardReentrantCall()": [
            {
              "details": "Unauthorized reentrant call."
            }
          ],
          "SafeERC20FailedOperation(address)": [
            {
              "details": "An operation with an ERC-20 token failed."
            }
          ]
        },
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "title": "X402PaymentRouter",
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {
            "@_1509": {
              "entryPoint": null,
              "id": 1509,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_50": {
              "entryPoint": null,
              "id": 50,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_5397": {
              "entryPoint": null,
              "id": 5397,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_5947": {
              "entryPoint": null,
              "id": 5947,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_transferOwnership_146": {
              "entryPoint": 149,
              "id": 146,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "abi_decode_address_fromMemory": {
              "entryPoint": 229,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
              "entryPoint": 258,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nativeSrc": "0:784:24",
                "nodeType": "YulBlock",
                "src": "0:784:24",
                "statements": [
                  {
                    "nativeSrc": "6:3:24",
                    "nodeType": "YulBlock",
                    "src": "6:3:24",
                    "statements": []
                  },
                  {
                    "body": {
                      "nativeSrc": "74:117:24",
                      "nodeType": "YulBlock",
                      "src": "74:117:24",
                      "statements": [
                        {
                          "nativeSrc": "84:22:24",
                          "nodeType": "YulAssignment",
                          "src": "84:22:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "99:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "99:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nativeSrc": "93:5:24",
                              "nodeType": "YulIdentifier",
                              "src": "93:5:24"
                            },
                            "nativeSrc": "93:13:24",
                            "nodeType": "YulFunctionCall",
                            "src": "93:13:24"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nativeSrc": "84:5:24",
                              "nodeType": "YulIdentifier",
                              "src": "84:5:24"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "169:16:24",
                            "nodeType": "YulBlock",
                            "src": "169:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "178:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "178:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "181:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "181:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "171:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "171:6:24"
                                  },
                                  "nativeSrc": "171:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "171:12:24"
                                },
                                "nativeSrc": "171:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "171:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "128:5:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "128:5:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "139:5:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "139:5:24"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "154:3:24",
                                                "nodeType": "YulLiteral",
                                                "src": "154:3:24",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "159:1:24",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:24",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "150:3:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "150:3:24"
                                            },
                                            "nativeSrc": "150:11:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "150:11:24"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "163:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "163:1:24",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "146:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "146:3:24"
                                        },
                                        "nativeSrc": "146:19:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "146:19:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "135:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "135:3:24"
                                    },
                                    "nativeSrc": "135:31:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "135:31:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "125:2:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:2:24"
                                },
                                "nativeSrc": "125:42:24",
                                "nodeType": "YulFunctionCall",
                                "src": "125:42:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "118:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "118:6:24"
                            },
                            "nativeSrc": "118:50:24",
                            "nodeType": "YulFunctionCall",
                            "src": "118:50:24"
                          },
                          "nativeSrc": "115:70:24",
                          "nodeType": "YulIf",
                          "src": "115:70:24"
                        }
                      ]
                    },
                    "name": "abi_decode_address_fromMemory",
                    "nativeSrc": "14:177:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nativeSrc": "53:6:24",
                        "nodeType": "YulTypedName",
                        "src": "53:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nativeSrc": "64:5:24",
                        "nodeType": "YulTypedName",
                        "src": "64:5:24",
                        "type": ""
                      }
                    ],
                    "src": "14:177:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "311:263:24",
                      "nodeType": "YulBlock",
                      "src": "311:263:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "357:16:24",
                            "nodeType": "YulBlock",
                            "src": "357:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "366:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "366:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "369:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "369:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "359:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "359:6:24"
                                  },
                                  "nativeSrc": "359:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "359:12:24"
                                },
                                "nativeSrc": "359:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "359:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "332:7:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "332:7:24"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "341:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "341:9:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "328:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "328:3:24"
                                },
                                "nativeSrc": "328:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "328:23:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "353:2:24",
                                "nodeType": "YulLiteral",
                                "src": "353:2:24",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "324:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "324:3:24"
                            },
                            "nativeSrc": "324:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "324:32:24"
                          },
                          "nativeSrc": "321:52:24",
                          "nodeType": "YulIf",
                          "src": "321:52:24"
                        },
                        {
                          "nativeSrc": "382:50:24",
                          "nodeType": "YulAssignment",
                          "src": "382:50:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "422:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "422:9:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address_fromMemory",
                              "nativeSrc": "392:29:24",
                              "nodeType": "YulIdentifier",
                              "src": "392:29:24"
                            },
                            "nativeSrc": "392:40:24",
                            "nodeType": "YulFunctionCall",
                            "src": "392:40:24"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nativeSrc": "382:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "382:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "441:59:24",
                          "nodeType": "YulAssignment",
                          "src": "441:59:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "485:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "485:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "496:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "496:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "481:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:3:24"
                                },
                                "nativeSrc": "481:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "481:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address_fromMemory",
                              "nativeSrc": "451:29:24",
                              "nodeType": "YulIdentifier",
                              "src": "451:29:24"
                            },
                            "nativeSrc": "451:49:24",
                            "nodeType": "YulFunctionCall",
                            "src": "451:49:24"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nativeSrc": "441:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "441:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "509:59:24",
                          "nodeType": "YulAssignment",
                          "src": "509:59:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "553:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "553:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "564:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "564:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "549:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:3:24"
                                },
                                "nativeSrc": "549:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "549:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address_fromMemory",
                              "nativeSrc": "519:29:24",
                              "nodeType": "YulIdentifier",
                              "src": "519:29:24"
                            },
                            "nativeSrc": "519:49:24",
                            "nodeType": "YulFunctionCall",
                            "src": "519:49:24"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nativeSrc": "509:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "509:6:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
                    "nativeSrc": "196:378:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "261:9:24",
                        "nodeType": "YulTypedName",
                        "src": "261:9:24",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "272:7:24",
                        "nodeType": "YulTypedName",
                        "src": "272:7:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "284:6:24",
                        "nodeType": "YulTypedName",
                        "src": "284:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "292:6:24",
                        "nodeType": "YulTypedName",
                        "src": "292:6:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "300:6:24",
                        "nodeType": "YulTypedName",
                        "src": "300:6:24",
                        "type": ""
                      }
                    ],
                    "src": "196:378:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "680:102:24",
                      "nodeType": "YulBlock",
                      "src": "680:102:24",
                      "statements": [
                        {
                          "nativeSrc": "690:26:24",
                          "nodeType": "YulAssignment",
                          "src": "690:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "702:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "702:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "713:2:24",
                                "nodeType": "YulLiteral",
                                "src": "713:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "698:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "698:3:24"
                            },
                            "nativeSrc": "698:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "698:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "690:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "690:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "732:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "732:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "747:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "747:6:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "763:3:24",
                                            "nodeType": "YulLiteral",
                                            "src": "763:3:24",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "768:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "768:1:24",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "759:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "759:3:24"
                                        },
                                        "nativeSrc": "759:11:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "759:11:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "772:1:24",
                                        "nodeType": "YulLiteral",
                                        "src": "772:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "755:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "755:3:24"
                                    },
                                    "nativeSrc": "755:19:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "755:19:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "743:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "743:3:24"
                                },
                                "nativeSrc": "743:32:24",
                                "nodeType": "YulFunctionCall",
                                "src": "743:32:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "725:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "725:6:24"
                            },
                            "nativeSrc": "725:51:24",
                            "nodeType": "YulFunctionCall",
                            "src": "725:51:24"
                          },
                          "nativeSrc": "725:51:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "725:51:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nativeSrc": "579:203:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "649:9:24",
                        "nodeType": "YulTypedName",
                        "src": "649:9:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "660:6:24",
                        "nodeType": "YulTypedName",
                        "src": "660:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "671:4:24",
                        "nodeType": "YulTypedName",
                        "src": "671:4:24",
                        "type": ""
                      }
                    ],
                    "src": "579:203:24"
                  }
                ]
              },
              "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
              "id": 24,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "60c06040523480156200001157600080fd5b5060405162001e9138038062001e91833981016040819052620000349162000102565b8181806001600160a01b0381166200006657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000718162000095565b50506001600160a01b03908116608052600180559290921660a052506200014c9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000fd57600080fd5b919050565b6000806000606084860312156200011857600080fd5b6200012384620000e5565b92506200013360208501620000e5565b91506200014360408501620000e5565b90509250925092565b60805160a051611d0a620001876000396000818161030001528181610a8b01528181610ce501526114cd0152600061038c0152611d0a6000f3fe6080604052600436106101095760003560e01c8063239bd611116100955780638da5cb5b116100645780638da5cb5b146103c3578063945a322a146103e1578063973a814e14610401578063ba7c873214610417578063f2fde38b1461043757600080fd5b8063239bd6111461033a57806337001ca41461035a5780635e280f111461037a578063715018a6146103ae57600080fd5b80630ca1bdab116100dc5780630ca1bdab146101ce5780630d7a55ba146101e157806310619dce146102ae5780631b6b204a146102ce57806322e669d3146102ee57600080fd5b806303731b9e1461010e57806304a5bf1e14610141578063069c9fae1461017c5780630a790eb71461019e575b600080fd5b34801561011a57600080fd5b5061012e610129366004611772565b610457565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b5061016161015c3660046117f9565b610488565b60408051825181526020928301519281019290925201610138565b34801561018857600080fd5b5061019c610197366004611772565b6106d7565b005b3480156101aa57600080fd5b506101be6101b9366004611853565b610709565b6040516101389493929190611890565b61012e6101dc3660046118e1565b6107c8565b3480156101ed57600080fd5b506102596101fc366004611853565b6006602081905260009182526040909120805460018201546002830154600384015460048501546005860154959096015493956001600160a01b0393841695928416949193811692600160a01b90910463ffffffff169160ff1688565b604080519889526001600160a01b0397881660208a01529587169588019590955260608701939093529316608085015263ffffffff90921660a084015260c0830191909152151560e082015261010001610138565b3480156102ba57600080fd5b5061019c6102c9366004611950565b610e67565b3480156102da57600080fd5b5061019c6102e9366004611950565b610e91565b3480156102fa57600080fd5b506103227f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b34801561034657600080fd5b5061012e6103553660046119b7565b610ebb565b34801561036657600080fd5b50600354610322906001600160a01b031681565b34801561038657600080fd5b506103227f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ba57600080fd5b5061019c6110a8565b3480156103cf57600080fd5b506000546001600160a01b0316610322565b3480156103ed57600080fd5b5061019c6103fc366004611a5b565b6110bc565b34801561040d57600080fd5b5061012e60075481565b34801561042357600080fd5b50600254610322906001600160a01b031681565b34801561044357600080fd5b5061019c610452366004611950565b611139565b6005602052816000526040600020818154811061047357600080fd5b90600052602060002001600091509150505481565b6040805180820182526000808252602080830182905287825260048152838220845160c0810190955280546001600160a01b031685526001810180549495939491928401916104d690611a90565b80601f016020809104026020016040519081016040528092919081815260200182805461050290611a90565b801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050815260200160028201548152602001600382018054806020026020016040519081016040528092919081815260200182805480156105bb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161059d575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561063f57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106025790505b50505091835250506005919091015460ff161515602091820152815160408084015181519384018b90526001600160a01b039092169083015260608201529091506106cd90869060800160408051601f198184030181526020601f89018190048102840181019092528783529190889088908190840183828082843760009201829052509250611177915050565b9695505050505050565b6106df6111ab565b6107056106f46000546001600160a01b031690565b6001600160a01b03841690836111d8565b5050565b600460205260009081526040902080546001820180546001600160a01b03909216929161073590611a90565b80601f016020809104026020016040519081016040528092919081815260200182805461076190611a90565b80156107ae5780601f10610783576101008083540402835291602001916107ae565b820191906000526020600020905b81548152906001019060200180831161079157829003601f168201915b50505050600283015460059093015491929160ff16905084565b60006107d261123c565b6000868152600460209081526040808320815160c0810190925280546001600160a01b03168252600181018054929391929184019161081090611a90565b80601f016020809104026020016040519081016040528092919081815260200182805461083c90611a90565b80156108895780601f1061085e57610100808354040283529160200191610889565b820191906000526020600020905b81548152906001019060200180831161086c57829003601f168201915b5050505050815260200160028201548152602001600382018054806020026020016040519081016040528092919081815260200182805480156108f557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108d7575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561097957602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161093c5790505b50505091835250506005919091015460ff16151560209091015260a08101519091506109e15760405162461bcd60e51b815260206004820152601260248201527153657276696365206e6f742061637469766560701b60448201526064015b60405180910390fd5b6109eb8187611266565b610a2c5760405162461bcd60e51b8152602060048201526012602482015271151bdad95b881b9bdd081858d8d95c1d195960721b60448201526064016109d8565b610a3681866112cb565b610a785760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016109d8565b6040810151610ab5906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903390309061131e565b60078054906000610ac583611ae0565b909155506040805160208101929092526bffffffffffffffffffffffff193360601b1690820152426054820152607401604051602081830303815290604052805190602001209150604051806101000160405280888152602001336001600160a01b0316815260200182600001516001600160a01b0316815260200182604001518152602001876001600160a01b031681526020018663ffffffff16815260200142815260200160001515815250600660008481526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160040160146101000a81548163ffffffff021916908363ffffffff16021790555060c0820151816005015560e08201518160060160006101000a81548160ff02191690831515021790555090505086827fba3d72ca72a32058f329441a3a0a404295eeea063467b1954afecb143aabb99b3384604001518a8a604051610cdb94939291906001600160a01b03948516815260208101939093529216604082015263ffffffff91909116606082015260800190565b60405180910390a37f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316141580610d2a5750468563ffffffff1614155b15610dc5576000828152600660208181526040928390208351610100810185528154815260018201546001600160a01b039081169382019390935260028201548316948101949094526003810154606085015260048101549182166080850152600160a01b90910463ffffffff1660a0840152600581015460c0840152015460ff16151560e0820152610dc0908390868661135d565b610e54565b6000828152600660208181526040928390208351610100810185528154815260018201546001600160a01b039081169382019390935260028201548316948101949094526003810154606085015260048101549182166080850152600160a01b90910463ffffffff1660a0840152600581015460c0840152015460ff16151560e0820152610e549083906114b5565b50610e5e60018055565b95945050505050565b610e6f6111ab565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610e996111ab565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600033888842604051602001610ed49493929190611af9565b60408051601f19818403018152828252805160209182012060c0840183523384528251601f8c018390048302810183019093528a8352935082810191908b908b9081908401838280828437600092019190915250505090825250602080820189905260408051888302818101840183528982529190930192918991899182919085019084908082843760009201919091525050509082525060408051602086810282810182019093528682529283019290918791879182918501908490808284376000920182905250938552505060016020938401819052858352600484526040909220845181546001600160a01b0319166001600160a01b039091161781559284015191830191610fe7915082611b8c565b50604082015160028201556060820151805161100d916003840191602090910190611636565b506080820151805161102991600484019160209091019061169b565b5060a091909101516005918201805460ff19169115159190911790553360008181526020928352604080822080546001810182559083529184902090910184905551888152909183917f1bd0bc8e83e4b1ca39e055b0ee51fbde9f6004eef864db76dd1fc7386693eb79910160405180910390a3979650505050505050565b6110b06111ab565b6110ba600061153c565b565b6000828152600460205260409020546001600160a01b031633146111165760405162461bcd60e51b81526020600482015260116024820152702737ba1039b2b93b34b1b29037bbb732b960791b60448201526064016109d8565b600091825260046020526040909120600501805460ff1916911515919091179055565b6111416111ab565b6001600160a01b03811661116b57604051631e4fbdf760e01b8152600060048201526024016109d8565b6111748161153c565b50565b505060408051808201825260008082526020918201819052825180840190935266038d7ea4c6800083529082015292915050565b6000546001600160a01b031633146110ba5760405163118cdaa760e01b81523360048201526024016109d8565b6040516001600160a01b0383811660248301526044820183905261123791859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061158c565b505050565b60026001540361125f57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000805b8360600151518110156112bf57826001600160a01b03168460600151828151811061129757611297611c4c565b60200260200101516001600160a01b0316036112b75760019150506112c5565b60010161126a565b50600090505b92915050565b6000805b8360800151518110156112bf578263ffffffff16846080015182815181106112f9576112f9611c4c565b602002602001015163ffffffff16036113165760019150506112c5565b6001016112cf565b6040516001600160a01b0384811660248301528381166044830152606482018390526113579186918216906323b872dd90608401611205565b50505050565b6040830151606084015160808501516000929190606461137e836063611c62565b6113889190611c79565b604080516001600160a01b0395861660208201529081019390935292166060820152608081019190915260a001604051602081830303815290604052905060006114638560a001518787604001518860600151604051602001611407939291909283526001600160a01b03919091166020830152604082015260600190565b60408051601f198184030181526020601f890181900481028401810190925287835291908890889081908401838280828437600092018290525060408051808201909152348152602081019190915292503391508890506115fd565b60a08601516040805163ffffffff90921682526020820183905291925087917fb8cb06e60d12513400244bca527994b43b879ff6428e977f67071d81497b6f5f910160405180910390a2505050505050565b604081015160608201516114f3916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916111d8565b6000828152600660208190526040808320909101805460ff191660011790555183917ff2baea2668e36a27a898b8c745decb4439ff61ae04d545dcc6954b84bd3e3c4291a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080602060008451602086016000885af1806115af576040513d6000823e3d81fd5b50506000513d915081156115c75780600114156115d4565b6001600160a01b0384163b155b1561135757604051635274afe760e01b81526001600160a01b03851660048201526024016109d8565b600086864260405160200161161493929190611c9b565b6040516020818303038152906040528051906020012090509695505050505050565b82805482825590600052602060002090810192821561168b579160200282015b8281111561168b57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611656565b50611697929150611741565b5090565b8280548282559060005260206000209060070160089004810192821561168b5791602002820160005b8382111561170857835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026116c4565b80156117385782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611708565b50506116979291505b5b808211156116975760008155600101611742565b80356001600160a01b038116811461176d57600080fd5b919050565b6000806040838503121561178557600080fd5b61178e83611756565b946020939093013593505050565b803563ffffffff8116811461176d57600080fd5b60008083601f8401126117c257600080fd5b50813567ffffffffffffffff8111156117da57600080fd5b6020830191508360208285010111156117f257600080fd5b9250929050565b6000806000806060858703121561180f57600080fd5b8435935061181f6020860161179c565b9250604085013567ffffffffffffffff81111561183b57600080fd5b611847878288016117b0565b95989497509550505050565b60006020828403121561186557600080fd5b5035919050565b60005b8381101561188757818101518382015260200161186f565b50506000910152565b60018060a01b038516815260806020820152600084518060808401526118bd8160a085016020890161186c565b604083019490945250901515606082015260a0601f909201601f1916010192915050565b6000806000806000608086880312156118f957600080fd5b8535945061190960208701611756565b93506119176040870161179c565b9250606086013567ffffffffffffffff81111561193357600080fd5b61193f888289016117b0565b969995985093965092949392505050565b60006020828403121561196257600080fd5b61196b82611756565b9392505050565b60008083601f84011261198457600080fd5b50813567ffffffffffffffff81111561199c57600080fd5b6020830191508360208260051b85010111156117f257600080fd5b60008060008060008060006080888a0312156119d257600080fd5b873567ffffffffffffffff808211156119ea57600080fd5b6119f68b838c016117b0565b909950975060208a0135965060408a0135915080821115611a1657600080fd5b611a228b838c01611972565b909650945060608a0135915080821115611a3b57600080fd5b50611a488a828b01611972565b989b979a50959850939692959293505050565b60008060408385031215611a6e57600080fd5b8235915060208301358015158114611a8557600080fd5b809150509250929050565b600181811c90821680611aa457607f821691505b602082108103611ac457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611af257611af2611aca565b5060010190565b6bffffffffffffffffffffffff198560601b16815282846014830137601492019182015260340192915050565b634e487b7160e01b600052604160045260246000fd5b601f821115611237576000816000526020600020601f850160051c81016020861015611b655750805b601f850160051c820191505b81811015611b8457828155600101611b71565b505050505050565b815167ffffffffffffffff811115611ba657611ba6611b26565b611bba81611bb48454611a90565b84611b3c565b602080601f831160018114611bef5760008415611bd75750858301515b600019600386901b1c1916600185901b178555611b84565b600085815260208120601f198616915b82811015611c1e57888601518255948401946001909101908401611bff565b5085821015611c3c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176112c5576112c5611aca565b600082611c9657634e487b7160e01b600052601260045260246000fd5b500490565b63ffffffff60e01b8460e01b16815260008351611cbf81600485016020880161186c565b6004920191820192909252602401939250505056fea264697066735822122033bcf3a3be30ebd4c6e4f46e7afc03dcbdabb034f463d62922506377ec4d653b64736f6c63430008160033",
          "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E91 CODESIZE SUB DUP1 PUSH3 0x1E91 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x102 JUMP JUMPDEST DUP2 DUP2 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x66 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x71 DUP2 PUSH3 0x95 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 SSTORE SWAP3 SWAP1 SWAP3 AND PUSH1 0xA0 MSTORE POP PUSH3 0x14C SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x123 DUP5 PUSH3 0xE5 JUMP JUMPDEST SWAP3 POP PUSH3 0x133 PUSH1 0x20 DUP6 ADD PUSH3 0xE5 JUMP JUMPDEST SWAP2 POP PUSH3 0x143 PUSH1 0x40 DUP6 ADD PUSH3 0xE5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1D0A PUSH3 0x187 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x300 ADD MSTORE DUP2 DUP2 PUSH2 0xA8B ADD MSTORE DUP2 DUP2 PUSH2 0xCE5 ADD MSTORE PUSH2 0x14CD ADD MSTORE PUSH1 0x0 PUSH2 0x38C ADD MSTORE PUSH2 0x1D0A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x239BD611 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x945A322A EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x973A814E EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xBA7C8732 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x239BD611 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x37001CA4 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA1BDAB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xCA1BDAB EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xD7A55BA EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x10619DCE EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x1B6B204A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x22E669D3 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3731B9E EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x4A5BF1E EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x69C9FAE EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA790EB7 EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD SWAP6 SWAP1 SWAP7 ADD SLOAD SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP3 DUP5 AND SWAP5 SWAP2 SWAP4 DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP2 PUSH1 0xFF AND DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x20 DUP11 ADD MSTORE SWAP6 DUP8 AND SWAP6 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B7 JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x322 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x10A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x322 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x3FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x10BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x322 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP8 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP6 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x4D6 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x502 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x524 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x532 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59D JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x63F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x602 JUMPI SWAP1 POP JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP2 MLOAD SWAP4 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH2 0x6CD SWAP1 DUP7 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP5 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP4 MSTORE SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH2 0x1177 SWAP2 POP POP JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x705 PUSH2 0x6F4 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0x11D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x735 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x761 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x783 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x791 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x810 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x83C SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x889 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x889 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x86C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D7 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x979 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x93C JUMPI SWAP1 POP JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53657276696365206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EB DUP2 DUP8 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151BDAD95B881B9BDD081858D8D95C1D1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0xA36 DUP2 DUP7 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0xA78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10DA185A5B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0xAB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xAC5 DUP4 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP7 DUP3 PUSH32 0xBA3D72CA72A32058F329441A3A0A404295EEEA063467B1954AFECB143AABB99B CALLER DUP5 PUSH1 0x40 ADD MLOAD DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xCDB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 PUSH2 0xD2A JUMPI POP CHAINID DUP6 PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP2 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0xDC0 SWAP1 DUP4 SWAP1 DUP7 DUP7 PUSH2 0x135D JUMP JUMPDEST PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP2 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0xE54 SWAP1 DUP4 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST POP PUSH2 0xE5E PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE99 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER DUP9 DUP9 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0xC0 DUP5 ADD DUP4 MSTORE CALLER DUP5 MSTORE DUP3 MLOAD PUSH1 0x1F DUP13 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP11 DUP4 MSTORE SWAP4 POP DUP3 DUP2 ADD SWAP2 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP9 DUP4 MUL DUP2 DUP2 ADD DUP5 ADD DUP4 MSTORE DUP10 DUP3 MSTORE SWAP2 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP10 SWAP2 DUP10 SWAP2 DUP3 SWAP2 SWAP1 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP7 DUP2 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP7 DUP3 MSTORE SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 DUP8 SWAP2 DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE DUP6 DUP4 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP3 DUP5 ADD MLOAD SWAP2 DUP4 ADD SWAP2 PUSH2 0xFE7 SWAP2 POP DUP3 PUSH2 0x1B8C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x100D SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1636 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x1029 SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x169B JUMP JUMPDEST POP PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP5 SWAP1 SSTORE MLOAD DUP9 DUP2 MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x1BD0BC8E83E4B1CA39E055B0EE51FBDE9F6004EEF864DB76DD1FC7386693EB79 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10B0 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x10BA PUSH1 0x0 PUSH2 0x153C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA1039B2B93B34B1B29037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x1174 DUP2 PUSH2 0x153C JUMP JUMPDEST POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH7 0x38D7EA4C68000 DUP4 MSTORE SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1237 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x158C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x12BF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x60 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1297 JUMPI PUSH2 0x1297 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x12B7 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x126A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x12BF JUMPI DUP3 PUSH4 0xFFFFFFFF AND DUP5 PUSH1 0x80 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12F9 JUMPI PUSH2 0x12F9 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND SUB PUSH2 0x1316 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1357 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x1205 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x64 PUSH2 0x137E DUP4 PUSH1 0x63 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1388 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1463 DUP6 PUSH1 0xA0 ADD MLOAD DUP8 DUP8 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1407 SWAP4 SWAP3 SWAP2 SWAP1 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP5 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP4 MSTORE SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 POP CALLER SWAP2 POP DUP9 SWAP1 POP PUSH2 0x15FD JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP8 SWAP2 PUSH32 0xB8CB06E60D12513400244BCA527994B43B879FF6428E977F67071D81497B6F5F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x14F3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP4 SWAP2 PUSH32 0xF2BAEA2668E36A27A898B8C745DECB4439FF61AE04D545DCC6954B84BD3E3C42 SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x15AF JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x15C7 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1614 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x168B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x168B JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1656 JUMP JUMPDEST POP PUSH2 0x1697 SWAP3 SWAP2 POP PUSH2 0x1741 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x168B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x1708 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x16C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1738 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x1708 JUMP JUMPDEST POP POP PUSH2 0x1697 SWAP3 SWAP2 POP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1697 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1742 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x176D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x178E DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x176D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x181F PUSH1 0x20 DUP7 ADD PUSH2 0x179C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1847 DUP8 DUP3 DUP9 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1887 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x186F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP5 MLOAD DUP1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x18BD DUP2 PUSH1 0xA0 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x186C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x1909 PUSH1 0x20 DUP8 ADD PUSH2 0x1756 JUMP JUMPDEST SWAP4 POP PUSH2 0x1917 PUSH1 0x40 DUP8 ADD PUSH2 0x179C JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193F DUP9 DUP3 DUP10 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196B DUP3 PUSH2 0x1756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x199C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x19D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19F6 DUP12 DUP4 DUP13 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A22 DUP12 DUP4 DUP13 ADD PUSH2 0x1972 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A48 DUP11 DUP3 DUP12 ADD PUSH2 0x1972 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1AA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1AF2 JUMPI PUSH2 0x1AF2 PUSH2 0x1ACA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP6 PUSH1 0x60 SHL AND DUP2 MSTORE DUP3 DUP5 PUSH1 0x14 DUP4 ADD CALLDATACOPY PUSH1 0x14 SWAP3 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1237 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1B65 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B84 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B71 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BA6 JUMPI PUSH2 0x1BA6 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x1BBA DUP2 PUSH2 0x1BB4 DUP5 SLOAD PUSH2 0x1A90 JUMP JUMPDEST DUP5 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BEF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1BD7 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C1E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1BFF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1C3C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x12C5 JUMPI PUSH2 0x12C5 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C96 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP5 PUSH1 0xE0 SHL AND DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1CBF DUP2 PUSH1 0x4 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x186C JUMP JUMPDEST PUSH1 0x4 SWAP3 ADD SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xBC RETURN LOG3 0xBE ADDRESS 0xEB 0xD4 0xC6 0xE4 DELEGATECALL PUSH15 0x7AFC03DCBDABB034F463D629225063 PUSH24 0xEC4D653B64736F6C63430008160033000000000000000000 ",
          "sourceMap": "510:8141:20:-:0;;;2015:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2116:9;2127;;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;725:51:24;698:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;;467:20:21;;::::1;;::::0;1857:1:10;2061:21;;2148:22:20;;;::::1;;::::0;-1:-1:-1;510:8141:20;;-1:-1:-1;510:8141:20;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:24:-;93:13;;-1:-1:-1;;;;;135:31:24;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:203::-;510:8141:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@_callOptionalReturn_1415": {
              "entryPoint": 5516,
              "id": 1415,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_checkOwner_84": {
              "entryPoint": 4523,
              "id": 84,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_isChainSupported_5804": {
              "entryPoint": 4811,
              "id": 5804,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@_isTokenAccepted_5766": {
              "entryPoint": 4710,
              "id": 5766,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@_lzSend_5976": {
              "entryPoint": 5629,
              "id": 5976,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "@_msgSender_1469": {
              "entryPoint": null,
              "id": 1469,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_nonReentrantAfter_1544": {
              "entryPoint": null,
              "id": 1544,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_nonReentrantBefore_1536": {
              "entryPoint": 4668,
              "id": 1536,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_quote_5996": {
              "entryPoint": 4471,
              "id": 5996,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@_routeDirectPayment_5682": {
              "entryPoint": 5301,
              "id": 5682,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_routeWithSwap_5652": {
              "entryPoint": 4957,
              "id": 5652,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@_transferOwnership_146": {
              "entryPoint": 5436,
              "id": 146,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@endpoint_5920": {
              "entryPoint": null,
              "id": 5920,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@owner_67": {
              "entryPoint": null,
              "id": 67,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@paymentRequests_5341": {
              "entryPoint": null,
              "id": 5341,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@providerServices_5336": {
              "entryPoint": 1111,
              "id": 5336,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@pyusdOFTAdapter_5294": {
              "entryPoint": null,
              "id": 5294,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@pyusd_5290": {
              "entryPoint": null,
              "id": 5290,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@quotePayment_5839": {
              "entryPoint": 1160,
              "id": 5839,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@recoverTokens_5912": {
              "entryPoint": 1751,
              "id": 5912,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@registerService_5456": {
              "entryPoint": 3771,
              "id": 5456,
              "parameterSlots": 7,
              "returnSlots": 1
            },
            "@renounceOwnership_98": {
              "entryPoint": 4264,
              "id": 98,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@requestCounter_5343": {
              "entryPoint": null,
              "id": 5343,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@requestPayment_5588": {
              "entryPoint": 1992,
              "id": 5588,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "@safeTransferFrom_1065": {
              "entryPoint": 4894,
              "id": 1065,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@safeTransfer_1038": {
              "entryPoint": 4568,
              "id": 1038,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@services_5331": {
              "entryPoint": 1801,
              "id": 5331,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@setPYUSDOFTAdapter_5865": {
              "entryPoint": 3687,
              "id": 5865,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@setTokenSwapComposer_5852": {
              "entryPoint": 3729,
              "id": 5852,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@tokenSwapComposer_5292": {
              "entryPoint": null,
              "id": 5292,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@transferOwnership_126": {
              "entryPoint": 4409,
              "id": 126,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@updateServiceStatus_5892": {
              "entryPoint": 4284,
              "id": 5892,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_decode_address": {
              "entryPoint": 5974,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_decode_array_address_dyn_calldata": {
              "entryPoint": 6514,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_bytes_calldata": {
              "entryPoint": 6064,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_address": {
              "entryPoint": 6480,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_uint256": {
              "entryPoint": 6002,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes32": {
              "entryPoint": 6227,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_bytes32t_addresst_uint32t_bytes_calldata_ptr": {
              "entryPoint": 6369,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 5
            },
            "abi_decode_tuple_t_bytes32t_bool": {
              "entryPoint": 6747,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes32t_uint32t_bytes_calldata_ptr": {
              "entryPoint": 6137,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 4
            },
            "abi_decode_tuple_t_string_calldata_ptrt_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptr": {
              "entryPoint": 6583,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 7
            },
            "abi_decode_uint32": {
              "entryPoint": 6044,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_address_t_string_calldata_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 6905,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_uint32_t_bytes_memory_ptr_t_uint256__to_t_uint32_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 7323,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_bool__to_t_address_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
              "entryPoint": 6288,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_uint256_t_address_t_uint32__to_t_address_t_uint256_t_address_t_uint32__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_address_t_uint32_t_uint256_t_bool__to_t_bytes32_t_address_t_address_t_uint256_t_address_t_uint32_t_uint256_t_bool__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 9,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes32_t_address_t_uint256__to_t_bytes32_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_contract$_IERC20_$967__to_t_address__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_1b5b860d9d6895694610fb6500930b0243362ecab80509ccc9088c22893e9b33__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_4d867bd14c37eceafe3e477a36f0f794e64eba2f6941b704e608dffa55286d0a__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_6ade8173b8e4fc1a5ad20adac81a8ddca01b3c342ab50a80303220df93f507ff__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_8ad923b2e364ce1aeaf4231bbcdfbcf3913f3afdc5e95d213d4d8bc5188fdf23__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_struct$_MessagingFee_$5932_memory_ptr__to_t_struct$_MessagingFee_$5932_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "array_dataslot_string_storage": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "checked_div_t_uint256": {
              "entryPoint": 7289,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_mul_t_uint256": {
              "entryPoint": 7266,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "clean_up_bytearray_end_slots_string_storage": {
              "entryPoint": 6972,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
              "entryPoint": 7052,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "copy_memory_to_memory_with_cleanup": {
              "entryPoint": 6252,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "extract_byte_array_length": {
              "entryPoint": 6800,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "extract_used_part_and_set_length_of_short_byte_array": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "increment_t_uint256": {
              "entryPoint": 6880,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "panic_error_0x11": {
              "entryPoint": 6858,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x32": {
              "entryPoint": 7244,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 6950,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nativeSrc": "0:15552:24",
                "nodeType": "YulBlock",
                "src": "0:15552:24",
                "statements": [
                  {
                    "nativeSrc": "6:3:24",
                    "nodeType": "YulBlock",
                    "src": "6:3:24",
                    "statements": []
                  },
                  {
                    "body": {
                      "nativeSrc": "63:124:24",
                      "nodeType": "YulBlock",
                      "src": "63:124:24",
                      "statements": [
                        {
                          "nativeSrc": "73:29:24",
                          "nodeType": "YulAssignment",
                          "src": "73:29:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "95:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "95:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "82:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "82:12:24"
                            },
                            "nativeSrc": "82:20:24",
                            "nodeType": "YulFunctionCall",
                            "src": "82:20:24"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nativeSrc": "73:5:24",
                              "nodeType": "YulIdentifier",
                              "src": "73:5:24"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "165:16:24",
                            "nodeType": "YulBlock",
                            "src": "165:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "174:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "174:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "177:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "177:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "167:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:6:24"
                                  },
                                  "nativeSrc": "167:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "167:12:24"
                                },
                                "nativeSrc": "167:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "167:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "124:5:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "124:5:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "135:5:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "135:5:24"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "150:3:24",
                                                "nodeType": "YulLiteral",
                                                "src": "150:3:24",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "155:1:24",
                                                "nodeType": "YulLiteral",
                                                "src": "155:1:24",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "146:3:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "146:3:24"
                                            },
                                            "nativeSrc": "146:11:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "146:11:24"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "159:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "159:1:24",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "142:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "142:3:24"
                                        },
                                        "nativeSrc": "142:19:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "142:19:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "131:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "131:3:24"
                                    },
                                    "nativeSrc": "131:31:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "131:31:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "121:2:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "121:2:24"
                                },
                                "nativeSrc": "121:42:24",
                                "nodeType": "YulFunctionCall",
                                "src": "121:42:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "114:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "114:6:24"
                            },
                            "nativeSrc": "114:50:24",
                            "nodeType": "YulFunctionCall",
                            "src": "114:50:24"
                          },
                          "nativeSrc": "111:70:24",
                          "nodeType": "YulIf",
                          "src": "111:70:24"
                        }
                      ]
                    },
                    "name": "abi_decode_address",
                    "nativeSrc": "14:173:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nativeSrc": "42:6:24",
                        "nodeType": "YulTypedName",
                        "src": "42:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nativeSrc": "53:5:24",
                        "nodeType": "YulTypedName",
                        "src": "53:5:24",
                        "type": ""
                      }
                    ],
                    "src": "14:173:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "279:167:24",
                      "nodeType": "YulBlock",
                      "src": "279:167:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "325:16:24",
                            "nodeType": "YulBlock",
                            "src": "325:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "334:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "334:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "337:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "337:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "327:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "327:6:24"
                                  },
                                  "nativeSrc": "327:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "327:12:24"
                                },
                                "nativeSrc": "327:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "327:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "300:7:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "300:7:24"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "309:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "309:9:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "296:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "296:3:24"
                                },
                                "nativeSrc": "296:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "296:23:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "321:2:24",
                                "nodeType": "YulLiteral",
                                "src": "321:2:24",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "292:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "292:3:24"
                            },
                            "nativeSrc": "292:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "292:32:24"
                          },
                          "nativeSrc": "289:52:24",
                          "nodeType": "YulIf",
                          "src": "289:52:24"
                        },
                        {
                          "nativeSrc": "350:39:24",
                          "nodeType": "YulAssignment",
                          "src": "350:39:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "379:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "379:9:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nativeSrc": "360:18:24",
                              "nodeType": "YulIdentifier",
                              "src": "360:18:24"
                            },
                            "nativeSrc": "360:29:24",
                            "nodeType": "YulFunctionCall",
                            "src": "360:29:24"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nativeSrc": "350:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "350:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "398:42:24",
                          "nodeType": "YulAssignment",
                          "src": "398:42:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "425:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "425:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "436:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "436:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "421:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "421:3:24"
                                },
                                "nativeSrc": "421:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "421:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "408:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "408:12:24"
                            },
                            "nativeSrc": "408:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "408:32:24"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nativeSrc": "398:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "398:6:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256",
                    "nativeSrc": "192:254:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "237:9:24",
                        "nodeType": "YulTypedName",
                        "src": "237:9:24",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "248:7:24",
                        "nodeType": "YulTypedName",
                        "src": "248:7:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "260:6:24",
                        "nodeType": "YulTypedName",
                        "src": "260:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "268:6:24",
                        "nodeType": "YulTypedName",
                        "src": "268:6:24",
                        "type": ""
                      }
                    ],
                    "src": "192:254:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "552:76:24",
                      "nodeType": "YulBlock",
                      "src": "552:76:24",
                      "statements": [
                        {
                          "nativeSrc": "562:26:24",
                          "nodeType": "YulAssignment",
                          "src": "562:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "574:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "574:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "585:2:24",
                                "nodeType": "YulLiteral",
                                "src": "585:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "570:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:24"
                            },
                            "nativeSrc": "570:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "570:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "562:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "562:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "604:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "604:9:24"
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "615:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "615:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "597:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "597:6:24"
                            },
                            "nativeSrc": "597:25:24",
                            "nodeType": "YulFunctionCall",
                            "src": "597:25:24"
                          },
                          "nativeSrc": "597:25:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "597:25:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                    "nativeSrc": "451:177:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "521:9:24",
                        "nodeType": "YulTypedName",
                        "src": "521:9:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "532:6:24",
                        "nodeType": "YulTypedName",
                        "src": "532:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "543:4:24",
                        "nodeType": "YulTypedName",
                        "src": "543:4:24",
                        "type": ""
                      }
                    ],
                    "src": "451:177:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "681:115:24",
                      "nodeType": "YulBlock",
                      "src": "681:115:24",
                      "statements": [
                        {
                          "nativeSrc": "691:29:24",
                          "nodeType": "YulAssignment",
                          "src": "691:29:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "713:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "713:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "700:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "700:12:24"
                            },
                            "nativeSrc": "700:20:24",
                            "nodeType": "YulFunctionCall",
                            "src": "700:20:24"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nativeSrc": "691:5:24",
                              "nodeType": "YulIdentifier",
                              "src": "691:5:24"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "774:16:24",
                            "nodeType": "YulBlock",
                            "src": "774:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "783:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "783:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "786:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "786:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "776:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "776:6:24"
                                  },
                                  "nativeSrc": "776:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "776:12:24"
                                },
                                "nativeSrc": "776:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "776:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "742:5:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "742:5:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "753:5:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "753:5:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "760:10:24",
                                        "nodeType": "YulLiteral",
                                        "src": "760:10:24",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "749:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "749:3:24"
                                    },
                                    "nativeSrc": "749:22:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "749:22:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "739:2:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "739:2:24"
                                },
                                "nativeSrc": "739:33:24",
                                "nodeType": "YulFunctionCall",
                                "src": "739:33:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "732:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "732:6:24"
                            },
                            "nativeSrc": "732:41:24",
                            "nodeType": "YulFunctionCall",
                            "src": "732:41:24"
                          },
                          "nativeSrc": "729:61:24",
                          "nodeType": "YulIf",
                          "src": "729:61:24"
                        }
                      ]
                    },
                    "name": "abi_decode_uint32",
                    "nativeSrc": "633:163:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nativeSrc": "660:6:24",
                        "nodeType": "YulTypedName",
                        "src": "660:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nativeSrc": "671:5:24",
                        "nodeType": "YulTypedName",
                        "src": "671:5:24",
                        "type": ""
                      }
                    ],
                    "src": "633:163:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "873:275:24",
                      "nodeType": "YulBlock",
                      "src": "873:275:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "922:16:24",
                            "nodeType": "YulBlock",
                            "src": "922:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "931:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "931:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "934:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "934:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "924:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "924:6:24"
                                  },
                                  "nativeSrc": "924:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "924:12:24"
                                },
                                "nativeSrc": "924:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "924:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "901:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "901:6:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "909:4:24",
                                        "nodeType": "YulLiteral",
                                        "src": "909:4:24",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "897:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "897:3:24"
                                    },
                                    "nativeSrc": "897:17:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "897:17:24"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "916:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "916:3:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "893:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "893:3:24"
                                },
                                "nativeSrc": "893:27:24",
                                "nodeType": "YulFunctionCall",
                                "src": "893:27:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "886:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "886:6:24"
                            },
                            "nativeSrc": "886:35:24",
                            "nodeType": "YulFunctionCall",
                            "src": "886:35:24"
                          },
                          "nativeSrc": "883:55:24",
                          "nodeType": "YulIf",
                          "src": "883:55:24"
                        },
                        {
                          "nativeSrc": "947:30:24",
                          "nodeType": "YulAssignment",
                          "src": "947:30:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "970:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "970:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "957:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "957:12:24"
                            },
                            "nativeSrc": "957:20:24",
                            "nodeType": "YulFunctionCall",
                            "src": "957:20:24"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nativeSrc": "947:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "947:6:24"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "1020:16:24",
                            "nodeType": "YulBlock",
                            "src": "1020:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1029:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "1029:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1032:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "1032:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "1022:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1022:6:24"
                                  },
                                  "nativeSrc": "1022:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1022:12:24"
                                },
                                "nativeSrc": "1022:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "1022:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nativeSrc": "992:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "992:6:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1000:18:24",
                                "nodeType": "YulLiteral",
                                "src": "1000:18:24",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "989:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "989:2:24"
                            },
                            "nativeSrc": "989:30:24",
                            "nodeType": "YulFunctionCall",
                            "src": "989:30:24"
                          },
                          "nativeSrc": "986:50:24",
                          "nodeType": "YulIf",
                          "src": "986:50:24"
                        },
                        {
                          "nativeSrc": "1045:29:24",
                          "nodeType": "YulAssignment",
                          "src": "1045:29:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "1061:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "1061:6:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1069:4:24",
                                "nodeType": "YulLiteral",
                                "src": "1069:4:24",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "1057:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "1057:3:24"
                            },
                            "nativeSrc": "1057:17:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1057:17:24"
                          },
                          "variableNames": [
                            {
                              "name": "arrayPos",
                              "nativeSrc": "1045:8:24",
                              "nodeType": "YulIdentifier",
                              "src": "1045:8:24"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "1126:16:24",
                            "nodeType": "YulBlock",
                            "src": "1126:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1135:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "1135:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1138:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "1138:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "1128:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1128:6:24"
                                  },
                                  "nativeSrc": "1128:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1128:12:24"
                                },
                                "nativeSrc": "1128:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "1128:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "1097:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "1097:6:24"
                                      },
                                      {
                                        "name": "length",
                                        "nativeSrc": "1105:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "1105:6:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1093:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "1093:3:24"
                                    },
                                    "nativeSrc": "1093:19:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1093:19:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1114:4:24",
                                    "nodeType": "YulLiteral",
                                    "src": "1114:4:24",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1089:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "1089:3:24"
                                },
                                "nativeSrc": "1089:30:24",
                                "nodeType": "YulFunctionCall",
                                "src": "1089:30:24"
                              },
                              {
                                "name": "end",
                                "nativeSrc": "1121:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "1121:3:24"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "1086:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "1086:2:24"
                            },
                            "nativeSrc": "1086:39:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1086:39:24"
                          },
                          "nativeSrc": "1083:59:24",
                          "nodeType": "YulIf",
                          "src": "1083:59:24"
                        }
                      ]
                    },
                    "name": "abi_decode_bytes_calldata",
                    "nativeSrc": "801:347:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nativeSrc": "836:6:24",
                        "nodeType": "YulTypedName",
                        "src": "836:6:24",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nativeSrc": "844:3:24",
                        "nodeType": "YulTypedName",
                        "src": "844:3:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "arrayPos",
                        "nativeSrc": "852:8:24",
                        "nodeType": "YulTypedName",
                        "src": "852:8:24",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nativeSrc": "862:6:24",
                        "nodeType": "YulTypedName",
                        "src": "862:6:24",
                        "type": ""
                      }
                    ],
                    "src": "801:347:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "1275:427:24",
                      "nodeType": "YulBlock",
                      "src": "1275:427:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "1321:16:24",
                            "nodeType": "YulBlock",
                            "src": "1321:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1330:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "1330:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1333:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "1333:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "1323:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1323:6:24"
                                  },
                                  "nativeSrc": "1323:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1323:12:24"
                                },
                                "nativeSrc": "1323:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "1323:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "1296:7:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1296:7:24"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1305:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1305:9:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "1292:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "1292:3:24"
                                },
                                "nativeSrc": "1292:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "1292:23:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1317:2:24",
                                "nodeType": "YulLiteral",
                                "src": "1317:2:24",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "1288:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "1288:3:24"
                            },
                            "nativeSrc": "1288:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1288:32:24"
                          },
                          "nativeSrc": "1285:52:24",
                          "nodeType": "YulIf",
                          "src": "1285:52:24"
                        },
                        {
                          "nativeSrc": "1346:33:24",
                          "nodeType": "YulAssignment",
                          "src": "1346:33:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "1369:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "1369:9:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "1356:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "1356:12:24"
                            },
                            "nativeSrc": "1356:23:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1356:23:24"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nativeSrc": "1346:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "1346:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "1388:47:24",
                          "nodeType": "YulAssignment",
                          "src": "1388:47:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1420:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1420:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1431:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "1431:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1416:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "1416:3:24"
                                },
                                "nativeSrc": "1416:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "1416:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_uint32",
                              "nativeSrc": "1398:17:24",
                              "nodeType": "YulIdentifier",
                              "src": "1398:17:24"
                            },
                            "nativeSrc": "1398:37:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1398:37:24"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nativeSrc": "1388:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "1388:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "1444:46:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "1444:46:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1475:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1475:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1486:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "1486:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1471:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:3:24"
                                },
                                "nativeSrc": "1471:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "1471:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "1458:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "1458:12:24"
                            },
                            "nativeSrc": "1458:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1458:32:24"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nativeSrc": "1448:6:24",
                              "nodeType": "YulTypedName",
                              "src": "1448:6:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "1533:16:24",
                            "nodeType": "YulBlock",
                            "src": "1533:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1542:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "1542:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1545:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "1545:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "1535:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1535:6:24"
                                  },
                                  "nativeSrc": "1535:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1535:12:24"
                                },
                                "nativeSrc": "1535:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "1535:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "1505:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "1505:6:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1513:18:24",
                                "nodeType": "YulLiteral",
                                "src": "1513:18:24",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "1502:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "1502:2:24"
                            },
                            "nativeSrc": "1502:30:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1502:30:24"
                          },
                          "nativeSrc": "1499:50:24",
                          "nodeType": "YulIf",
                          "src": "1499:50:24"
                        },
                        {
                          "nativeSrc": "1558:84:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "1558:84:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1614:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1614:9:24"
                                  },
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1625:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1625:6:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1610:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "1610:3:24"
                                },
                                "nativeSrc": "1610:22:24",
                                "nodeType": "YulFunctionCall",
                                "src": "1610:22:24"
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "1634:7:24",
                                "nodeType": "YulIdentifier",
                                "src": "1634:7:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes_calldata",
                              "nativeSrc": "1584:25:24",
                              "nodeType": "YulIdentifier",
                              "src": "1584:25:24"
                            },
                            "nativeSrc": "1584:58:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1584:58:24"
                          },
                          "variables": [
                            {
                              "name": "value2_1",
                              "nativeSrc": "1562:8:24",
                              "nodeType": "YulTypedName",
                              "src": "1562:8:24",
                              "type": ""
                            },
                            {
                              "name": "value3_1",
                              "nativeSrc": "1572:8:24",
                              "nodeType": "YulTypedName",
                              "src": "1572:8:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "1651:18:24",
                          "nodeType": "YulAssignment",
                          "src": "1651:18:24",
                          "value": {
                            "name": "value2_1",
                            "nativeSrc": "1661:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "1661:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nativeSrc": "1651:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "1651:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "1678:18:24",
                          "nodeType": "YulAssignment",
                          "src": "1678:18:24",
                          "value": {
                            "name": "value3_1",
                            "nativeSrc": "1688:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "1688:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nativeSrc": "1678:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "1678:6:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_uint32t_bytes_calldata_ptr",
                    "nativeSrc": "1153:549:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1217:9:24",
                        "nodeType": "YulTypedName",
                        "src": "1217:9:24",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "1228:7:24",
                        "nodeType": "YulTypedName",
                        "src": "1228:7:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "1240:6:24",
                        "nodeType": "YulTypedName",
                        "src": "1240:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "1248:6:24",
                        "nodeType": "YulTypedName",
                        "src": "1248:6:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "1256:6:24",
                        "nodeType": "YulTypedName",
                        "src": "1256:6:24",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nativeSrc": "1264:6:24",
                        "nodeType": "YulTypedName",
                        "src": "1264:6:24",
                        "type": ""
                      }
                    ],
                    "src": "1153:549:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "1868:146:24",
                      "nodeType": "YulBlock",
                      "src": "1868:146:24",
                      "statements": [
                        {
                          "nativeSrc": "1878:26:24",
                          "nodeType": "YulAssignment",
                          "src": "1878:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "1890:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "1890:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1901:2:24",
                                "nodeType": "YulLiteral",
                                "src": "1901:2:24",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "1886:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "1886:3:24"
                            },
                            "nativeSrc": "1886:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1886:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "1878:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "1878:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "1920:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "1920:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1937:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1937:6:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1931:5:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "1931:5:24"
                                },
                                "nativeSrc": "1931:13:24",
                                "nodeType": "YulFunctionCall",
                                "src": "1931:13:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "1913:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "1913:6:24"
                            },
                            "nativeSrc": "1913:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1913:32:24"
                          },
                          "nativeSrc": "1913:32:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "1913:32:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1965:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "1965:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1976:4:24",
                                    "nodeType": "YulLiteral",
                                    "src": "1976:4:24",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1961:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "1961:3:24"
                                },
                                "nativeSrc": "1961:20:24",
                                "nodeType": "YulFunctionCall",
                                "src": "1961:20:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1993:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "1993:6:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2001:4:24",
                                        "nodeType": "YulLiteral",
                                        "src": "2001:4:24",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1989:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "1989:3:24"
                                    },
                                    "nativeSrc": "1989:17:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1989:17:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1983:5:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "1983:5:24"
                                },
                                "nativeSrc": "1983:24:24",
                                "nodeType": "YulFunctionCall",
                                "src": "1983:24:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "1954:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "1954:6:24"
                            },
                            "nativeSrc": "1954:54:24",
                            "nodeType": "YulFunctionCall",
                            "src": "1954:54:24"
                          },
                          "nativeSrc": "1954:54:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "1954:54:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_struct$_MessagingFee_$5932_memory_ptr__to_t_struct$_MessagingFee_$5932_memory_ptr__fromStack_reversed",
                    "nativeSrc": "1707:307:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1837:9:24",
                        "nodeType": "YulTypedName",
                        "src": "1837:9:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "1848:6:24",
                        "nodeType": "YulTypedName",
                        "src": "1848:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "1859:4:24",
                        "nodeType": "YulTypedName",
                        "src": "1859:4:24",
                        "type": ""
                      }
                    ],
                    "src": "1707:307:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "2089:110:24",
                      "nodeType": "YulBlock",
                      "src": "2089:110:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "2135:16:24",
                            "nodeType": "YulBlock",
                            "src": "2135:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2144:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "2144:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2147:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "2147:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "2137:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2137:6:24"
                                  },
                                  "nativeSrc": "2137:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2137:12:24"
                                },
                                "nativeSrc": "2137:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "2137:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "2110:7:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2110:7:24"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2119:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2119:9:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "2106:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "2106:3:24"
                                },
                                "nativeSrc": "2106:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "2106:23:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "2131:2:24",
                                "nodeType": "YulLiteral",
                                "src": "2131:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "2102:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "2102:3:24"
                            },
                            "nativeSrc": "2102:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2102:32:24"
                          },
                          "nativeSrc": "2099:52:24",
                          "nodeType": "YulIf",
                          "src": "2099:52:24"
                        },
                        {
                          "nativeSrc": "2160:33:24",
                          "nodeType": "YulAssignment",
                          "src": "2160:33:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "2183:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "2183:9:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "2170:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "2170:12:24"
                            },
                            "nativeSrc": "2170:23:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2170:23:24"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nativeSrc": "2160:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "2160:6:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32",
                    "nativeSrc": "2019:180:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "2055:9:24",
                        "nodeType": "YulTypedName",
                        "src": "2055:9:24",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "2066:7:24",
                        "nodeType": "YulTypedName",
                        "src": "2066:7:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "2078:6:24",
                        "nodeType": "YulTypedName",
                        "src": "2078:6:24",
                        "type": ""
                      }
                    ],
                    "src": "2019:180:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "2270:184:24",
                      "nodeType": "YulBlock",
                      "src": "2270:184:24",
                      "statements": [
                        {
                          "nativeSrc": "2280:10:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "2280:10:24",
                          "value": {
                            "kind": "number",
                            "nativeSrc": "2289:1:24",
                            "nodeType": "YulLiteral",
                            "src": "2289:1:24",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nativeSrc": "2284:1:24",
                              "nodeType": "YulTypedName",
                              "src": "2284:1:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "2349:63:24",
                            "nodeType": "YulBlock",
                            "src": "2349:63:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nativeSrc": "2374:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "2374:3:24"
                                        },
                                        {
                                          "name": "i",
                                          "nativeSrc": "2379:1:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "2379:1:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2370:3:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "2370:3:24"
                                      },
                                      "nativeSrc": "2370:11:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2370:11:24"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nativeSrc": "2393:3:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "2393:3:24"
                                            },
                                            {
                                              "name": "i",
                                              "nativeSrc": "2398:1:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "2398:1:24"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "2389:3:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "2389:3:24"
                                          },
                                          "nativeSrc": "2389:11:24",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2389:11:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "2383:5:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "2383:5:24"
                                      },
                                      "nativeSrc": "2383:18:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2383:18:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "2363:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2363:6:24"
                                  },
                                  "nativeSrc": "2363:39:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2363:39:24"
                                },
                                "nativeSrc": "2363:39:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "2363:39:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nativeSrc": "2310:1:24",
                                "nodeType": "YulIdentifier",
                                "src": "2310:1:24"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "2313:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "2313:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nativeSrc": "2307:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "2307:2:24"
                            },
                            "nativeSrc": "2307:13:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2307:13:24"
                          },
                          "nativeSrc": "2299:113:24",
                          "nodeType": "YulForLoop",
                          "post": {
                            "nativeSrc": "2321:19:24",
                            "nodeType": "YulBlock",
                            "src": "2321:19:24",
                            "statements": [
                              {
                                "nativeSrc": "2323:15:24",
                                "nodeType": "YulAssignment",
                                "src": "2323:15:24",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nativeSrc": "2332:1:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "2332:1:24"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2335:2:24",
                                      "nodeType": "YulLiteral",
                                      "src": "2335:2:24",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "2328:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2328:3:24"
                                  },
                                  "nativeSrc": "2328:10:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2328:10:24"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "2323:1:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2323:1:24"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nativeSrc": "2303:3:24",
                            "nodeType": "YulBlock",
                            "src": "2303:3:24",
                            "statements": []
                          },
                          "src": "2299:113:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nativeSrc": "2432:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2432:3:24"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "2437:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2437:6:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2428:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "2428:3:24"
                                },
                                "nativeSrc": "2428:16:24",
                                "nodeType": "YulFunctionCall",
                                "src": "2428:16:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "2446:1:24",
                                "nodeType": "YulLiteral",
                                "src": "2446:1:24",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "2421:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "2421:6:24"
                            },
                            "nativeSrc": "2421:27:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2421:27:24"
                          },
                          "nativeSrc": "2421:27:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "2421:27:24"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory_with_cleanup",
                    "nativeSrc": "2204:250:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nativeSrc": "2248:3:24",
                        "nodeType": "YulTypedName",
                        "src": "2248:3:24",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nativeSrc": "2253:3:24",
                        "nodeType": "YulTypedName",
                        "src": "2253:3:24",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nativeSrc": "2258:6:24",
                        "nodeType": "YulTypedName",
                        "src": "2258:6:24",
                        "type": ""
                      }
                    ],
                    "src": "2204:250:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "2658:450:24",
                      "nodeType": "YulBlock",
                      "src": "2658:450:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "2675:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "2675:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "2690:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2690:6:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2706:3:24",
                                            "nodeType": "YulLiteral",
                                            "src": "2706:3:24",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2711:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "2711:1:24",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "2702:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "2702:3:24"
                                        },
                                        "nativeSrc": "2702:11:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2702:11:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2715:1:24",
                                        "nodeType": "YulLiteral",
                                        "src": "2715:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2698:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "2698:3:24"
                                    },
                                    "nativeSrc": "2698:19:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2698:19:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "2686:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "2686:3:24"
                                },
                                "nativeSrc": "2686:32:24",
                                "nodeType": "YulFunctionCall",
                                "src": "2686:32:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "2668:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "2668:6:24"
                            },
                            "nativeSrc": "2668:51:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2668:51:24"
                          },
                          "nativeSrc": "2668:51:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "2668:51:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2739:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2739:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2750:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "2750:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2735:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "2735:3:24"
                                },
                                "nativeSrc": "2735:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "2735:18:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "2755:3:24",
                                "nodeType": "YulLiteral",
                                "src": "2755:3:24",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "2728:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "2728:6:24"
                            },
                            "nativeSrc": "2728:31:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2728:31:24"
                          },
                          "nativeSrc": "2728:31:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "2728:31:24"
                        },
                        {
                          "nativeSrc": "2768:27:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "2768:27:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nativeSrc": "2788:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "2788:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nativeSrc": "2782:5:24",
                              "nodeType": "YulIdentifier",
                              "src": "2782:5:24"
                            },
                            "nativeSrc": "2782:13:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2782:13:24"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nativeSrc": "2772:6:24",
                              "nodeType": "YulTypedName",
                              "src": "2772:6:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2815:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2815:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2826:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "2826:3:24",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2811:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "2811:3:24"
                                },
                                "nativeSrc": "2811:19:24",
                                "nodeType": "YulFunctionCall",
                                "src": "2811:19:24"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "2832:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "2832:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "2804:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "2804:6:24"
                            },
                            "nativeSrc": "2804:35:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2804:35:24"
                          },
                          "nativeSrc": "2804:35:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "2804:35:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "2887:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2887:6:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2895:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "2895:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2883:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "2883:3:24"
                                },
                                "nativeSrc": "2883:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "2883:15:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2904:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2904:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2915:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "2915:3:24",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2900:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "2900:3:24"
                                },
                                "nativeSrc": "2900:19:24",
                                "nodeType": "YulFunctionCall",
                                "src": "2900:19:24"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "2921:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "2921:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nativeSrc": "2848:34:24",
                              "nodeType": "YulIdentifier",
                              "src": "2848:34:24"
                            },
                            "nativeSrc": "2848:80:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2848:80:24"
                          },
                          "nativeSrc": "2848:80:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "2848:80:24"
                        },
                        {
                          "nativeSrc": "2937:63:24",
                          "nodeType": "YulAssignment",
                          "src": "2937:63:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2953:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "2953:9:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nativeSrc": "2972:6:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "2972:6:24"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2980:2:24",
                                            "nodeType": "YulLiteral",
                                            "src": "2980:2:24",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "2968:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "2968:3:24"
                                        },
                                        "nativeSrc": "2968:15:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2968:15:24"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2989:2:24",
                                            "nodeType": "YulLiteral",
                                            "src": "2989:2:24",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "2985:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "2985:3:24"
                                        },
                                        "nativeSrc": "2985:7:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2985:7:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2964:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "2964:3:24"
                                    },
                                    "nativeSrc": "2964:29:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2964:29:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2949:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "2949:3:24"
                                },
                                "nativeSrc": "2949:45:24",
                                "nodeType": "YulFunctionCall",
                                "src": "2949:45:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "2996:3:24",
                                "nodeType": "YulLiteral",
                                "src": "2996:3:24",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "2945:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "2945:3:24"
                            },
                            "nativeSrc": "2945:55:24",
                            "nodeType": "YulFunctionCall",
                            "src": "2945:55:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "2937:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "2937:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3020:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3020:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3031:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "3031:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3016:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "3016:3:24"
                                },
                                "nativeSrc": "3016:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "3016:18:24"
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "3036:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "3036:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "3009:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "3009:6:24"
                            },
                            "nativeSrc": "3009:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "3009:34:24"
                          },
                          "nativeSrc": "3009:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "3009:34:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3063:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3063:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3074:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "3074:2:24",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3059:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "3059:3:24"
                                },
                                "nativeSrc": "3059:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "3059:18:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value3",
                                        "nativeSrc": "3093:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "3093:6:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "3086:6:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "3086:6:24"
                                    },
                                    "nativeSrc": "3086:14:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3086:14:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3079:6:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "3079:6:24"
                                },
                                "nativeSrc": "3079:22:24",
                                "nodeType": "YulFunctionCall",
                                "src": "3079:22:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "3052:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "3052:6:24"
                            },
                            "nativeSrc": "3052:50:24",
                            "nodeType": "YulFunctionCall",
                            "src": "3052:50:24"
                          },
                          "nativeSrc": "3052:50:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "3052:50:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_bool__to_t_address_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed",
                    "nativeSrc": "2459:649:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "2603:9:24",
                        "nodeType": "YulTypedName",
                        "src": "2603:9:24",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nativeSrc": "2614:6:24",
                        "nodeType": "YulTypedName",
                        "src": "2614:6:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "2622:6:24",
                        "nodeType": "YulTypedName",
                        "src": "2622:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "2630:6:24",
                        "nodeType": "YulTypedName",
                        "src": "2630:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "2638:6:24",
                        "nodeType": "YulTypedName",
                        "src": "2638:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "2649:4:24",
                        "nodeType": "YulTypedName",
                        "src": "2649:4:24",
                        "type": ""
                      }
                    ],
                    "src": "2459:649:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "3252:485:24",
                      "nodeType": "YulBlock",
                      "src": "3252:485:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "3299:16:24",
                            "nodeType": "YulBlock",
                            "src": "3299:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "3308:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "3308:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "3311:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "3311:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "3301:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3301:6:24"
                                  },
                                  "nativeSrc": "3301:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3301:12:24"
                                },
                                "nativeSrc": "3301:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "3301:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "3273:7:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3273:7:24"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3282:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3282:9:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "3269:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "3269:3:24"
                                },
                                "nativeSrc": "3269:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "3269:23:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "3294:3:24",
                                "nodeType": "YulLiteral",
                                "src": "3294:3:24",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "3265:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "3265:3:24"
                            },
                            "nativeSrc": "3265:33:24",
                            "nodeType": "YulFunctionCall",
                            "src": "3265:33:24"
                          },
                          "nativeSrc": "3262:53:24",
                          "nodeType": "YulIf",
                          "src": "3262:53:24"
                        },
                        {
                          "nativeSrc": "3324:33:24",
                          "nodeType": "YulAssignment",
                          "src": "3324:33:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "3347:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "3347:9:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "3334:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "3334:12:24"
                            },
                            "nativeSrc": "3334:23:24",
                            "nodeType": "YulFunctionCall",
                            "src": "3334:23:24"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nativeSrc": "3324:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "3324:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "3366:48:24",
                          "nodeType": "YulAssignment",
                          "src": "3366:48:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3399:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3399:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3410:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "3410:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3395:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "3395:3:24"
                                },
                                "nativeSrc": "3395:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "3395:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nativeSrc": "3376:18:24",
                              "nodeType": "YulIdentifier",
                              "src": "3376:18:24"
                            },
                            "nativeSrc": "3376:38:24",
                            "nodeType": "YulFunctionCall",
                            "src": "3376:38:24"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nativeSrc": "3366:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "3366:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "3423:47:24",
                          "nodeType": "YulAssignment",
                          "src": "3423:47:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3455:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3455:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3466:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "3466:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3451:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "3451:3:24"
                                },
                                "nativeSrc": "3451:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "3451:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_uint32",
                              "nativeSrc": "3433:17:24",
                              "nodeType": "YulIdentifier",
                              "src": "3433:17:24"
                            },
                            "nativeSrc": "3433:37:24",
                            "nodeType": "YulFunctionCall",
                            "src": "3433:37:24"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nativeSrc": "3423:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "3423:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "3479:46:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "3479:46:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3510:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3510:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3521:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "3521:2:24",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3506:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "3506:3:24"
                                },
                                "nativeSrc": "3506:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "3506:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "3493:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "3493:12:24"
                            },
                            "nativeSrc": "3493:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "3493:32:24"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nativeSrc": "3483:6:24",
                              "nodeType": "YulTypedName",
                              "src": "3483:6:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "3568:16:24",
                            "nodeType": "YulBlock",
                            "src": "3568:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "3577:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "3577:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "3580:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "3580:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "3570:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3570:6:24"
                                  },
                                  "nativeSrc": "3570:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3570:12:24"
                                },
                                "nativeSrc": "3570:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "3570:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "3540:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "3540:6:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "3548:18:24",
                                "nodeType": "YulLiteral",
                                "src": "3548:18:24",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "3537:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "3537:2:24"
                            },
                            "nativeSrc": "3537:30:24",
                            "nodeType": "YulFunctionCall",
                            "src": "3537:30:24"
                          },
                          "nativeSrc": "3534:50:24",
                          "nodeType": "YulIf",
                          "src": "3534:50:24"
                        },
                        {
                          "nativeSrc": "3593:84:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "3593:84:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3649:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3649:9:24"
                                  },
                                  {
                                    "name": "offset",
                                    "nativeSrc": "3660:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "3660:6:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3645:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "3645:3:24"
                                },
                                "nativeSrc": "3645:22:24",
                                "nodeType": "YulFunctionCall",
                                "src": "3645:22:24"
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "3669:7:24",
                                "nodeType": "YulIdentifier",
                                "src": "3669:7:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes_calldata",
                              "nativeSrc": "3619:25:24",
                              "nodeType": "YulIdentifier",
                              "src": "3619:25:24"
                            },
                            "nativeSrc": "3619:58:24",
                            "nodeType": "YulFunctionCall",
                            "src": "3619:58:24"
                          },
                          "variables": [
                            {
                              "name": "value3_1",
                              "nativeSrc": "3597:8:24",
                              "nodeType": "YulTypedName",
                              "src": "3597:8:24",
                              "type": ""
                            },
                            {
                              "name": "value4_1",
                              "nativeSrc": "3607:8:24",
                              "nodeType": "YulTypedName",
                              "src": "3607:8:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "3686:18:24",
                          "nodeType": "YulAssignment",
                          "src": "3686:18:24",
                          "value": {
                            "name": "value3_1",
                            "nativeSrc": "3696:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "3696:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nativeSrc": "3686:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "3686:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "3713:18:24",
                          "nodeType": "YulAssignment",
                          "src": "3713:18:24",
                          "value": {
                            "name": "value4_1",
                            "nativeSrc": "3723:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "3723:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value4",
                              "nativeSrc": "3713:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "3713:6:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_addresst_uint32t_bytes_calldata_ptr",
                    "nativeSrc": "3113:624:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3186:9:24",
                        "nodeType": "YulTypedName",
                        "src": "3186:9:24",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "3197:7:24",
                        "nodeType": "YulTypedName",
                        "src": "3197:7:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "3209:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3209:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "3217:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3217:6:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "3225:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3225:6:24",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nativeSrc": "3233:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3233:6:24",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nativeSrc": "3241:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3241:6:24",
                        "type": ""
                      }
                    ],
                    "src": "3113:624:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "4031:480:24",
                      "nodeType": "YulBlock",
                      "src": "4031:480:24",
                      "statements": [
                        {
                          "nativeSrc": "4041:27:24",
                          "nodeType": "YulAssignment",
                          "src": "4041:27:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "4053:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "4053:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "4064:3:24",
                                "nodeType": "YulLiteral",
                                "src": "4064:3:24",
                                "type": "",
                                "value": "256"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "4049:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "4049:3:24"
                            },
                            "nativeSrc": "4049:19:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4049:19:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "4041:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "4041:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "4084:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "4084:9:24"
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "4095:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "4095:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4077:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4077:6:24"
                            },
                            "nativeSrc": "4077:25:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4077:25:24"
                          },
                          "nativeSrc": "4077:25:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "4077:25:24"
                        },
                        {
                          "nativeSrc": "4111:29:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "4111:29:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4129:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4129:3:24",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4134:1:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4134:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "4125:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4125:3:24"
                                },
                                "nativeSrc": "4125:11:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4125:11:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "4138:1:24",
                                "nodeType": "YulLiteral",
                                "src": "4138:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nativeSrc": "4121:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "4121:3:24"
                            },
                            "nativeSrc": "4121:19:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4121:19:24"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nativeSrc": "4115:2:24",
                              "nodeType": "YulTypedName",
                              "src": "4115:2:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4160:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4160:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4171:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4171:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4156:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4156:3:24"
                                },
                                "nativeSrc": "4156:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4156:18:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "4180:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4180:6:24"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "4188:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4188:2:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "4176:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4176:3:24"
                                },
                                "nativeSrc": "4176:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4176:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4149:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4149:6:24"
                            },
                            "nativeSrc": "4149:43:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4149:43:24"
                          },
                          "nativeSrc": "4149:43:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "4149:43:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4212:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4212:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4223:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4223:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4208:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4208:3:24"
                                },
                                "nativeSrc": "4208:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4208:18:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "4232:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4232:6:24"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "4240:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4240:2:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "4228:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4228:3:24"
                                },
                                "nativeSrc": "4228:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4228:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4201:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4201:6:24"
                            },
                            "nativeSrc": "4201:43:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4201:43:24"
                          },
                          "nativeSrc": "4201:43:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "4201:43:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4264:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4264:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4275:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4275:2:24",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4260:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4260:3:24"
                                },
                                "nativeSrc": "4260:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4260:18:24"
                              },
                              {
                                "name": "value3",
                                "nativeSrc": "4280:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "4280:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4253:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4253:6:24"
                            },
                            "nativeSrc": "4253:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4253:34:24"
                          },
                          "nativeSrc": "4253:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "4253:34:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4307:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4307:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4318:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4318:3:24",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4303:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4303:3:24"
                                },
                                "nativeSrc": "4303:19:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4303:19:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nativeSrc": "4328:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4328:6:24"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "4336:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4336:2:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "4324:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4324:3:24"
                                },
                                "nativeSrc": "4324:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4324:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4296:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4296:6:24"
                            },
                            "nativeSrc": "4296:44:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4296:44:24"
                          },
                          "nativeSrc": "4296:44:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "4296:44:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4360:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4360:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4371:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4371:3:24",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4356:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4356:3:24"
                                },
                                "nativeSrc": "4356:19:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4356:19:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nativeSrc": "4381:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4381:6:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4389:10:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4389:10:24",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "4377:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4377:3:24"
                                },
                                "nativeSrc": "4377:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4377:23:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4349:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4349:6:24"
                            },
                            "nativeSrc": "4349:52:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4349:52:24"
                          },
                          "nativeSrc": "4349:52:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "4349:52:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4421:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4421:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4432:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4432:3:24",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4417:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4417:3:24"
                                },
                                "nativeSrc": "4417:19:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4417:19:24"
                              },
                              {
                                "name": "value6",
                                "nativeSrc": "4438:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "4438:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4410:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4410:6:24"
                            },
                            "nativeSrc": "4410:35:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4410:35:24"
                          },
                          "nativeSrc": "4410:35:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "4410:35:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4465:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4465:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4476:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "4476:3:24",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4461:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4461:3:24"
                                },
                                "nativeSrc": "4461:19:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4461:19:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value7",
                                        "nativeSrc": "4496:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "4496:6:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "4489:6:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "4489:6:24"
                                    },
                                    "nativeSrc": "4489:14:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4489:14:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4482:6:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4482:6:24"
                                },
                                "nativeSrc": "4482:22:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4482:22:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4454:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4454:6:24"
                            },
                            "nativeSrc": "4454:51:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4454:51:24"
                          },
                          "nativeSrc": "4454:51:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "4454:51:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_address_t_uint32_t_uint256_t_bool__to_t_bytes32_t_address_t_address_t_uint256_t_address_t_uint32_t_uint256_t_bool__fromStack_reversed",
                    "nativeSrc": "3742:769:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3944:9:24",
                        "nodeType": "YulTypedName",
                        "src": "3944:9:24",
                        "type": ""
                      },
                      {
                        "name": "value7",
                        "nativeSrc": "3955:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3955:6:24",
                        "type": ""
                      },
                      {
                        "name": "value6",
                        "nativeSrc": "3963:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3963:6:24",
                        "type": ""
                      },
                      {
                        "name": "value5",
                        "nativeSrc": "3971:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3971:6:24",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nativeSrc": "3979:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3979:6:24",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nativeSrc": "3987:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3987:6:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "3995:6:24",
                        "nodeType": "YulTypedName",
                        "src": "3995:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "4003:6:24",
                        "nodeType": "YulTypedName",
                        "src": "4003:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "4011:6:24",
                        "nodeType": "YulTypedName",
                        "src": "4011:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "4022:4:24",
                        "nodeType": "YulTypedName",
                        "src": "4022:4:24",
                        "type": ""
                      }
                    ],
                    "src": "3742:769:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "4586:116:24",
                      "nodeType": "YulBlock",
                      "src": "4586:116:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "4632:16:24",
                            "nodeType": "YulBlock",
                            "src": "4632:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "4641:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "4641:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "4644:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "4644:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "4634:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4634:6:24"
                                  },
                                  "nativeSrc": "4634:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4634:12:24"
                                },
                                "nativeSrc": "4634:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "4634:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "4607:7:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4607:7:24"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4616:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4616:9:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "4603:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4603:3:24"
                                },
                                "nativeSrc": "4603:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4603:23:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "4628:2:24",
                                "nodeType": "YulLiteral",
                                "src": "4628:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "4599:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "4599:3:24"
                            },
                            "nativeSrc": "4599:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4599:32:24"
                          },
                          "nativeSrc": "4596:52:24",
                          "nodeType": "YulIf",
                          "src": "4596:52:24"
                        },
                        {
                          "nativeSrc": "4657:39:24",
                          "nodeType": "YulAssignment",
                          "src": "4657:39:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "4686:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "4686:9:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nativeSrc": "4667:18:24",
                              "nodeType": "YulIdentifier",
                              "src": "4667:18:24"
                            },
                            "nativeSrc": "4667:29:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4667:29:24"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nativeSrc": "4657:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4657:6:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address",
                    "nativeSrc": "4516:186:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "4552:9:24",
                        "nodeType": "YulTypedName",
                        "src": "4552:9:24",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "4563:7:24",
                        "nodeType": "YulTypedName",
                        "src": "4563:7:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "4575:6:24",
                        "nodeType": "YulTypedName",
                        "src": "4575:6:24",
                        "type": ""
                      }
                    ],
                    "src": "4516:186:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "4822:102:24",
                      "nodeType": "YulBlock",
                      "src": "4822:102:24",
                      "statements": [
                        {
                          "nativeSrc": "4832:26:24",
                          "nodeType": "YulAssignment",
                          "src": "4832:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "4844:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "4844:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "4855:2:24",
                                "nodeType": "YulLiteral",
                                "src": "4855:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "4840:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "4840:3:24"
                            },
                            "nativeSrc": "4840:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4840:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "4832:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "4832:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "4874:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "4874:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "4889:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "4889:6:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4905:3:24",
                                            "nodeType": "YulLiteral",
                                            "src": "4905:3:24",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4910:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "4910:1:24",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "4901:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "4901:3:24"
                                        },
                                        "nativeSrc": "4901:11:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4901:11:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4914:1:24",
                                        "nodeType": "YulLiteral",
                                        "src": "4914:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "4897:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "4897:3:24"
                                    },
                                    "nativeSrc": "4897:19:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4897:19:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "4885:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "4885:3:24"
                                },
                                "nativeSrc": "4885:32:24",
                                "nodeType": "YulFunctionCall",
                                "src": "4885:32:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4867:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "4867:6:24"
                            },
                            "nativeSrc": "4867:51:24",
                            "nodeType": "YulFunctionCall",
                            "src": "4867:51:24"
                          },
                          "nativeSrc": "4867:51:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "4867:51:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_contract$_IERC20_$967__to_t_address__fromStack_reversed",
                    "nativeSrc": "4707:217:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "4791:9:24",
                        "nodeType": "YulTypedName",
                        "src": "4791:9:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "4802:6:24",
                        "nodeType": "YulTypedName",
                        "src": "4802:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "4813:4:24",
                        "nodeType": "YulTypedName",
                        "src": "4813:4:24",
                        "type": ""
                      }
                    ],
                    "src": "4707:217:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "5013:283:24",
                      "nodeType": "YulBlock",
                      "src": "5013:283:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "5062:16:24",
                            "nodeType": "YulBlock",
                            "src": "5062:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5071:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5071:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5074:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5074:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "5064:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5064:6:24"
                                  },
                                  "nativeSrc": "5064:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5064:12:24"
                                },
                                "nativeSrc": "5064:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "5064:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "5041:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "5041:6:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5049:4:24",
                                        "nodeType": "YulLiteral",
                                        "src": "5049:4:24",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5037:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "5037:3:24"
                                    },
                                    "nativeSrc": "5037:17:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5037:17:24"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "5056:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5056:3:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "5033:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "5033:3:24"
                                },
                                "nativeSrc": "5033:27:24",
                                "nodeType": "YulFunctionCall",
                                "src": "5033:27:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "5026:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "5026:6:24"
                            },
                            "nativeSrc": "5026:35:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5026:35:24"
                          },
                          "nativeSrc": "5023:55:24",
                          "nodeType": "YulIf",
                          "src": "5023:55:24"
                        },
                        {
                          "nativeSrc": "5087:30:24",
                          "nodeType": "YulAssignment",
                          "src": "5087:30:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "5110:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "5110:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "5097:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "5097:12:24"
                            },
                            "nativeSrc": "5097:20:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5097:20:24"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nativeSrc": "5087:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "5087:6:24"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "5160:16:24",
                            "nodeType": "YulBlock",
                            "src": "5160:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5169:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5169:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5172:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5172:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "5162:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5162:6:24"
                                  },
                                  "nativeSrc": "5162:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5162:12:24"
                                },
                                "nativeSrc": "5162:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "5162:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nativeSrc": "5132:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "5132:6:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "5140:18:24",
                                "nodeType": "YulLiteral",
                                "src": "5140:18:24",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "5129:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "5129:2:24"
                            },
                            "nativeSrc": "5129:30:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5129:30:24"
                          },
                          "nativeSrc": "5126:50:24",
                          "nodeType": "YulIf",
                          "src": "5126:50:24"
                        },
                        {
                          "nativeSrc": "5185:29:24",
                          "nodeType": "YulAssignment",
                          "src": "5185:29:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "5201:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "5201:6:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "5209:4:24",
                                "nodeType": "YulLiteral",
                                "src": "5209:4:24",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "5197:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "5197:3:24"
                            },
                            "nativeSrc": "5197:17:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5197:17:24"
                          },
                          "variableNames": [
                            {
                              "name": "arrayPos",
                              "nativeSrc": "5185:8:24",
                              "nodeType": "YulIdentifier",
                              "src": "5185:8:24"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "5274:16:24",
                            "nodeType": "YulBlock",
                            "src": "5274:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5283:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5283:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5286:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5286:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "5276:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5276:6:24"
                                  },
                                  "nativeSrc": "5276:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5276:12:24"
                                },
                                "nativeSrc": "5276:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "5276:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "5237:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "5237:6:24"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5249:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "5249:1:24",
                                            "type": "",
                                            "value": "5"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "5252:6:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "5252:6:24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "5245:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "5245:3:24"
                                        },
                                        "nativeSrc": "5245:14:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5245:14:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5233:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "5233:3:24"
                                    },
                                    "nativeSrc": "5233:27:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5233:27:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5262:4:24",
                                    "nodeType": "YulLiteral",
                                    "src": "5262:4:24",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5229:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "5229:3:24"
                                },
                                "nativeSrc": "5229:38:24",
                                "nodeType": "YulFunctionCall",
                                "src": "5229:38:24"
                              },
                              {
                                "name": "end",
                                "nativeSrc": "5269:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "5269:3:24"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "5226:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "5226:2:24"
                            },
                            "nativeSrc": "5226:47:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5226:47:24"
                          },
                          "nativeSrc": "5223:67:24",
                          "nodeType": "YulIf",
                          "src": "5223:67:24"
                        }
                      ]
                    },
                    "name": "abi_decode_array_address_dyn_calldata",
                    "nativeSrc": "4929:367:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nativeSrc": "4976:6:24",
                        "nodeType": "YulTypedName",
                        "src": "4976:6:24",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nativeSrc": "4984:3:24",
                        "nodeType": "YulTypedName",
                        "src": "4984:3:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "arrayPos",
                        "nativeSrc": "4992:8:24",
                        "nodeType": "YulTypedName",
                        "src": "4992:8:24",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nativeSrc": "5002:6:24",
                        "nodeType": "YulTypedName",
                        "src": "5002:6:24",
                        "type": ""
                      }
                    ],
                    "src": "4929:367:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "5511:919:24",
                      "nodeType": "YulBlock",
                      "src": "5511:919:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "5558:16:24",
                            "nodeType": "YulBlock",
                            "src": "5558:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5567:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5567:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5570:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5570:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "5560:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5560:6:24"
                                  },
                                  "nativeSrc": "5560:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5560:12:24"
                                },
                                "nativeSrc": "5560:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "5560:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "5532:7:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5532:7:24"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5541:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5541:9:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "5528:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "5528:3:24"
                                },
                                "nativeSrc": "5528:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "5528:23:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "5553:3:24",
                                "nodeType": "YulLiteral",
                                "src": "5553:3:24",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "5524:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "5524:3:24"
                            },
                            "nativeSrc": "5524:33:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5524:33:24"
                          },
                          "nativeSrc": "5521:53:24",
                          "nodeType": "YulIf",
                          "src": "5521:53:24"
                        },
                        {
                          "nativeSrc": "5583:37:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "5583:37:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "5610:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "5610:9:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "5597:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "5597:12:24"
                            },
                            "nativeSrc": "5597:23:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5597:23:24"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nativeSrc": "5587:6:24",
                              "nodeType": "YulTypedName",
                              "src": "5587:6:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "5629:28:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "5629:28:24",
                          "value": {
                            "kind": "number",
                            "nativeSrc": "5639:18:24",
                            "nodeType": "YulLiteral",
                            "src": "5639:18:24",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nativeSrc": "5633:2:24",
                              "nodeType": "YulTypedName",
                              "src": "5633:2:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "5684:16:24",
                            "nodeType": "YulBlock",
                            "src": "5684:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5693:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5693:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5696:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5696:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "5686:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5686:6:24"
                                  },
                                  "nativeSrc": "5686:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5686:12:24"
                                },
                                "nativeSrc": "5686:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "5686:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "5672:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "5672:6:24"
                              },
                              {
                                "name": "_1",
                                "nativeSrc": "5680:2:24",
                                "nodeType": "YulIdentifier",
                                "src": "5680:2:24"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "5669:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "5669:2:24"
                            },
                            "nativeSrc": "5669:14:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5669:14:24"
                          },
                          "nativeSrc": "5666:34:24",
                          "nodeType": "YulIf",
                          "src": "5666:34:24"
                        },
                        {
                          "nativeSrc": "5709:84:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "5709:84:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5765:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5765:9:24"
                                  },
                                  {
                                    "name": "offset",
                                    "nativeSrc": "5776:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5776:6:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5761:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "5761:3:24"
                                },
                                "nativeSrc": "5761:22:24",
                                "nodeType": "YulFunctionCall",
                                "src": "5761:22:24"
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "5785:7:24",
                                "nodeType": "YulIdentifier",
                                "src": "5785:7:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes_calldata",
                              "nativeSrc": "5735:25:24",
                              "nodeType": "YulIdentifier",
                              "src": "5735:25:24"
                            },
                            "nativeSrc": "5735:58:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5735:58:24"
                          },
                          "variables": [
                            {
                              "name": "value0_1",
                              "nativeSrc": "5713:8:24",
                              "nodeType": "YulTypedName",
                              "src": "5713:8:24",
                              "type": ""
                            },
                            {
                              "name": "value1_1",
                              "nativeSrc": "5723:8:24",
                              "nodeType": "YulTypedName",
                              "src": "5723:8:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "5802:18:24",
                          "nodeType": "YulAssignment",
                          "src": "5802:18:24",
                          "value": {
                            "name": "value0_1",
                            "nativeSrc": "5812:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "5812:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nativeSrc": "5802:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "5802:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "5829:18:24",
                          "nodeType": "YulAssignment",
                          "src": "5829:18:24",
                          "value": {
                            "name": "value1_1",
                            "nativeSrc": "5839:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "5839:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nativeSrc": "5829:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "5829:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "5856:42:24",
                          "nodeType": "YulAssignment",
                          "src": "5856:42:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5883:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5883:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5894:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "5894:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5879:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "5879:3:24"
                                },
                                "nativeSrc": "5879:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "5879:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "5866:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "5866:12:24"
                            },
                            "nativeSrc": "5866:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5866:32:24"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nativeSrc": "5856:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "5856:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "5907:48:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "5907:48:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5940:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5940:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5951:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "5951:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5936:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "5936:3:24"
                                },
                                "nativeSrc": "5936:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "5936:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "5923:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "5923:12:24"
                            },
                            "nativeSrc": "5923:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5923:32:24"
                          },
                          "variables": [
                            {
                              "name": "offset_1",
                              "nativeSrc": "5911:8:24",
                              "nodeType": "YulTypedName",
                              "src": "5911:8:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "5984:16:24",
                            "nodeType": "YulBlock",
                            "src": "5984:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5993:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5993:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5996:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "5996:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "5986:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "5986:6:24"
                                  },
                                  "nativeSrc": "5986:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5986:12:24"
                                },
                                "nativeSrc": "5986:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "5986:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset_1",
                                "nativeSrc": "5970:8:24",
                                "nodeType": "YulIdentifier",
                                "src": "5970:8:24"
                              },
                              {
                                "name": "_1",
                                "nativeSrc": "5980:2:24",
                                "nodeType": "YulIdentifier",
                                "src": "5980:2:24"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "5967:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "5967:2:24"
                            },
                            "nativeSrc": "5967:16:24",
                            "nodeType": "YulFunctionCall",
                            "src": "5967:16:24"
                          },
                          "nativeSrc": "5964:36:24",
                          "nodeType": "YulIf",
                          "src": "5964:36:24"
                        },
                        {
                          "nativeSrc": "6009:98:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "6009:98:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6077:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6077:9:24"
                                  },
                                  {
                                    "name": "offset_1",
                                    "nativeSrc": "6088:8:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6088:8:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6073:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "6073:3:24"
                                },
                                "nativeSrc": "6073:24:24",
                                "nodeType": "YulFunctionCall",
                                "src": "6073:24:24"
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "6099:7:24",
                                "nodeType": "YulIdentifier",
                                "src": "6099:7:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_array_address_dyn_calldata",
                              "nativeSrc": "6035:37:24",
                              "nodeType": "YulIdentifier",
                              "src": "6035:37:24"
                            },
                            "nativeSrc": "6035:72:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6035:72:24"
                          },
                          "variables": [
                            {
                              "name": "value3_1",
                              "nativeSrc": "6013:8:24",
                              "nodeType": "YulTypedName",
                              "src": "6013:8:24",
                              "type": ""
                            },
                            {
                              "name": "value4_1",
                              "nativeSrc": "6023:8:24",
                              "nodeType": "YulTypedName",
                              "src": "6023:8:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "6116:18:24",
                          "nodeType": "YulAssignment",
                          "src": "6116:18:24",
                          "value": {
                            "name": "value3_1",
                            "nativeSrc": "6126:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "6126:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nativeSrc": "6116:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "6116:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "6143:18:24",
                          "nodeType": "YulAssignment",
                          "src": "6143:18:24",
                          "value": {
                            "name": "value4_1",
                            "nativeSrc": "6153:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "6153:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value4",
                              "nativeSrc": "6143:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "6143:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "6170:48:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "6170:48:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6203:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6203:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6214:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "6214:2:24",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6199:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "6199:3:24"
                                },
                                "nativeSrc": "6199:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "6199:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "6186:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "6186:12:24"
                            },
                            "nativeSrc": "6186:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6186:32:24"
                          },
                          "variables": [
                            {
                              "name": "offset_2",
                              "nativeSrc": "6174:8:24",
                              "nodeType": "YulTypedName",
                              "src": "6174:8:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "6247:16:24",
                            "nodeType": "YulBlock",
                            "src": "6247:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "6256:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "6256:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "6259:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "6259:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "6249:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6249:6:24"
                                  },
                                  "nativeSrc": "6249:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6249:12:24"
                                },
                                "nativeSrc": "6249:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "6249:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset_2",
                                "nativeSrc": "6233:8:24",
                                "nodeType": "YulIdentifier",
                                "src": "6233:8:24"
                              },
                              {
                                "name": "_1",
                                "nativeSrc": "6243:2:24",
                                "nodeType": "YulIdentifier",
                                "src": "6243:2:24"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "6230:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "6230:2:24"
                            },
                            "nativeSrc": "6230:16:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6230:16:24"
                          },
                          "nativeSrc": "6227:36:24",
                          "nodeType": "YulIf",
                          "src": "6227:36:24"
                        },
                        {
                          "nativeSrc": "6272:98:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "6272:98:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6340:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6340:9:24"
                                  },
                                  {
                                    "name": "offset_2",
                                    "nativeSrc": "6351:8:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6351:8:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6336:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "6336:3:24"
                                },
                                "nativeSrc": "6336:24:24",
                                "nodeType": "YulFunctionCall",
                                "src": "6336:24:24"
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "6362:7:24",
                                "nodeType": "YulIdentifier",
                                "src": "6362:7:24"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_array_address_dyn_calldata",
                              "nativeSrc": "6298:37:24",
                              "nodeType": "YulIdentifier",
                              "src": "6298:37:24"
                            },
                            "nativeSrc": "6298:72:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6298:72:24"
                          },
                          "variables": [
                            {
                              "name": "value5_1",
                              "nativeSrc": "6276:8:24",
                              "nodeType": "YulTypedName",
                              "src": "6276:8:24",
                              "type": ""
                            },
                            {
                              "name": "value6_1",
                              "nativeSrc": "6286:8:24",
                              "nodeType": "YulTypedName",
                              "src": "6286:8:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "6379:18:24",
                          "nodeType": "YulAssignment",
                          "src": "6379:18:24",
                          "value": {
                            "name": "value5_1",
                            "nativeSrc": "6389:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "6389:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value5",
                              "nativeSrc": "6379:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "6379:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "6406:18:24",
                          "nodeType": "YulAssignment",
                          "src": "6406:18:24",
                          "value": {
                            "name": "value6_1",
                            "nativeSrc": "6416:8:24",
                            "nodeType": "YulIdentifier",
                            "src": "6416:8:24"
                          },
                          "variableNames": [
                            {
                              "name": "value6",
                              "nativeSrc": "6406:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "6406:6:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_string_calldata_ptrt_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptr",
                    "nativeSrc": "5301:1129:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "5429:9:24",
                        "nodeType": "YulTypedName",
                        "src": "5429:9:24",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "5440:7:24",
                        "nodeType": "YulTypedName",
                        "src": "5440:7:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "5452:6:24",
                        "nodeType": "YulTypedName",
                        "src": "5452:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "5460:6:24",
                        "nodeType": "YulTypedName",
                        "src": "5460:6:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "5468:6:24",
                        "nodeType": "YulTypedName",
                        "src": "5468:6:24",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nativeSrc": "5476:6:24",
                        "nodeType": "YulTypedName",
                        "src": "5476:6:24",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nativeSrc": "5484:6:24",
                        "nodeType": "YulTypedName",
                        "src": "5484:6:24",
                        "type": ""
                      },
                      {
                        "name": "value5",
                        "nativeSrc": "5492:6:24",
                        "nodeType": "YulTypedName",
                        "src": "5492:6:24",
                        "type": ""
                      },
                      {
                        "name": "value6",
                        "nativeSrc": "5500:6:24",
                        "nodeType": "YulTypedName",
                        "src": "5500:6:24",
                        "type": ""
                      }
                    ],
                    "src": "5301:1129:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "6536:102:24",
                      "nodeType": "YulBlock",
                      "src": "6536:102:24",
                      "statements": [
                        {
                          "nativeSrc": "6546:26:24",
                          "nodeType": "YulAssignment",
                          "src": "6546:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "6558:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "6558:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "6569:2:24",
                                "nodeType": "YulLiteral",
                                "src": "6569:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "6554:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "6554:3:24"
                            },
                            "nativeSrc": "6554:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6554:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "6546:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "6546:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "6588:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "6588:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "6603:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6603:6:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6619:3:24",
                                            "nodeType": "YulLiteral",
                                            "src": "6619:3:24",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6624:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "6624:1:24",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "6615:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "6615:3:24"
                                        },
                                        "nativeSrc": "6615:11:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6615:11:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6628:1:24",
                                        "nodeType": "YulLiteral",
                                        "src": "6628:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "6611:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "6611:3:24"
                                    },
                                    "nativeSrc": "6611:19:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6611:19:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "6599:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "6599:3:24"
                                },
                                "nativeSrc": "6599:32:24",
                                "nodeType": "YulFunctionCall",
                                "src": "6599:32:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "6581:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "6581:6:24"
                            },
                            "nativeSrc": "6581:51:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6581:51:24"
                          },
                          "nativeSrc": "6581:51:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "6581:51:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nativeSrc": "6435:203:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "6505:9:24",
                        "nodeType": "YulTypedName",
                        "src": "6505:9:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "6516:6:24",
                        "nodeType": "YulTypedName",
                        "src": "6516:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "6527:4:24",
                        "nodeType": "YulTypedName",
                        "src": "6527:4:24",
                        "type": ""
                      }
                    ],
                    "src": "6435:203:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "6727:257:24",
                      "nodeType": "YulBlock",
                      "src": "6727:257:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "6773:16:24",
                            "nodeType": "YulBlock",
                            "src": "6773:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "6782:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "6782:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "6785:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "6785:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "6775:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6775:6:24"
                                  },
                                  "nativeSrc": "6775:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6775:12:24"
                                },
                                "nativeSrc": "6775:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "6775:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "6748:7:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6748:7:24"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6757:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6757:9:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "6744:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "6744:3:24"
                                },
                                "nativeSrc": "6744:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "6744:23:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "6769:2:24",
                                "nodeType": "YulLiteral",
                                "src": "6769:2:24",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "6740:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "6740:3:24"
                            },
                            "nativeSrc": "6740:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6740:32:24"
                          },
                          "nativeSrc": "6737:52:24",
                          "nodeType": "YulIf",
                          "src": "6737:52:24"
                        },
                        {
                          "nativeSrc": "6798:33:24",
                          "nodeType": "YulAssignment",
                          "src": "6798:33:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "6821:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "6821:9:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "6808:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "6808:12:24"
                            },
                            "nativeSrc": "6808:23:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6808:23:24"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nativeSrc": "6798:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "6798:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "6840:45:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "6840:45:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6870:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6870:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6881:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "6881:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6866:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "6866:3:24"
                                },
                                "nativeSrc": "6866:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "6866:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "6853:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "6853:12:24"
                            },
                            "nativeSrc": "6853:32:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6853:32:24"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nativeSrc": "6844:5:24",
                              "nodeType": "YulTypedName",
                              "src": "6844:5:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "6938:16:24",
                            "nodeType": "YulBlock",
                            "src": "6938:16:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "6947:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "6947:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "6950:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "6950:1:24",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "6940:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6940:6:24"
                                  },
                                  "nativeSrc": "6940:12:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6940:12:24"
                                },
                                "nativeSrc": "6940:12:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "6940:12:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "6907:5:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "6907:5:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "6928:5:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "6928:5:24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "6921:6:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "6921:6:24"
                                        },
                                        "nativeSrc": "6921:13:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6921:13:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "6914:6:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "6914:6:24"
                                    },
                                    "nativeSrc": "6914:21:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6914:21:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "6904:2:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "6904:2:24"
                                },
                                "nativeSrc": "6904:32:24",
                                "nodeType": "YulFunctionCall",
                                "src": "6904:32:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "6897:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "6897:6:24"
                            },
                            "nativeSrc": "6897:40:24",
                            "nodeType": "YulFunctionCall",
                            "src": "6897:40:24"
                          },
                          "nativeSrc": "6894:60:24",
                          "nodeType": "YulIf",
                          "src": "6894:60:24"
                        },
                        {
                          "nativeSrc": "6963:15:24",
                          "nodeType": "YulAssignment",
                          "src": "6963:15:24",
                          "value": {
                            "name": "value",
                            "nativeSrc": "6973:5:24",
                            "nodeType": "YulIdentifier",
                            "src": "6973:5:24"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nativeSrc": "6963:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "6963:6:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_bool",
                    "nativeSrc": "6643:341:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "6685:9:24",
                        "nodeType": "YulTypedName",
                        "src": "6685:9:24",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "6696:7:24",
                        "nodeType": "YulTypedName",
                        "src": "6696:7:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "6708:6:24",
                        "nodeType": "YulTypedName",
                        "src": "6708:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "6716:6:24",
                        "nodeType": "YulTypedName",
                        "src": "6716:6:24",
                        "type": ""
                      }
                    ],
                    "src": "6643:341:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "7090:76:24",
                      "nodeType": "YulBlock",
                      "src": "7090:76:24",
                      "statements": [
                        {
                          "nativeSrc": "7100:26:24",
                          "nodeType": "YulAssignment",
                          "src": "7100:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "7112:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "7112:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "7123:2:24",
                                "nodeType": "YulLiteral",
                                "src": "7123:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "7108:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "7108:3:24"
                            },
                            "nativeSrc": "7108:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7108:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "7100:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "7100:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "7142:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "7142:9:24"
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "7153:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "7153:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "7135:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "7135:6:24"
                            },
                            "nativeSrc": "7135:25:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7135:25:24"
                          },
                          "nativeSrc": "7135:25:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "7135:25:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nativeSrc": "6989:177:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "7059:9:24",
                        "nodeType": "YulTypedName",
                        "src": "7059:9:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "7070:6:24",
                        "nodeType": "YulTypedName",
                        "src": "7070:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "7081:4:24",
                        "nodeType": "YulTypedName",
                        "src": "7081:4:24",
                        "type": ""
                      }
                    ],
                    "src": "6989:177:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "7226:325:24",
                      "nodeType": "YulBlock",
                      "src": "7226:325:24",
                      "statements": [
                        {
                          "nativeSrc": "7236:22:24",
                          "nodeType": "YulAssignment",
                          "src": "7236:22:24",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "7250:1:24",
                                "nodeType": "YulLiteral",
                                "src": "7250:1:24",
                                "type": "",
                                "value": "1"
                              },
                              {
                                "name": "data",
                                "nativeSrc": "7253:4:24",
                                "nodeType": "YulIdentifier",
                                "src": "7253:4:24"
                              }
                            ],
                            "functionName": {
                              "name": "shr",
                              "nativeSrc": "7246:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "7246:3:24"
                            },
                            "nativeSrc": "7246:12:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7246:12:24"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nativeSrc": "7236:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "7236:6:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "7267:38:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "7267:38:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nativeSrc": "7297:4:24",
                                "nodeType": "YulIdentifier",
                                "src": "7297:4:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "7303:1:24",
                                "nodeType": "YulLiteral",
                                "src": "7303:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "7293:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "7293:3:24"
                            },
                            "nativeSrc": "7293:12:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7293:12:24"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nativeSrc": "7271:18:24",
                              "nodeType": "YulTypedName",
                              "src": "7271:18:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "7344:31:24",
                            "nodeType": "YulBlock",
                            "src": "7344:31:24",
                            "statements": [
                              {
                                "nativeSrc": "7346:27:24",
                                "nodeType": "YulAssignment",
                                "src": "7346:27:24",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "7360:6:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "7360:6:24"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "7368:4:24",
                                      "nodeType": "YulLiteral",
                                      "src": "7368:4:24",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nativeSrc": "7356:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "7356:3:24"
                                  },
                                  "nativeSrc": "7356:17:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7356:17:24"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "7346:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "7346:6:24"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nativeSrc": "7324:18:24",
                                "nodeType": "YulIdentifier",
                                "src": "7324:18:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "7317:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "7317:6:24"
                            },
                            "nativeSrc": "7317:26:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7317:26:24"
                          },
                          "nativeSrc": "7314:61:24",
                          "nodeType": "YulIf",
                          "src": "7314:61:24"
                        },
                        {
                          "body": {
                            "nativeSrc": "7434:111:24",
                            "nodeType": "YulBlock",
                            "src": "7434:111:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "7455:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "7455:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7462:3:24",
                                          "nodeType": "YulLiteral",
                                          "src": "7462:3:24",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7467:10:24",
                                          "nodeType": "YulLiteral",
                                          "src": "7467:10:24",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nativeSrc": "7458:3:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "7458:3:24"
                                      },
                                      "nativeSrc": "7458:20:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7458:20:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "7448:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "7448:6:24"
                                  },
                                  "nativeSrc": "7448:31:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7448:31:24"
                                },
                                "nativeSrc": "7448:31:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "7448:31:24"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "7499:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "7499:1:24",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "7502:4:24",
                                      "nodeType": "YulLiteral",
                                      "src": "7502:4:24",
                                      "type": "",
                                      "value": "0x22"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "7492:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "7492:6:24"
                                  },
                                  "nativeSrc": "7492:15:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7492:15:24"
                                },
                                "nativeSrc": "7492:15:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "7492:15:24"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "7527:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "7527:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "7530:4:24",
                                      "nodeType": "YulLiteral",
                                      "src": "7530:4:24",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "7520:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "7520:6:24"
                                  },
                                  "nativeSrc": "7520:15:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7520:15:24"
                                },
                                "nativeSrc": "7520:15:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "7520:15:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nativeSrc": "7390:18:24",
                                "nodeType": "YulIdentifier",
                                "src": "7390:18:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "7413:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "7413:6:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7421:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "7421:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "7410:2:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "7410:2:24"
                                },
                                "nativeSrc": "7410:14:24",
                                "nodeType": "YulFunctionCall",
                                "src": "7410:14:24"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nativeSrc": "7387:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "7387:2:24"
                            },
                            "nativeSrc": "7387:38:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7387:38:24"
                          },
                          "nativeSrc": "7384:161:24",
                          "nodeType": "YulIf",
                          "src": "7384:161:24"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nativeSrc": "7171:380:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nativeSrc": "7206:4:24",
                        "nodeType": "YulTypedName",
                        "src": "7206:4:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nativeSrc": "7215:6:24",
                        "nodeType": "YulTypedName",
                        "src": "7215:6:24",
                        "type": ""
                      }
                    ],
                    "src": "7171:380:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "7713:188:24",
                      "nodeType": "YulBlock",
                      "src": "7713:188:24",
                      "statements": [
                        {
                          "nativeSrc": "7723:26:24",
                          "nodeType": "YulAssignment",
                          "src": "7723:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "7735:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "7735:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "7746:2:24",
                                "nodeType": "YulLiteral",
                                "src": "7746:2:24",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "7731:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "7731:3:24"
                            },
                            "nativeSrc": "7731:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7731:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "7723:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "7723:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "7765:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "7765:9:24"
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "7776:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "7776:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "7758:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "7758:6:24"
                            },
                            "nativeSrc": "7758:25:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7758:25:24"
                          },
                          "nativeSrc": "7758:25:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "7758:25:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7803:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "7803:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7814:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "7814:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7799:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "7799:3:24"
                                },
                                "nativeSrc": "7799:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "7799:18:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "7823:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "7823:6:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "7839:3:24",
                                            "nodeType": "YulLiteral",
                                            "src": "7839:3:24",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "7844:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "7844:1:24",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "7835:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "7835:3:24"
                                        },
                                        "nativeSrc": "7835:11:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7835:11:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7848:1:24",
                                        "nodeType": "YulLiteral",
                                        "src": "7848:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "7831:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "7831:3:24"
                                    },
                                    "nativeSrc": "7831:19:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7831:19:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "7819:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "7819:3:24"
                                },
                                "nativeSrc": "7819:32:24",
                                "nodeType": "YulFunctionCall",
                                "src": "7819:32:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "7792:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "7792:6:24"
                            },
                            "nativeSrc": "7792:60:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7792:60:24"
                          },
                          "nativeSrc": "7792:60:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "7792:60:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7872:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "7872:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7883:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "7883:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7868:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "7868:3:24"
                                },
                                "nativeSrc": "7868:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "7868:18:24"
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "7888:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "7888:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "7861:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "7861:6:24"
                            },
                            "nativeSrc": "7861:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "7861:34:24"
                          },
                          "nativeSrc": "7861:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "7861:34:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes32_t_address_t_uint256__to_t_bytes32_t_address_t_uint256__fromStack_reversed",
                    "nativeSrc": "7556:345:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "7666:9:24",
                        "nodeType": "YulTypedName",
                        "src": "7666:9:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "7677:6:24",
                        "nodeType": "YulTypedName",
                        "src": "7677:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "7685:6:24",
                        "nodeType": "YulTypedName",
                        "src": "7685:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "7693:6:24",
                        "nodeType": "YulTypedName",
                        "src": "7693:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "7704:4:24",
                        "nodeType": "YulTypedName",
                        "src": "7704:4:24",
                        "type": ""
                      }
                    ],
                    "src": "7556:345:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "8080:168:24",
                      "nodeType": "YulBlock",
                      "src": "8080:168:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "8097:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "8097:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "8108:2:24",
                                "nodeType": "YulLiteral",
                                "src": "8108:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8090:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8090:6:24"
                            },
                            "nativeSrc": "8090:21:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8090:21:24"
                          },
                          "nativeSrc": "8090:21:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8090:21:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8131:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "8131:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8142:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "8142:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8127:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "8127:3:24"
                                },
                                "nativeSrc": "8127:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "8127:18:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "8147:2:24",
                                "nodeType": "YulLiteral",
                                "src": "8147:2:24",
                                "type": "",
                                "value": "18"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8120:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8120:6:24"
                            },
                            "nativeSrc": "8120:30:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8120:30:24"
                          },
                          "nativeSrc": "8120:30:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8120:30:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8170:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "8170:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8181:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "8181:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8166:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "8166:3:24"
                                },
                                "nativeSrc": "8166:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "8166:18:24"
                              },
                              {
                                "hexValue": "53657276696365206e6f7420616374697665",
                                "kind": "string",
                                "nativeSrc": "8186:20:24",
                                "nodeType": "YulLiteral",
                                "src": "8186:20:24",
                                "type": "",
                                "value": "Service not active"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8159:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8159:6:24"
                            },
                            "nativeSrc": "8159:48:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8159:48:24"
                          },
                          "nativeSrc": "8159:48:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8159:48:24"
                        },
                        {
                          "nativeSrc": "8216:26:24",
                          "nodeType": "YulAssignment",
                          "src": "8216:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "8228:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "8228:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "8239:2:24",
                                "nodeType": "YulLiteral",
                                "src": "8239:2:24",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "8224:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "8224:3:24"
                            },
                            "nativeSrc": "8224:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8224:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "8216:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "8216:4:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_6ade8173b8e4fc1a5ad20adac81a8ddca01b3c342ab50a80303220df93f507ff__to_t_string_memory_ptr__fromStack_reversed",
                    "nativeSrc": "7906:342:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "8057:9:24",
                        "nodeType": "YulTypedName",
                        "src": "8057:9:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "8071:4:24",
                        "nodeType": "YulTypedName",
                        "src": "8071:4:24",
                        "type": ""
                      }
                    ],
                    "src": "7906:342:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "8427:168:24",
                      "nodeType": "YulBlock",
                      "src": "8427:168:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "8444:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "8444:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "8455:2:24",
                                "nodeType": "YulLiteral",
                                "src": "8455:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8437:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8437:6:24"
                            },
                            "nativeSrc": "8437:21:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8437:21:24"
                          },
                          "nativeSrc": "8437:21:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8437:21:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8478:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "8478:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8489:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "8489:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8474:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "8474:3:24"
                                },
                                "nativeSrc": "8474:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "8474:18:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "8494:2:24",
                                "nodeType": "YulLiteral",
                                "src": "8494:2:24",
                                "type": "",
                                "value": "18"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8467:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8467:6:24"
                            },
                            "nativeSrc": "8467:30:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8467:30:24"
                          },
                          "nativeSrc": "8467:30:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8467:30:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8517:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "8517:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8528:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "8528:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8513:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "8513:3:24"
                                },
                                "nativeSrc": "8513:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "8513:18:24"
                              },
                              {
                                "hexValue": "546f6b656e206e6f74206163636570746564",
                                "kind": "string",
                                "nativeSrc": "8533:20:24",
                                "nodeType": "YulLiteral",
                                "src": "8533:20:24",
                                "type": "",
                                "value": "Token not accepted"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8506:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8506:6:24"
                            },
                            "nativeSrc": "8506:48:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8506:48:24"
                          },
                          "nativeSrc": "8506:48:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8506:48:24"
                        },
                        {
                          "nativeSrc": "8563:26:24",
                          "nodeType": "YulAssignment",
                          "src": "8563:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "8575:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "8575:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "8586:2:24",
                                "nodeType": "YulLiteral",
                                "src": "8586:2:24",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "8571:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "8571:3:24"
                            },
                            "nativeSrc": "8571:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8571:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "8563:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "8563:4:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_4d867bd14c37eceafe3e477a36f0f794e64eba2f6941b704e608dffa55286d0a__to_t_string_memory_ptr__fromStack_reversed",
                    "nativeSrc": "8253:342:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "8404:9:24",
                        "nodeType": "YulTypedName",
                        "src": "8404:9:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "8418:4:24",
                        "nodeType": "YulTypedName",
                        "src": "8418:4:24",
                        "type": ""
                      }
                    ],
                    "src": "8253:342:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "8774:169:24",
                      "nodeType": "YulBlock",
                      "src": "8774:169:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "8791:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "8791:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "8802:2:24",
                                "nodeType": "YulLiteral",
                                "src": "8802:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8784:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8784:6:24"
                            },
                            "nativeSrc": "8784:21:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8784:21:24"
                          },
                          "nativeSrc": "8784:21:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8784:21:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8825:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "8825:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8836:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "8836:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8821:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "8821:3:24"
                                },
                                "nativeSrc": "8821:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "8821:18:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "8841:2:24",
                                "nodeType": "YulLiteral",
                                "src": "8841:2:24",
                                "type": "",
                                "value": "19"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8814:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8814:6:24"
                            },
                            "nativeSrc": "8814:30:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8814:30:24"
                          },
                          "nativeSrc": "8814:30:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8814:30:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8864:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "8864:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8875:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "8875:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8860:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "8860:3:24"
                                },
                                "nativeSrc": "8860:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "8860:18:24"
                              },
                              {
                                "hexValue": "436861696e206e6f7420737570706f72746564",
                                "kind": "string",
                                "nativeSrc": "8880:21:24",
                                "nodeType": "YulLiteral",
                                "src": "8880:21:24",
                                "type": "",
                                "value": "Chain not supported"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8853:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8853:6:24"
                            },
                            "nativeSrc": "8853:49:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8853:49:24"
                          },
                          "nativeSrc": "8853:49:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8853:49:24"
                        },
                        {
                          "nativeSrc": "8911:26:24",
                          "nodeType": "YulAssignment",
                          "src": "8911:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "8923:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "8923:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "8934:2:24",
                                "nodeType": "YulLiteral",
                                "src": "8934:2:24",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "8919:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "8919:3:24"
                            },
                            "nativeSrc": "8919:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8919:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "8911:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "8911:4:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_8ad923b2e364ce1aeaf4231bbcdfbcf3913f3afdc5e95d213d4d8bc5188fdf23__to_t_string_memory_ptr__fromStack_reversed",
                    "nativeSrc": "8600:343:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "8751:9:24",
                        "nodeType": "YulTypedName",
                        "src": "8751:9:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "8765:4:24",
                        "nodeType": "YulTypedName",
                        "src": "8765:4:24",
                        "type": ""
                      }
                    ],
                    "src": "8600:343:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "8980:95:24",
                      "nodeType": "YulBlock",
                      "src": "8980:95:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "8997:1:24",
                                "nodeType": "YulLiteral",
                                "src": "8997:1:24",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9004:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "9004:3:24",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9009:10:24",
                                    "nodeType": "YulLiteral",
                                    "src": "9009:10:24",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "9000:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9000:3:24"
                                },
                                "nativeSrc": "9000:20:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9000:20:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "8990:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "8990:6:24"
                            },
                            "nativeSrc": "8990:31:24",
                            "nodeType": "YulFunctionCall",
                            "src": "8990:31:24"
                          },
                          "nativeSrc": "8990:31:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "8990:31:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "9037:1:24",
                                "nodeType": "YulLiteral",
                                "src": "9037:1:24",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "9040:4:24",
                                "nodeType": "YulLiteral",
                                "src": "9040:4:24",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "9030:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "9030:6:24"
                            },
                            "nativeSrc": "9030:15:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9030:15:24"
                          },
                          "nativeSrc": "9030:15:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "9030:15:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "9061:1:24",
                                "nodeType": "YulLiteral",
                                "src": "9061:1:24",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "9064:4:24",
                                "nodeType": "YulLiteral",
                                "src": "9064:4:24",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "9054:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "9054:6:24"
                            },
                            "nativeSrc": "9054:15:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9054:15:24"
                          },
                          "nativeSrc": "9054:15:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "9054:15:24"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nativeSrc": "8948:127:24",
                    "nodeType": "YulFunctionDefinition",
                    "src": "8948:127:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "9127:88:24",
                      "nodeType": "YulBlock",
                      "src": "9127:88:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "9158:22:24",
                            "nodeType": "YulBlock",
                            "src": "9158:22:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nativeSrc": "9160:16:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "9160:16:24"
                                  },
                                  "nativeSrc": "9160:18:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9160:18:24"
                                },
                                "nativeSrc": "9160:18:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "9160:18:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "9143:5:24",
                                "nodeType": "YulIdentifier",
                                "src": "9143:5:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9154:1:24",
                                    "nodeType": "YulLiteral",
                                    "src": "9154:1:24",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nativeSrc": "9150:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9150:3:24"
                                },
                                "nativeSrc": "9150:6:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9150:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nativeSrc": "9140:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "9140:2:24"
                            },
                            "nativeSrc": "9140:17:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9140:17:24"
                          },
                          "nativeSrc": "9137:43:24",
                          "nodeType": "YulIf",
                          "src": "9137:43:24"
                        },
                        {
                          "nativeSrc": "9189:20:24",
                          "nodeType": "YulAssignment",
                          "src": "9189:20:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "9200:5:24",
                                "nodeType": "YulIdentifier",
                                "src": "9200:5:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "9207:1:24",
                                "nodeType": "YulLiteral",
                                "src": "9207:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "9196:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "9196:3:24"
                            },
                            "nativeSrc": "9196:13:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9196:13:24"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nativeSrc": "9189:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "9189:3:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "increment_t_uint256",
                    "nativeSrc": "9080:135:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "9109:5:24",
                        "nodeType": "YulTypedName",
                        "src": "9109:5:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nativeSrc": "9119:3:24",
                        "nodeType": "YulTypedName",
                        "src": "9119:3:24",
                        "type": ""
                      }
                    ],
                    "src": "9080:135:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "9395:184:24",
                      "nodeType": "YulBlock",
                      "src": "9395:184:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "9412:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "9412:3:24"
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "9417:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "9417:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "9405:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "9405:6:24"
                            },
                            "nativeSrc": "9405:19:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9405:19:24"
                          },
                          "nativeSrc": "9405:19:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "9405:19:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "9444:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "9444:3:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9449:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "9449:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9440:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9440:3:24"
                                },
                                "nativeSrc": "9440:12:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9440:12:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9462:2:24",
                                        "nodeType": "YulLiteral",
                                        "src": "9462:2:24",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value1",
                                        "nativeSrc": "9466:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "9466:6:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "9458:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "9458:3:24"
                                    },
                                    "nativeSrc": "9458:15:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9458:15:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9479:26:24",
                                        "nodeType": "YulLiteral",
                                        "src": "9479:26:24",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "9475:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "9475:3:24"
                                    },
                                    "nativeSrc": "9475:31:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9475:31:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "9454:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9454:3:24"
                                },
                                "nativeSrc": "9454:53:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9454:53:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "9433:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "9433:6:24"
                            },
                            "nativeSrc": "9433:75:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9433:75:24"
                          },
                          "nativeSrc": "9433:75:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "9433:75:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "9528:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "9528:3:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9533:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "9533:2:24",
                                    "type": "",
                                    "value": "52"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9524:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9524:3:24"
                                },
                                "nativeSrc": "9524:12:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9524:12:24"
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "9538:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "9538:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "9517:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "9517:6:24"
                            },
                            "nativeSrc": "9517:28:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9517:28:24"
                          },
                          "nativeSrc": "9517:28:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "9517:28:24"
                        },
                        {
                          "nativeSrc": "9554:19:24",
                          "nodeType": "YulAssignment",
                          "src": "9554:19:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "9565:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "9565:3:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "9570:2:24",
                                "nodeType": "YulLiteral",
                                "src": "9570:2:24",
                                "type": "",
                                "value": "84"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "9561:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "9561:3:24"
                            },
                            "nativeSrc": "9561:12:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9561:12:24"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nativeSrc": "9554:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "9554:3:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
                    "nativeSrc": "9220:359:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nativeSrc": "9355:3:24",
                        "nodeType": "YulTypedName",
                        "src": "9355:3:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "9360:6:24",
                        "nodeType": "YulTypedName",
                        "src": "9360:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "9368:6:24",
                        "nodeType": "YulTypedName",
                        "src": "9368:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "9376:6:24",
                        "nodeType": "YulTypedName",
                        "src": "9376:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nativeSrc": "9387:3:24",
                        "nodeType": "YulTypedName",
                        "src": "9387:3:24",
                        "type": ""
                      }
                    ],
                    "src": "9220:359:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "9767:279:24",
                      "nodeType": "YulBlock",
                      "src": "9767:279:24",
                      "statements": [
                        {
                          "nativeSrc": "9777:27:24",
                          "nodeType": "YulAssignment",
                          "src": "9777:27:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "9789:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "9789:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "9800:3:24",
                                "nodeType": "YulLiteral",
                                "src": "9800:3:24",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "9785:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "9785:3:24"
                            },
                            "nativeSrc": "9785:19:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9785:19:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "9777:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "9777:4:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "9813:29:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "9813:29:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9831:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "9831:3:24",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9836:1:24",
                                    "nodeType": "YulLiteral",
                                    "src": "9836:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "9827:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9827:3:24"
                                },
                                "nativeSrc": "9827:11:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9827:11:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "9840:1:24",
                                "nodeType": "YulLiteral",
                                "src": "9840:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nativeSrc": "9823:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "9823:3:24"
                            },
                            "nativeSrc": "9823:19:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9823:19:24"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nativeSrc": "9817:2:24",
                              "nodeType": "YulTypedName",
                              "src": "9817:2:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "9858:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "9858:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "9873:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "9873:6:24"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "9881:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "9881:2:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "9869:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9869:3:24"
                                },
                                "nativeSrc": "9869:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9869:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "9851:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "9851:6:24"
                            },
                            "nativeSrc": "9851:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9851:34:24"
                          },
                          "nativeSrc": "9851:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "9851:34:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9905:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "9905:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9916:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "9916:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9901:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9901:3:24"
                                },
                                "nativeSrc": "9901:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9901:18:24"
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "9921:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "9921:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "9894:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "9894:6:24"
                            },
                            "nativeSrc": "9894:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9894:34:24"
                          },
                          "nativeSrc": "9894:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "9894:34:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9948:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "9948:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9959:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "9959:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9944:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9944:3:24"
                                },
                                "nativeSrc": "9944:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9944:18:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "9968:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "9968:6:24"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "9976:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "9976:2:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "9964:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9964:3:24"
                                },
                                "nativeSrc": "9964:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9964:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "9937:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "9937:6:24"
                            },
                            "nativeSrc": "9937:43:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9937:43:24"
                          },
                          "nativeSrc": "9937:43:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "9937:43:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "10000:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "10000:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10011:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "10011:2:24",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9996:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "9996:3:24"
                                },
                                "nativeSrc": "9996:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "9996:18:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nativeSrc": "10020:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "10020:6:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10028:10:24",
                                    "nodeType": "YulLiteral",
                                    "src": "10028:10:24",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "10016:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "10016:3:24"
                                },
                                "nativeSrc": "10016:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "10016:23:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "9989:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "9989:6:24"
                            },
                            "nativeSrc": "9989:51:24",
                            "nodeType": "YulFunctionCall",
                            "src": "9989:51:24"
                          },
                          "nativeSrc": "9989:51:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "9989:51:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint32__to_t_address_t_uint256_t_address_t_uint32__fromStack_reversed",
                    "nativeSrc": "9584:462:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "9712:9:24",
                        "nodeType": "YulTypedName",
                        "src": "9712:9:24",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nativeSrc": "9723:6:24",
                        "nodeType": "YulTypedName",
                        "src": "9723:6:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "9731:6:24",
                        "nodeType": "YulTypedName",
                        "src": "9731:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "9739:6:24",
                        "nodeType": "YulTypedName",
                        "src": "9739:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "9747:6:24",
                        "nodeType": "YulTypedName",
                        "src": "9747:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "9758:4:24",
                        "nodeType": "YulTypedName",
                        "src": "9758:4:24",
                        "type": ""
                      }
                    ],
                    "src": "9584:462:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "10256:231:24",
                      "nodeType": "YulBlock",
                      "src": "10256:231:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "10273:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "10273:3:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10286:2:24",
                                        "nodeType": "YulLiteral",
                                        "src": "10286:2:24",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value0",
                                        "nativeSrc": "10290:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "10290:6:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "10282:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "10282:3:24"
                                    },
                                    "nativeSrc": "10282:15:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10282:15:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10303:26:24",
                                        "nodeType": "YulLiteral",
                                        "src": "10303:26:24",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "10299:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "10299:3:24"
                                    },
                                    "nativeSrc": "10299:31:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10299:31:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "10278:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "10278:3:24"
                                },
                                "nativeSrc": "10278:53:24",
                                "nodeType": "YulFunctionCall",
                                "src": "10278:53:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "10266:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "10266:6:24"
                            },
                            "nativeSrc": "10266:66:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10266:66:24"
                          },
                          "nativeSrc": "10266:66:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "10266:66:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "10358:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "10358:3:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10363:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "10363:2:24",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "10354:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "10354:3:24"
                                },
                                "nativeSrc": "10354:12:24",
                                "nodeType": "YulFunctionCall",
                                "src": "10354:12:24"
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "10368:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "10368:6:24"
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "10376:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "10376:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "calldatacopy",
                              "nativeSrc": "10341:12:24",
                              "nodeType": "YulIdentifier",
                              "src": "10341:12:24"
                            },
                            "nativeSrc": "10341:42:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10341:42:24"
                          },
                          "nativeSrc": "10341:42:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "10341:42:24"
                        },
                        {
                          "nativeSrc": "10392:26:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "10392:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "10406:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "10406:3:24"
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "10411:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "10411:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "10402:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "10402:3:24"
                            },
                            "nativeSrc": "10402:16:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10402:16:24"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nativeSrc": "10396:2:24",
                              "nodeType": "YulTypedName",
                              "src": "10396:2:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nativeSrc": "10438:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "10438:2:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10442:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "10442:2:24",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "10434:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "10434:3:24"
                                },
                                "nativeSrc": "10434:11:24",
                                "nodeType": "YulFunctionCall",
                                "src": "10434:11:24"
                              },
                              {
                                "name": "value3",
                                "nativeSrc": "10447:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "10447:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "10427:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "10427:6:24"
                            },
                            "nativeSrc": "10427:27:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10427:27:24"
                          },
                          "nativeSrc": "10427:27:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "10427:27:24"
                        },
                        {
                          "nativeSrc": "10463:18:24",
                          "nodeType": "YulAssignment",
                          "src": "10463:18:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "_1",
                                "nativeSrc": "10474:2:24",
                                "nodeType": "YulIdentifier",
                                "src": "10474:2:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "10478:2:24",
                                "nodeType": "YulLiteral",
                                "src": "10478:2:24",
                                "type": "",
                                "value": "52"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "10470:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "10470:3:24"
                            },
                            "nativeSrc": "10470:11:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10470:11:24"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nativeSrc": "10463:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "10463:3:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_address_t_string_calldata_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
                    "nativeSrc": "10051:436:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nativeSrc": "10208:3:24",
                        "nodeType": "YulTypedName",
                        "src": "10208:3:24",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nativeSrc": "10213:6:24",
                        "nodeType": "YulTypedName",
                        "src": "10213:6:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "10221:6:24",
                        "nodeType": "YulTypedName",
                        "src": "10221:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "10229:6:24",
                        "nodeType": "YulTypedName",
                        "src": "10229:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "10237:6:24",
                        "nodeType": "YulTypedName",
                        "src": "10237:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nativeSrc": "10248:3:24",
                        "nodeType": "YulTypedName",
                        "src": "10248:3:24",
                        "type": ""
                      }
                    ],
                    "src": "10051:436:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "10524:95:24",
                      "nodeType": "YulBlock",
                      "src": "10524:95:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "10541:1:24",
                                "nodeType": "YulLiteral",
                                "src": "10541:1:24",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10548:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "10548:3:24",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10553:10:24",
                                    "nodeType": "YulLiteral",
                                    "src": "10553:10:24",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "10544:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "10544:3:24"
                                },
                                "nativeSrc": "10544:20:24",
                                "nodeType": "YulFunctionCall",
                                "src": "10544:20:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "10534:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "10534:6:24"
                            },
                            "nativeSrc": "10534:31:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10534:31:24"
                          },
                          "nativeSrc": "10534:31:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "10534:31:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "10581:1:24",
                                "nodeType": "YulLiteral",
                                "src": "10581:1:24",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "10584:4:24",
                                "nodeType": "YulLiteral",
                                "src": "10584:4:24",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "10574:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "10574:6:24"
                            },
                            "nativeSrc": "10574:15:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10574:15:24"
                          },
                          "nativeSrc": "10574:15:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "10574:15:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "10605:1:24",
                                "nodeType": "YulLiteral",
                                "src": "10605:1:24",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "10608:4:24",
                                "nodeType": "YulLiteral",
                                "src": "10608:4:24",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "10598:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "10598:6:24"
                            },
                            "nativeSrc": "10598:15:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10598:15:24"
                          },
                          "nativeSrc": "10598:15:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "10598:15:24"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nativeSrc": "10492:127:24",
                    "nodeType": "YulFunctionDefinition",
                    "src": "10492:127:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "10680:65:24",
                      "nodeType": "YulBlock",
                      "src": "10680:65:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "10697:1:24",
                                "nodeType": "YulLiteral",
                                "src": "10697:1:24",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "name": "ptr",
                                "nativeSrc": "10700:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "10700:3:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "10690:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "10690:6:24"
                            },
                            "nativeSrc": "10690:14:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10690:14:24"
                          },
                          "nativeSrc": "10690:14:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "10690:14:24"
                        },
                        {
                          "nativeSrc": "10713:26:24",
                          "nodeType": "YulAssignment",
                          "src": "10713:26:24",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "10731:1:24",
                                "nodeType": "YulLiteral",
                                "src": "10731:1:24",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "10734:4:24",
                                "nodeType": "YulLiteral",
                                "src": "10734:4:24",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "keccak256",
                              "nativeSrc": "10721:9:24",
                              "nodeType": "YulIdentifier",
                              "src": "10721:9:24"
                            },
                            "nativeSrc": "10721:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10721:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nativeSrc": "10713:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "10713:4:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_dataslot_string_storage",
                    "nativeSrc": "10624:121:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "ptr",
                        "nativeSrc": "10663:3:24",
                        "nodeType": "YulTypedName",
                        "src": "10663:3:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "data",
                        "nativeSrc": "10671:4:24",
                        "nodeType": "YulTypedName",
                        "src": "10671:4:24",
                        "type": ""
                      }
                    ],
                    "src": "10624:121:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "10831:462:24",
                      "nodeType": "YulBlock",
                      "src": "10831:462:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "10864:423:24",
                            "nodeType": "YulBlock",
                            "src": "10864:423:24",
                            "statements": [
                              {
                                "nativeSrc": "10878:11:24",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10878:11:24",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "10888:1:24",
                                  "nodeType": "YulLiteral",
                                  "src": "10888:1:24",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "_1",
                                    "nativeSrc": "10882:2:24",
                                    "nodeType": "YulTypedName",
                                    "src": "10882:2:24",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "10909:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "10909:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "name": "array",
                                      "nativeSrc": "10912:5:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "10912:5:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "10902:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "10902:6:24"
                                  },
                                  "nativeSrc": "10902:16:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10902:16:24"
                                },
                                "nativeSrc": "10902:16:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "10902:16:24"
                              },
                              {
                                "nativeSrc": "10931:30:24",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10931:30:24",
                                "value": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "10953:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "10953:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "10956:4:24",
                                      "nodeType": "YulLiteral",
                                      "src": "10956:4:24",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "keccak256",
                                    "nativeSrc": "10943:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "10943:9:24"
                                  },
                                  "nativeSrc": "10943:18:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10943:18:24"
                                },
                                "variables": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "10935:4:24",
                                    "nodeType": "YulTypedName",
                                    "src": "10935:4:24",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "10974:57:24",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10974:57:24",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "data",
                                      "nativeSrc": "10997:4:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "10997:4:24"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "11007:1:24",
                                          "nodeType": "YulLiteral",
                                          "src": "11007:1:24",
                                          "type": "",
                                          "value": "5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "startIndex",
                                              "nativeSrc": "11014:10:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "11014:10:24"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "11026:2:24",
                                              "nodeType": "YulLiteral",
                                              "src": "11026:2:24",
                                              "type": "",
                                              "value": "31"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "11010:3:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "11010:3:24"
                                          },
                                          "nativeSrc": "11010:19:24",
                                          "nodeType": "YulFunctionCall",
                                          "src": "11010:19:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "11003:3:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "11003:3:24"
                                      },
                                      "nativeSrc": "11003:27:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11003:27:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "10993:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "10993:3:24"
                                  },
                                  "nativeSrc": "10993:38:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10993:38:24"
                                },
                                "variables": [
                                  {
                                    "name": "deleteStart",
                                    "nativeSrc": "10978:11:24",
                                    "nodeType": "YulTypedName",
                                    "src": "10978:11:24",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "11068:23:24",
                                  "nodeType": "YulBlock",
                                  "src": "11068:23:24",
                                  "statements": [
                                    {
                                      "nativeSrc": "11070:19:24",
                                      "nodeType": "YulAssignment",
                                      "src": "11070:19:24",
                                      "value": {
                                        "name": "data",
                                        "nativeSrc": "11085:4:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "11085:4:24"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "deleteStart",
                                          "nativeSrc": "11070:11:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "11070:11:24"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nativeSrc": "11050:10:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "11050:10:24"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "11062:4:24",
                                      "nodeType": "YulLiteral",
                                      "src": "11062:4:24",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nativeSrc": "11047:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "11047:2:24"
                                  },
                                  "nativeSrc": "11047:20:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11047:20:24"
                                },
                                "nativeSrc": "11044:47:24",
                                "nodeType": "YulIf",
                                "src": "11044:47:24"
                              },
                              {
                                "nativeSrc": "11104:41:24",
                                "nodeType": "YulVariableDeclaration",
                                "src": "11104:41:24",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "data",
                                      "nativeSrc": "11118:4:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "11118:4:24"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "11128:1:24",
                                          "nodeType": "YulLiteral",
                                          "src": "11128:1:24",
                                          "type": "",
                                          "value": "5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "len",
                                              "nativeSrc": "11135:3:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "11135:3:24"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "11140:2:24",
                                              "nodeType": "YulLiteral",
                                              "src": "11140:2:24",
                                              "type": "",
                                              "value": "31"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "11131:3:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "11131:3:24"
                                          },
                                          "nativeSrc": "11131:12:24",
                                          "nodeType": "YulFunctionCall",
                                          "src": "11131:12:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "11124:3:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "11124:3:24"
                                      },
                                      "nativeSrc": "11124:20:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11124:20:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "11114:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "11114:3:24"
                                  },
                                  "nativeSrc": "11114:31:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11114:31:24"
                                },
                                "variables": [
                                  {
                                    "name": "_2",
                                    "nativeSrc": "11108:2:24",
                                    "nodeType": "YulTypedName",
                                    "src": "11108:2:24",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "11158:24:24",
                                "nodeType": "YulVariableDeclaration",
                                "src": "11158:24:24",
                                "value": {
                                  "name": "deleteStart",
                                  "nativeSrc": "11171:11:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "11171:11:24"
                                },
                                "variables": [
                                  {
                                    "name": "start",
                                    "nativeSrc": "11162:5:24",
                                    "nodeType": "YulTypedName",
                                    "src": "11162:5:24",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "11256:21:24",
                                  "nodeType": "YulBlock",
                                  "src": "11256:21:24",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "start",
                                            "nativeSrc": "11265:5:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "11265:5:24"
                                          },
                                          {
                                            "name": "_1",
                                            "nativeSrc": "11272:2:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "11272:2:24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nativeSrc": "11258:6:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "11258:6:24"
                                        },
                                        "nativeSrc": "11258:17:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "11258:17:24"
                                      },
                                      "nativeSrc": "11258:17:24",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "11258:17:24"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "start",
                                      "nativeSrc": "11206:5:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "11206:5:24"
                                    },
                                    {
                                      "name": "_2",
                                      "nativeSrc": "11213:2:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "11213:2:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nativeSrc": "11203:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "11203:2:24"
                                  },
                                  "nativeSrc": "11203:13:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11203:13:24"
                                },
                                "nativeSrc": "11195:82:24",
                                "nodeType": "YulForLoop",
                                "post": {
                                  "nativeSrc": "11217:26:24",
                                  "nodeType": "YulBlock",
                                  "src": "11217:26:24",
                                  "statements": [
                                    {
                                      "nativeSrc": "11219:22:24",
                                      "nodeType": "YulAssignment",
                                      "src": "11219:22:24",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "start",
                                            "nativeSrc": "11232:5:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "11232:5:24"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "11239:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "11239:1:24",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "11228:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "11228:3:24"
                                        },
                                        "nativeSrc": "11228:13:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "11228:13:24"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "11219:5:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "11219:5:24"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "pre": {
                                  "nativeSrc": "11199:3:24",
                                  "nodeType": "YulBlock",
                                  "src": "11199:3:24",
                                  "statements": []
                                },
                                "src": "11195:82:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "len",
                                "nativeSrc": "10847:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "10847:3:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "10852:2:24",
                                "nodeType": "YulLiteral",
                                "src": "10852:2:24",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "10844:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "10844:2:24"
                            },
                            "nativeSrc": "10844:11:24",
                            "nodeType": "YulFunctionCall",
                            "src": "10844:11:24"
                          },
                          "nativeSrc": "10841:446:24",
                          "nodeType": "YulIf",
                          "src": "10841:446:24"
                        }
                      ]
                    },
                    "name": "clean_up_bytearray_end_slots_string_storage",
                    "nativeSrc": "10750:543:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "array",
                        "nativeSrc": "10803:5:24",
                        "nodeType": "YulTypedName",
                        "src": "10803:5:24",
                        "type": ""
                      },
                      {
                        "name": "len",
                        "nativeSrc": "10810:3:24",
                        "nodeType": "YulTypedName",
                        "src": "10810:3:24",
                        "type": ""
                      },
                      {
                        "name": "startIndex",
                        "nativeSrc": "10815:10:24",
                        "nodeType": "YulTypedName",
                        "src": "10815:10:24",
                        "type": ""
                      }
                    ],
                    "src": "10750:543:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "11383:81:24",
                      "nodeType": "YulBlock",
                      "src": "11383:81:24",
                      "statements": [
                        {
                          "nativeSrc": "11393:65:24",
                          "nodeType": "YulAssignment",
                          "src": "11393:65:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "11408:4:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "11408:4:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "11426:1:24",
                                                "nodeType": "YulLiteral",
                                                "src": "11426:1:24",
                                                "type": "",
                                                "value": "3"
                                              },
                                              {
                                                "name": "len",
                                                "nativeSrc": "11429:3:24",
                                                "nodeType": "YulIdentifier",
                                                "src": "11429:3:24"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "11422:3:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "11422:3:24"
                                            },
                                            "nativeSrc": "11422:11:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "11422:11:24"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "11439:1:24",
                                                "nodeType": "YulLiteral",
                                                "src": "11439:1:24",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "11435:3:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "11435:3:24"
                                            },
                                            "nativeSrc": "11435:6:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "11435:6:24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shr",
                                          "nativeSrc": "11418:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "11418:3:24"
                                        },
                                        "nativeSrc": "11418:24:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "11418:24:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "11414:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "11414:3:24"
                                    },
                                    "nativeSrc": "11414:29:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11414:29:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "11404:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "11404:3:24"
                                },
                                "nativeSrc": "11404:40:24",
                                "nodeType": "YulFunctionCall",
                                "src": "11404:40:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11450:1:24",
                                    "nodeType": "YulLiteral",
                                    "src": "11450:1:24",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "len",
                                    "nativeSrc": "11453:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "11453:3:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "11446:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "11446:3:24"
                                },
                                "nativeSrc": "11446:11:24",
                                "nodeType": "YulFunctionCall",
                                "src": "11446:11:24"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nativeSrc": "11401:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "11401:2:24"
                            },
                            "nativeSrc": "11401:57:24",
                            "nodeType": "YulFunctionCall",
                            "src": "11401:57:24"
                          },
                          "variableNames": [
                            {
                              "name": "used",
                              "nativeSrc": "11393:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "11393:4:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                    "nativeSrc": "11298:166:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nativeSrc": "11360:4:24",
                        "nodeType": "YulTypedName",
                        "src": "11360:4:24",
                        "type": ""
                      },
                      {
                        "name": "len",
                        "nativeSrc": "11366:3:24",
                        "nodeType": "YulTypedName",
                        "src": "11366:3:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "used",
                        "nativeSrc": "11374:4:24",
                        "nodeType": "YulTypedName",
                        "src": "11374:4:24",
                        "type": ""
                      }
                    ],
                    "src": "11298:166:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "11565:1249:24",
                      "nodeType": "YulBlock",
                      "src": "11565:1249:24",
                      "statements": [
                        {
                          "nativeSrc": "11575:24:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "11575:24:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "src",
                                "nativeSrc": "11595:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "11595:3:24"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nativeSrc": "11589:5:24",
                              "nodeType": "YulIdentifier",
                              "src": "11589:5:24"
                            },
                            "nativeSrc": "11589:10:24",
                            "nodeType": "YulFunctionCall",
                            "src": "11589:10:24"
                          },
                          "variables": [
                            {
                              "name": "newLen",
                              "nativeSrc": "11579:6:24",
                              "nodeType": "YulTypedName",
                              "src": "11579:6:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "11642:22:24",
                            "nodeType": "YulBlock",
                            "src": "11642:22:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nativeSrc": "11644:16:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "11644:16:24"
                                  },
                                  "nativeSrc": "11644:18:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11644:18:24"
                                },
                                "nativeSrc": "11644:18:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "11644:18:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "newLen",
                                "nativeSrc": "11614:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "11614:6:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "11622:18:24",
                                "nodeType": "YulLiteral",
                                "src": "11622:18:24",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "11611:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "11611:2:24"
                            },
                            "nativeSrc": "11611:30:24",
                            "nodeType": "YulFunctionCall",
                            "src": "11611:30:24"
                          },
                          "nativeSrc": "11608:56:24",
                          "nodeType": "YulIf",
                          "src": "11608:56:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nativeSrc": "11717:4:24",
                                "nodeType": "YulIdentifier",
                                "src": "11717:4:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot",
                                        "nativeSrc": "11755:4:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "11755:4:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nativeSrc": "11749:5:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "11749:5:24"
                                    },
                                    "nativeSrc": "11749:11:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11749:11:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "extract_byte_array_length",
                                  "nativeSrc": "11723:25:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "11723:25:24"
                                },
                                "nativeSrc": "11723:38:24",
                                "nodeType": "YulFunctionCall",
                                "src": "11723:38:24"
                              },
                              {
                                "name": "newLen",
                                "nativeSrc": "11763:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "11763:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "clean_up_bytearray_end_slots_string_storage",
                              "nativeSrc": "11673:43:24",
                              "nodeType": "YulIdentifier",
                              "src": "11673:43:24"
                            },
                            "nativeSrc": "11673:97:24",
                            "nodeType": "YulFunctionCall",
                            "src": "11673:97:24"
                          },
                          "nativeSrc": "11673:97:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "11673:97:24"
                        },
                        {
                          "nativeSrc": "11779:18:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "11779:18:24",
                          "value": {
                            "kind": "number",
                            "nativeSrc": "11796:1:24",
                            "nodeType": "YulLiteral",
                            "src": "11796:1:24",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "srcOffset",
                              "nativeSrc": "11783:9:24",
                              "nodeType": "YulTypedName",
                              "src": "11783:9:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "11806:23:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "11806:23:24",
                          "value": {
                            "kind": "number",
                            "nativeSrc": "11825:4:24",
                            "nodeType": "YulLiteral",
                            "src": "11825:4:24",
                            "type": "",
                            "value": "0x20"
                          },
                          "variables": [
                            {
                              "name": "srcOffset_1",
                              "nativeSrc": "11810:11:24",
                              "nodeType": "YulTypedName",
                              "src": "11810:11:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "11838:17:24",
                          "nodeType": "YulAssignment",
                          "src": "11838:17:24",
                          "value": {
                            "kind": "number",
                            "nativeSrc": "11851:4:24",
                            "nodeType": "YulLiteral",
                            "src": "11851:4:24",
                            "type": "",
                            "value": "0x20"
                          },
                          "variableNames": [
                            {
                              "name": "srcOffset",
                              "nativeSrc": "11838:9:24",
                              "nodeType": "YulIdentifier",
                              "src": "11838:9:24"
                            }
                          ]
                        },
                        {
                          "cases": [
                            {
                              "body": {
                                "nativeSrc": "11901:656:24",
                                "nodeType": "YulBlock",
                                "src": "11901:656:24",
                                "statements": [
                                  {
                                    "nativeSrc": "11915:35:24",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "11915:35:24",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nativeSrc": "11934:6:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "11934:6:24"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "11946:2:24",
                                              "nodeType": "YulLiteral",
                                              "src": "11946:2:24",
                                              "type": "",
                                              "value": "31"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nativeSrc": "11942:3:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "11942:3:24"
                                          },
                                          "nativeSrc": "11942:7:24",
                                          "nodeType": "YulFunctionCall",
                                          "src": "11942:7:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "11930:3:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "11930:3:24"
                                      },
                                      "nativeSrc": "11930:20:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11930:20:24"
                                    },
                                    "variables": [
                                      {
                                        "name": "loopEnd",
                                        "nativeSrc": "11919:7:24",
                                        "nodeType": "YulTypedName",
                                        "src": "11919:7:24",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "11963:49:24",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "11963:49:24",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nativeSrc": "12007:4:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "12007:4:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_dataslot_string_storage",
                                        "nativeSrc": "11977:29:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "11977:29:24"
                                      },
                                      "nativeSrc": "11977:35:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11977:35:24"
                                    },
                                    "variables": [
                                      {
                                        "name": "dstPtr",
                                        "nativeSrc": "11967:6:24",
                                        "nodeType": "YulTypedName",
                                        "src": "11967:6:24",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "12025:10:24",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "12025:10:24",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "12034:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "12034:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "12029:1:24",
                                        "nodeType": "YulTypedName",
                                        "src": "12029:1:24",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "12112:172:24",
                                      "nodeType": "YulBlock",
                                      "src": "12112:172:24",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nativeSrc": "12137:6:24",
                                                "nodeType": "YulIdentifier",
                                                "src": "12137:6:24"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "12155:3:24",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12155:3:24"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "12160:9:24",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12160:9:24"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "12151:3:24",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12151:3:24"
                                                    },
                                                    "nativeSrc": "12151:19:24",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12151:19:24"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "12145:5:24",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12145:5:24"
                                                },
                                                "nativeSrc": "12145:26:24",
                                                "nodeType": "YulFunctionCall",
                                                "src": "12145:26:24"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "12130:6:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12130:6:24"
                                            },
                                            "nativeSrc": "12130:42:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12130:42:24"
                                          },
                                          "nativeSrc": "12130:42:24",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "12130:42:24"
                                        },
                                        {
                                          "nativeSrc": "12189:24:24",
                                          "nodeType": "YulAssignment",
                                          "src": "12189:24:24",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nativeSrc": "12203:6:24",
                                                "nodeType": "YulIdentifier",
                                                "src": "12203:6:24"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "12211:1:24",
                                                "nodeType": "YulLiteral",
                                                "src": "12211:1:24",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "12199:3:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12199:3:24"
                                            },
                                            "nativeSrc": "12199:14:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12199:14:24"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "dstPtr",
                                              "nativeSrc": "12189:6:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12189:6:24"
                                            }
                                          ]
                                        },
                                        {
                                          "nativeSrc": "12230:40:24",
                                          "nodeType": "YulAssignment",
                                          "src": "12230:40:24",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "srcOffset",
                                                "nativeSrc": "12247:9:24",
                                                "nodeType": "YulIdentifier",
                                                "src": "12247:9:24"
                                              },
                                              {
                                                "name": "srcOffset_1",
                                                "nativeSrc": "12258:11:24",
                                                "nodeType": "YulIdentifier",
                                                "src": "12258:11:24"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "12243:3:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12243:3:24"
                                            },
                                            "nativeSrc": "12243:27:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12243:27:24"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "srcOffset",
                                              "nativeSrc": "12230:9:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12230:9:24"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "12059:1:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "12059:1:24"
                                        },
                                        {
                                          "name": "loopEnd",
                                          "nativeSrc": "12062:7:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "12062:7:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "12056:2:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "12056:2:24"
                                      },
                                      "nativeSrc": "12056:14:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12056:14:24"
                                    },
                                    "nativeSrc": "12048:236:24",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "12071:28:24",
                                      "nodeType": "YulBlock",
                                      "src": "12071:28:24",
                                      "statements": [
                                        {
                                          "nativeSrc": "12073:24:24",
                                          "nodeType": "YulAssignment",
                                          "src": "12073:24:24",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "i",
                                                "nativeSrc": "12082:1:24",
                                                "nodeType": "YulIdentifier",
                                                "src": "12082:1:24"
                                              },
                                              {
                                                "name": "srcOffset_1",
                                                "nativeSrc": "12085:11:24",
                                                "nodeType": "YulIdentifier",
                                                "src": "12085:11:24"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "12078:3:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12078:3:24"
                                            },
                                            "nativeSrc": "12078:19:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12078:19:24"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "12073:1:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12073:1:24"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "12052:3:24",
                                      "nodeType": "YulBlock",
                                      "src": "12052:3:24",
                                      "statements": []
                                    },
                                    "src": "12048:236:24"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "12332:166:24",
                                      "nodeType": "YulBlock",
                                      "src": "12332:166:24",
                                      "statements": [
                                        {
                                          "nativeSrc": "12350:43:24",
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "12350:43:24",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nativeSrc": "12377:3:24",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12377:3:24"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "12382:9:24",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12382:9:24"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "12373:3:24",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12373:3:24"
                                                },
                                                "nativeSrc": "12373:19:24",
                                                "nodeType": "YulFunctionCall",
                                                "src": "12373:19:24"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nativeSrc": "12367:5:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12367:5:24"
                                            },
                                            "nativeSrc": "12367:26:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12367:26:24"
                                          },
                                          "variables": [
                                            {
                                              "name": "lastValue",
                                              "nativeSrc": "12354:9:24",
                                              "nodeType": "YulTypedName",
                                              "src": "12354:9:24",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nativeSrc": "12417:6:24",
                                                "nodeType": "YulIdentifier",
                                                "src": "12417:6:24"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "lastValue",
                                                    "nativeSrc": "12429:9:24",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12429:9:24"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "12456:1:24",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "12456:1:24",
                                                                    "type": "",
                                                                    "value": "3"
                                                                  },
                                                                  {
                                                                    "name": "newLen",
                                                                    "nativeSrc": "12459:6:24",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "12459:6:24"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "shl",
                                                                  "nativeSrc": "12452:3:24",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "12452:3:24"
                                                                },
                                                                "nativeSrc": "12452:14:24",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "12452:14:24"
                                                              },
                                                              {
                                                                "kind": "number",
                                                                "nativeSrc": "12468:3:24",
                                                                "nodeType": "YulLiteral",
                                                                "src": "12468:3:24",
                                                                "type": "",
                                                                "value": "248"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "and",
                                                              "nativeSrc": "12448:3:24",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "12448:3:24"
                                                            },
                                                            "nativeSrc": "12448:24:24",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "12448:24:24"
                                                          },
                                                          {
                                                            "arguments": [
                                                              {
                                                                "kind": "number",
                                                                "nativeSrc": "12478:1:24",
                                                                "nodeType": "YulLiteral",
                                                                "src": "12478:1:24",
                                                                "type": "",
                                                                "value": "0"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "not",
                                                              "nativeSrc": "12474:3:24",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "12474:3:24"
                                                            },
                                                            "nativeSrc": "12474:6:24",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "12474:6:24"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shr",
                                                          "nativeSrc": "12444:3:24",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "12444:3:24"
                                                        },
                                                        "nativeSrc": "12444:37:24",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "12444:37:24"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nativeSrc": "12440:3:24",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12440:3:24"
                                                    },
                                                    "nativeSrc": "12440:42:24",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12440:42:24"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "and",
                                                  "nativeSrc": "12425:3:24",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12425:3:24"
                                                },
                                                "nativeSrc": "12425:58:24",
                                                "nodeType": "YulFunctionCall",
                                                "src": "12425:58:24"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "12410:6:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12410:6:24"
                                            },
                                            "nativeSrc": "12410:74:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12410:74:24"
                                          },
                                          "nativeSrc": "12410:74:24",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "12410:74:24"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "loopEnd",
                                          "nativeSrc": "12303:7:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "12303:7:24"
                                        },
                                        {
                                          "name": "newLen",
                                          "nativeSrc": "12312:6:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "12312:6:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "12300:2:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "12300:2:24"
                                      },
                                      "nativeSrc": "12300:19:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12300:19:24"
                                    },
                                    "nativeSrc": "12297:201:24",
                                    "nodeType": "YulIf",
                                    "src": "12297:201:24"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nativeSrc": "12518:4:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "12518:4:24"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "12532:1:24",
                                                  "nodeType": "YulLiteral",
                                                  "src": "12532:1:24",
                                                  "type": "",
                                                  "value": "1"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "12535:6:24",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12535:6:24"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "shl",
                                                "nativeSrc": "12528:3:24",
                                                "nodeType": "YulIdentifier",
                                                "src": "12528:3:24"
                                              },
                                              "nativeSrc": "12528:14:24",
                                              "nodeType": "YulFunctionCall",
                                              "src": "12528:14:24"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "12544:1:24",
                                              "nodeType": "YulLiteral",
                                              "src": "12544:1:24",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "12524:3:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "12524:3:24"
                                          },
                                          "nativeSrc": "12524:22:24",
                                          "nodeType": "YulFunctionCall",
                                          "src": "12524:22:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nativeSrc": "12511:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "12511:6:24"
                                      },
                                      "nativeSrc": "12511:36:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12511:36:24"
                                    },
                                    "nativeSrc": "12511:36:24",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12511:36:24"
                                  }
                                ]
                              },
                              "nativeSrc": "11894:663:24",
                              "nodeType": "YulCase",
                              "src": "11894:663:24",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "11899:1:24",
                                "nodeType": "YulLiteral",
                                "src": "11899:1:24",
                                "type": "",
                                "value": "1"
                              }
                            },
                            {
                              "body": {
                                "nativeSrc": "12574:234:24",
                                "nodeType": "YulBlock",
                                "src": "12574:234:24",
                                "statements": [
                                  {
                                    "nativeSrc": "12588:14:24",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "12588:14:24",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "12601:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "12601:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "12592:5:24",
                                        "nodeType": "YulTypedName",
                                        "src": "12592:5:24",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "12637:67:24",
                                      "nodeType": "YulBlock",
                                      "src": "12637:67:24",
                                      "statements": [
                                        {
                                          "nativeSrc": "12655:35:24",
                                          "nodeType": "YulAssignment",
                                          "src": "12655:35:24",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nativeSrc": "12674:3:24",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12674:3:24"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "12679:9:24",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12679:9:24"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "12670:3:24",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12670:3:24"
                                                },
                                                "nativeSrc": "12670:19:24",
                                                "nodeType": "YulFunctionCall",
                                                "src": "12670:19:24"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nativeSrc": "12664:5:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12664:5:24"
                                            },
                                            "nativeSrc": "12664:26:24",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12664:26:24"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "value",
                                              "nativeSrc": "12655:5:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12655:5:24"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "name": "newLen",
                                      "nativeSrc": "12618:6:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "12618:6:24"
                                    },
                                    "nativeSrc": "12615:89:24",
                                    "nodeType": "YulIf",
                                    "src": "12615:89:24"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nativeSrc": "12724:4:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "12724:4:24"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nativeSrc": "12783:5:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12783:5:24"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "12790:6:24",
                                              "nodeType": "YulIdentifier",
                                              "src": "12790:6:24"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "extract_used_part_and_set_length_of_short_byte_array",
                                            "nativeSrc": "12730:52:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "12730:52:24"
                                          },
                                          "nativeSrc": "12730:67:24",
                                          "nodeType": "YulFunctionCall",
                                          "src": "12730:67:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nativeSrc": "12717:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "12717:6:24"
                                      },
                                      "nativeSrc": "12717:81:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12717:81:24"
                                    },
                                    "nativeSrc": "12717:81:24",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12717:81:24"
                                  }
                                ]
                              },
                              "nativeSrc": "12566:242:24",
                              "nodeType": "YulCase",
                              "src": "12566:242:24",
                              "value": "default"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "name": "newLen",
                                "nativeSrc": "11874:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "11874:6:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "11882:2:24",
                                "nodeType": "YulLiteral",
                                "src": "11882:2:24",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "11871:2:24",
                              "nodeType": "YulIdentifier",
                              "src": "11871:2:24"
                            },
                            "nativeSrc": "11871:14:24",
                            "nodeType": "YulFunctionCall",
                            "src": "11871:14:24"
                          },
                          "nativeSrc": "11864:944:24",
                          "nodeType": "YulSwitch",
                          "src": "11864:944:24"
                        }
                      ]
                    },
                    "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                    "nativeSrc": "11469:1345:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nativeSrc": "11550:4:24",
                        "nodeType": "YulTypedName",
                        "src": "11550:4:24",
                        "type": ""
                      },
                      {
                        "name": "src",
                        "nativeSrc": "11556:3:24",
                        "nodeType": "YulTypedName",
                        "src": "11556:3:24",
                        "type": ""
                      }
                    ],
                    "src": "11469:1345:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "12993:167:24",
                      "nodeType": "YulBlock",
                      "src": "12993:167:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "13010:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "13010:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "13021:2:24",
                                "nodeType": "YulLiteral",
                                "src": "13021:2:24",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13003:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13003:6:24"
                            },
                            "nativeSrc": "13003:21:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13003:21:24"
                          },
                          "nativeSrc": "13003:21:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13003:21:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13044:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13044:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13055:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "13055:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "13040:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13040:3:24"
                                },
                                "nativeSrc": "13040:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13040:18:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "13060:2:24",
                                "nodeType": "YulLiteral",
                                "src": "13060:2:24",
                                "type": "",
                                "value": "17"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13033:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13033:6:24"
                            },
                            "nativeSrc": "13033:30:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13033:30:24"
                          },
                          "nativeSrc": "13033:30:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13033:30:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13083:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13083:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13094:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "13094:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "13079:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13079:3:24"
                                },
                                "nativeSrc": "13079:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13079:18:24"
                              },
                              {
                                "hexValue": "4e6f742073657276696365206f776e6572",
                                "kind": "string",
                                "nativeSrc": "13099:19:24",
                                "nodeType": "YulLiteral",
                                "src": "13099:19:24",
                                "type": "",
                                "value": "Not service owner"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13072:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13072:6:24"
                            },
                            "nativeSrc": "13072:47:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13072:47:24"
                          },
                          "nativeSrc": "13072:47:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13072:47:24"
                        },
                        {
                          "nativeSrc": "13128:26:24",
                          "nodeType": "YulAssignment",
                          "src": "13128:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "13140:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "13140:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "13151:2:24",
                                "nodeType": "YulLiteral",
                                "src": "13151:2:24",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "13136:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "13136:3:24"
                            },
                            "nativeSrc": "13136:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13136:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "13128:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "13128:4:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_1b5b860d9d6895694610fb6500930b0243362ecab80509ccc9088c22893e9b33__to_t_string_memory_ptr__fromStack_reversed",
                    "nativeSrc": "12819:341:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "12970:9:24",
                        "nodeType": "YulTypedName",
                        "src": "12970:9:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "12984:4:24",
                        "nodeType": "YulTypedName",
                        "src": "12984:4:24",
                        "type": ""
                      }
                    ],
                    "src": "12819:341:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "13294:145:24",
                      "nodeType": "YulBlock",
                      "src": "13294:145:24",
                      "statements": [
                        {
                          "nativeSrc": "13304:26:24",
                          "nodeType": "YulAssignment",
                          "src": "13304:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "13316:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "13316:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "13327:2:24",
                                "nodeType": "YulLiteral",
                                "src": "13327:2:24",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "13312:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "13312:3:24"
                            },
                            "nativeSrc": "13312:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13312:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "13304:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "13304:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "13346:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "13346:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "13361:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13361:6:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "13377:3:24",
                                            "nodeType": "YulLiteral",
                                            "src": "13377:3:24",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "13382:1:24",
                                            "nodeType": "YulLiteral",
                                            "src": "13382:1:24",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "13373:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "13373:3:24"
                                        },
                                        "nativeSrc": "13373:11:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "13373:11:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "13386:1:24",
                                        "nodeType": "YulLiteral",
                                        "src": "13386:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "13369:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "13369:3:24"
                                    },
                                    "nativeSrc": "13369:19:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13369:19:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "13357:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13357:3:24"
                                },
                                "nativeSrc": "13357:32:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13357:32:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13339:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13339:6:24"
                            },
                            "nativeSrc": "13339:51:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13339:51:24"
                          },
                          "nativeSrc": "13339:51:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13339:51:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13410:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13410:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13421:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "13421:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "13406:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13406:3:24"
                                },
                                "nativeSrc": "13406:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13406:18:24"
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "13426:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "13426:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13399:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13399:6:24"
                            },
                            "nativeSrc": "13399:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13399:34:24"
                          },
                          "nativeSrc": "13399:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13399:34:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                    "nativeSrc": "13165:274:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "13255:9:24",
                        "nodeType": "YulTypedName",
                        "src": "13255:9:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "13266:6:24",
                        "nodeType": "YulTypedName",
                        "src": "13266:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "13274:6:24",
                        "nodeType": "YulTypedName",
                        "src": "13274:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "13285:4:24",
                        "nodeType": "YulTypedName",
                        "src": "13285:4:24",
                        "type": ""
                      }
                    ],
                    "src": "13165:274:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "13476:95:24",
                      "nodeType": "YulBlock",
                      "src": "13476:95:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "13493:1:24",
                                "nodeType": "YulLiteral",
                                "src": "13493:1:24",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13500:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "13500:3:24",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13505:10:24",
                                    "nodeType": "YulLiteral",
                                    "src": "13505:10:24",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "13496:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13496:3:24"
                                },
                                "nativeSrc": "13496:20:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13496:20:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13486:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13486:6:24"
                            },
                            "nativeSrc": "13486:31:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13486:31:24"
                          },
                          "nativeSrc": "13486:31:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13486:31:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "13533:1:24",
                                "nodeType": "YulLiteral",
                                "src": "13533:1:24",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "13536:4:24",
                                "nodeType": "YulLiteral",
                                "src": "13536:4:24",
                                "type": "",
                                "value": "0x32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13526:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13526:6:24"
                            },
                            "nativeSrc": "13526:15:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13526:15:24"
                          },
                          "nativeSrc": "13526:15:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13526:15:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "13557:1:24",
                                "nodeType": "YulLiteral",
                                "src": "13557:1:24",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "13560:4:24",
                                "nodeType": "YulLiteral",
                                "src": "13560:4:24",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "13550:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13550:6:24"
                            },
                            "nativeSrc": "13550:15:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13550:15:24"
                          },
                          "nativeSrc": "13550:15:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13550:15:24"
                        }
                      ]
                    },
                    "name": "panic_error_0x32",
                    "nativeSrc": "13444:127:24",
                    "nodeType": "YulFunctionDefinition",
                    "src": "13444:127:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "13733:218:24",
                      "nodeType": "YulBlock",
                      "src": "13733:218:24",
                      "statements": [
                        {
                          "nativeSrc": "13743:26:24",
                          "nodeType": "YulAssignment",
                          "src": "13743:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "13755:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "13755:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "13766:2:24",
                                "nodeType": "YulLiteral",
                                "src": "13766:2:24",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "13751:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "13751:3:24"
                            },
                            "nativeSrc": "13751:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13751:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "13743:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "13743:4:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "13778:29:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "13778:29:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13796:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "13796:3:24",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13801:1:24",
                                    "nodeType": "YulLiteral",
                                    "src": "13801:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "13792:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13792:3:24"
                                },
                                "nativeSrc": "13792:11:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13792:11:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "13805:1:24",
                                "nodeType": "YulLiteral",
                                "src": "13805:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nativeSrc": "13788:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "13788:3:24"
                            },
                            "nativeSrc": "13788:19:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13788:19:24"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nativeSrc": "13782:2:24",
                              "nodeType": "YulTypedName",
                              "src": "13782:2:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "13823:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "13823:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "13838:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13838:6:24"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "13846:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13846:2:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "13834:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13834:3:24"
                                },
                                "nativeSrc": "13834:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13834:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13816:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13816:6:24"
                            },
                            "nativeSrc": "13816:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13816:34:24"
                          },
                          "nativeSrc": "13816:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13816:34:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13870:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13870:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13881:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "13881:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "13866:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13866:3:24"
                                },
                                "nativeSrc": "13866:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13866:18:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "13890:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13890:6:24"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "13898:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13898:2:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "13886:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13886:3:24"
                                },
                                "nativeSrc": "13886:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13886:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13859:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13859:6:24"
                            },
                            "nativeSrc": "13859:43:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13859:43:24"
                          },
                          "nativeSrc": "13859:43:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13859:43:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "13922:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "13922:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13933:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "13933:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "13918:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13918:3:24"
                                },
                                "nativeSrc": "13918:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "13918:18:24"
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "13938:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "13938:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "13911:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "13911:6:24"
                            },
                            "nativeSrc": "13911:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "13911:34:24"
                          },
                          "nativeSrc": "13911:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "13911:34:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                    "nativeSrc": "13576:375:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "13686:9:24",
                        "nodeType": "YulTypedName",
                        "src": "13686:9:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "13697:6:24",
                        "nodeType": "YulTypedName",
                        "src": "13697:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "13705:6:24",
                        "nodeType": "YulTypedName",
                        "src": "13705:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "13713:6:24",
                        "nodeType": "YulTypedName",
                        "src": "13713:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "13724:4:24",
                        "nodeType": "YulTypedName",
                        "src": "13724:4:24",
                        "type": ""
                      }
                    ],
                    "src": "13576:375:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "14008:116:24",
                      "nodeType": "YulBlock",
                      "src": "14008:116:24",
                      "statements": [
                        {
                          "nativeSrc": "14018:20:24",
                          "nodeType": "YulAssignment",
                          "src": "14018:20:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nativeSrc": "14033:1:24",
                                "nodeType": "YulIdentifier",
                                "src": "14033:1:24"
                              },
                              {
                                "name": "y",
                                "nativeSrc": "14036:1:24",
                                "nodeType": "YulIdentifier",
                                "src": "14036:1:24"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nativeSrc": "14029:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "14029:3:24"
                            },
                            "nativeSrc": "14029:9:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14029:9:24"
                          },
                          "variableNames": [
                            {
                              "name": "product",
                              "nativeSrc": "14018:7:24",
                              "nodeType": "YulIdentifier",
                              "src": "14018:7:24"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "14096:22:24",
                            "nodeType": "YulBlock",
                            "src": "14096:22:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nativeSrc": "14098:16:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14098:16:24"
                                  },
                                  "nativeSrc": "14098:18:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14098:18:24"
                                },
                                "nativeSrc": "14098:18:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "14098:18:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nativeSrc": "14067:1:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "14067:1:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "14060:6:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "14060:6:24"
                                    },
                                    "nativeSrc": "14060:9:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14060:9:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nativeSrc": "14074:1:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "14074:1:24"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "product",
                                            "nativeSrc": "14081:7:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "14081:7:24"
                                          },
                                          {
                                            "name": "x",
                                            "nativeSrc": "14090:1:24",
                                            "nodeType": "YulIdentifier",
                                            "src": "14090:1:24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nativeSrc": "14077:3:24",
                                          "nodeType": "YulIdentifier",
                                          "src": "14077:3:24"
                                        },
                                        "nativeSrc": "14077:15:24",
                                        "nodeType": "YulFunctionCall",
                                        "src": "14077:15:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "14071:2:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "14071:2:24"
                                    },
                                    "nativeSrc": "14071:22:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14071:22:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "14057:2:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "14057:2:24"
                                },
                                "nativeSrc": "14057:37:24",
                                "nodeType": "YulFunctionCall",
                                "src": "14057:37:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "14050:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "14050:6:24"
                            },
                            "nativeSrc": "14050:45:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14050:45:24"
                          },
                          "nativeSrc": "14047:71:24",
                          "nodeType": "YulIf",
                          "src": "14047:71:24"
                        }
                      ]
                    },
                    "name": "checked_mul_t_uint256",
                    "nativeSrc": "13956:168:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nativeSrc": "13987:1:24",
                        "nodeType": "YulTypedName",
                        "src": "13987:1:24",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nativeSrc": "13990:1:24",
                        "nodeType": "YulTypedName",
                        "src": "13990:1:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "product",
                        "nativeSrc": "13996:7:24",
                        "nodeType": "YulTypedName",
                        "src": "13996:7:24",
                        "type": ""
                      }
                    ],
                    "src": "13956:168:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "14175:171:24",
                      "nodeType": "YulBlock",
                      "src": "14175:171:24",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "14206:111:24",
                            "nodeType": "YulBlock",
                            "src": "14206:111:24",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "14227:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "14227:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "14234:3:24",
                                          "nodeType": "YulLiteral",
                                          "src": "14234:3:24",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "14239:10:24",
                                          "nodeType": "YulLiteral",
                                          "src": "14239:10:24",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nativeSrc": "14230:3:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "14230:3:24"
                                      },
                                      "nativeSrc": "14230:20:24",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14230:20:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "14220:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14220:6:24"
                                  },
                                  "nativeSrc": "14220:31:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14220:31:24"
                                },
                                "nativeSrc": "14220:31:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "14220:31:24"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "14271:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "14271:1:24",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "14274:4:24",
                                      "nodeType": "YulLiteral",
                                      "src": "14274:4:24",
                                      "type": "",
                                      "value": "0x12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "14264:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14264:6:24"
                                  },
                                  "nativeSrc": "14264:15:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14264:15:24"
                                },
                                "nativeSrc": "14264:15:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "14264:15:24"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "14299:1:24",
                                      "nodeType": "YulLiteral",
                                      "src": "14299:1:24",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "14302:4:24",
                                      "nodeType": "YulLiteral",
                                      "src": "14302:4:24",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "14292:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14292:6:24"
                                  },
                                  "nativeSrc": "14292:15:24",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14292:15:24"
                                },
                                "nativeSrc": "14292:15:24",
                                "nodeType": "YulExpressionStatement",
                                "src": "14292:15:24"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nativeSrc": "14195:1:24",
                                "nodeType": "YulIdentifier",
                                "src": "14195:1:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "14188:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "14188:6:24"
                            },
                            "nativeSrc": "14188:9:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14188:9:24"
                          },
                          "nativeSrc": "14185:132:24",
                          "nodeType": "YulIf",
                          "src": "14185:132:24"
                        },
                        {
                          "nativeSrc": "14326:14:24",
                          "nodeType": "YulAssignment",
                          "src": "14326:14:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nativeSrc": "14335:1:24",
                                "nodeType": "YulIdentifier",
                                "src": "14335:1:24"
                              },
                              {
                                "name": "y",
                                "nativeSrc": "14338:1:24",
                                "nodeType": "YulIdentifier",
                                "src": "14338:1:24"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nativeSrc": "14331:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "14331:3:24"
                            },
                            "nativeSrc": "14331:9:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14331:9:24"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nativeSrc": "14326:1:24",
                              "nodeType": "YulIdentifier",
                              "src": "14326:1:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_div_t_uint256",
                    "nativeSrc": "14129:217:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nativeSrc": "14160:1:24",
                        "nodeType": "YulTypedName",
                        "src": "14160:1:24",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nativeSrc": "14163:1:24",
                        "nodeType": "YulTypedName",
                        "src": "14163:1:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nativeSrc": "14169:1:24",
                        "nodeType": "YulTypedName",
                        "src": "14169:1:24",
                        "type": ""
                      }
                    ],
                    "src": "14129:217:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "14536:262:24",
                      "nodeType": "YulBlock",
                      "src": "14536:262:24",
                      "statements": [
                        {
                          "nativeSrc": "14546:27:24",
                          "nodeType": "YulAssignment",
                          "src": "14546:27:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "14558:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "14558:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "14569:3:24",
                                "nodeType": "YulLiteral",
                                "src": "14569:3:24",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "14554:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "14554:3:24"
                            },
                            "nativeSrc": "14554:19:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14554:19:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "14546:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "14546:4:24"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "14582:29:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "14582:29:24",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "14600:3:24",
                                    "nodeType": "YulLiteral",
                                    "src": "14600:3:24",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "14605:1:24",
                                    "nodeType": "YulLiteral",
                                    "src": "14605:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "14596:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "14596:3:24"
                                },
                                "nativeSrc": "14596:11:24",
                                "nodeType": "YulFunctionCall",
                                "src": "14596:11:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "14609:1:24",
                                "nodeType": "YulLiteral",
                                "src": "14609:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nativeSrc": "14592:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "14592:3:24"
                            },
                            "nativeSrc": "14592:19:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14592:19:24"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nativeSrc": "14586:2:24",
                              "nodeType": "YulTypedName",
                              "src": "14586:2:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "14627:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "14627:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "14642:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14642:6:24"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "14650:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14650:2:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "14638:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "14638:3:24"
                                },
                                "nativeSrc": "14638:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "14638:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "14620:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "14620:6:24"
                            },
                            "nativeSrc": "14620:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14620:34:24"
                          },
                          "nativeSrc": "14620:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "14620:34:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "14674:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14674:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "14685:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "14685:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "14670:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "14670:3:24"
                                },
                                "nativeSrc": "14670:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "14670:18:24"
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "14690:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "14690:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "14663:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "14663:6:24"
                            },
                            "nativeSrc": "14663:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14663:34:24"
                          },
                          "nativeSrc": "14663:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "14663:34:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "14717:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14717:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "14728:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "14728:2:24",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "14713:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "14713:3:24"
                                },
                                "nativeSrc": "14713:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "14713:18:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "14737:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14737:6:24"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "14745:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14745:2:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "14733:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "14733:3:24"
                                },
                                "nativeSrc": "14733:15:24",
                                "nodeType": "YulFunctionCall",
                                "src": "14733:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "14706:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "14706:6:24"
                            },
                            "nativeSrc": "14706:43:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14706:43:24"
                          },
                          "nativeSrc": "14706:43:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "14706:43:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "14769:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14769:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "14780:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "14780:2:24",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "14765:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "14765:3:24"
                                },
                                "nativeSrc": "14765:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "14765:18:24"
                              },
                              {
                                "name": "value3",
                                "nativeSrc": "14785:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "14785:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "14758:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "14758:6:24"
                            },
                            "nativeSrc": "14758:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14758:34:24"
                          },
                          "nativeSrc": "14758:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "14758:34:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
                    "nativeSrc": "14351:447:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "14481:9:24",
                        "nodeType": "YulTypedName",
                        "src": "14481:9:24",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nativeSrc": "14492:6:24",
                        "nodeType": "YulTypedName",
                        "src": "14492:6:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "14500:6:24",
                        "nodeType": "YulTypedName",
                        "src": "14500:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "14508:6:24",
                        "nodeType": "YulTypedName",
                        "src": "14508:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "14516:6:24",
                        "nodeType": "YulTypedName",
                        "src": "14516:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "14527:4:24",
                        "nodeType": "YulTypedName",
                        "src": "14527:4:24",
                        "type": ""
                      }
                    ],
                    "src": "14351:447:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "14930:136:24",
                      "nodeType": "YulBlock",
                      "src": "14930:136:24",
                      "statements": [
                        {
                          "nativeSrc": "14940:26:24",
                          "nodeType": "YulAssignment",
                          "src": "14940:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "14952:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "14952:9:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "14963:2:24",
                                "nodeType": "YulLiteral",
                                "src": "14963:2:24",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "14948:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "14948:3:24"
                            },
                            "nativeSrc": "14948:18:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14948:18:24"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "14940:4:24",
                              "nodeType": "YulIdentifier",
                              "src": "14940:4:24"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "14982:9:24",
                                "nodeType": "YulIdentifier",
                                "src": "14982:9:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "14997:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "14997:6:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "15005:10:24",
                                    "nodeType": "YulLiteral",
                                    "src": "15005:10:24",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "14993:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "14993:3:24"
                                },
                                "nativeSrc": "14993:23:24",
                                "nodeType": "YulFunctionCall",
                                "src": "14993:23:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "14975:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "14975:6:24"
                            },
                            "nativeSrc": "14975:42:24",
                            "nodeType": "YulFunctionCall",
                            "src": "14975:42:24"
                          },
                          "nativeSrc": "14975:42:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "14975:42:24"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "15037:9:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "15037:9:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "15048:2:24",
                                    "nodeType": "YulLiteral",
                                    "src": "15048:2:24",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "15033:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "15033:3:24"
                                },
                                "nativeSrc": "15033:18:24",
                                "nodeType": "YulFunctionCall",
                                "src": "15033:18:24"
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "15053:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "15053:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "15026:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "15026:6:24"
                            },
                            "nativeSrc": "15026:34:24",
                            "nodeType": "YulFunctionCall",
                            "src": "15026:34:24"
                          },
                          "nativeSrc": "15026:34:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "15026:34:24"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed",
                    "nativeSrc": "14803:263:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "14891:9:24",
                        "nodeType": "YulTypedName",
                        "src": "14891:9:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "14902:6:24",
                        "nodeType": "YulTypedName",
                        "src": "14902:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "14910:6:24",
                        "nodeType": "YulTypedName",
                        "src": "14910:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "14921:4:24",
                        "nodeType": "YulTypedName",
                        "src": "14921:4:24",
                        "type": ""
                      }
                    ],
                    "src": "14803:263:24"
                  },
                  {
                    "body": {
                      "nativeSrc": "15262:288:24",
                      "nodeType": "YulBlock",
                      "src": "15262:288:24",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "15279:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "15279:3:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "15292:3:24",
                                        "nodeType": "YulLiteral",
                                        "src": "15292:3:24",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "name": "value0",
                                        "nativeSrc": "15297:6:24",
                                        "nodeType": "YulIdentifier",
                                        "src": "15297:6:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "15288:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "15288:3:24"
                                    },
                                    "nativeSrc": "15288:16:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "15288:16:24"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "15310:3:24",
                                        "nodeType": "YulLiteral",
                                        "src": "15310:3:24",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "15315:10:24",
                                        "nodeType": "YulLiteral",
                                        "src": "15315:10:24",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "15306:3:24",
                                      "nodeType": "YulIdentifier",
                                      "src": "15306:3:24"
                                    },
                                    "nativeSrc": "15306:20:24",
                                    "nodeType": "YulFunctionCall",
                                    "src": "15306:20:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "15284:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "15284:3:24"
                                },
                                "nativeSrc": "15284:43:24",
                                "nodeType": "YulFunctionCall",
                                "src": "15284:43:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "15272:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "15272:6:24"
                            },
                            "nativeSrc": "15272:56:24",
                            "nodeType": "YulFunctionCall",
                            "src": "15272:56:24"
                          },
                          "nativeSrc": "15272:56:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "15272:56:24"
                        },
                        {
                          "nativeSrc": "15337:27:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "15337:27:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nativeSrc": "15357:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "15357:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nativeSrc": "15351:5:24",
                              "nodeType": "YulIdentifier",
                              "src": "15351:5:24"
                            },
                            "nativeSrc": "15351:13:24",
                            "nodeType": "YulFunctionCall",
                            "src": "15351:13:24"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nativeSrc": "15341:6:24",
                              "nodeType": "YulTypedName",
                              "src": "15341:6:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "15412:6:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "15412:6:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "15420:4:24",
                                    "nodeType": "YulLiteral",
                                    "src": "15420:4:24",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "15408:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "15408:3:24"
                                },
                                "nativeSrc": "15408:17:24",
                                "nodeType": "YulFunctionCall",
                                "src": "15408:17:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "15431:3:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "15431:3:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "15436:1:24",
                                    "nodeType": "YulLiteral",
                                    "src": "15436:1:24",
                                    "type": "",
                                    "value": "4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "15427:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "15427:3:24"
                                },
                                "nativeSrc": "15427:11:24",
                                "nodeType": "YulFunctionCall",
                                "src": "15427:11:24"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "15440:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "15440:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nativeSrc": "15373:34:24",
                              "nodeType": "YulIdentifier",
                              "src": "15373:34:24"
                            },
                            "nativeSrc": "15373:74:24",
                            "nodeType": "YulFunctionCall",
                            "src": "15373:74:24"
                          },
                          "nativeSrc": "15373:74:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "15373:74:24"
                        },
                        {
                          "nativeSrc": "15456:26:24",
                          "nodeType": "YulVariableDeclaration",
                          "src": "15456:26:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "15470:3:24",
                                "nodeType": "YulIdentifier",
                                "src": "15470:3:24"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "15475:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "15475:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "15466:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "15466:3:24"
                            },
                            "nativeSrc": "15466:16:24",
                            "nodeType": "YulFunctionCall",
                            "src": "15466:16:24"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nativeSrc": "15460:2:24",
                              "nodeType": "YulTypedName",
                              "src": "15460:2:24",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nativeSrc": "15502:2:24",
                                    "nodeType": "YulIdentifier",
                                    "src": "15502:2:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "15506:1:24",
                                    "nodeType": "YulLiteral",
                                    "src": "15506:1:24",
                                    "type": "",
                                    "value": "4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "15498:3:24",
                                  "nodeType": "YulIdentifier",
                                  "src": "15498:3:24"
                                },
                                "nativeSrc": "15498:10:24",
                                "nodeType": "YulFunctionCall",
                                "src": "15498:10:24"
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "15510:6:24",
                                "nodeType": "YulIdentifier",
                                "src": "15510:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "15491:6:24",
                              "nodeType": "YulIdentifier",
                              "src": "15491:6:24"
                            },
                            "nativeSrc": "15491:26:24",
                            "nodeType": "YulFunctionCall",
                            "src": "15491:26:24"
                          },
                          "nativeSrc": "15491:26:24",
                          "nodeType": "YulExpressionStatement",
                          "src": "15491:26:24"
                        },
                        {
                          "nativeSrc": "15526:18:24",
                          "nodeType": "YulAssignment",
                          "src": "15526:18:24",
                          "value": {
                            "arguments": [
                              {
                                "name": "_1",
                                "nativeSrc": "15537:2:24",
                                "nodeType": "YulIdentifier",
                                "src": "15537:2:24"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "15541:2:24",
                                "nodeType": "YulLiteral",
                                "src": "15541:2:24",
                                "type": "",
                                "value": "36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "15533:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "15533:3:24"
                            },
                            "nativeSrc": "15533:11:24",
                            "nodeType": "YulFunctionCall",
                            "src": "15533:11:24"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nativeSrc": "15526:3:24",
                              "nodeType": "YulIdentifier",
                              "src": "15526:3:24"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_uint32_t_bytes_memory_ptr_t_uint256__to_t_uint32_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
                    "nativeSrc": "15071:479:24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nativeSrc": "15222:3:24",
                        "nodeType": "YulTypedName",
                        "src": "15222:3:24",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "15227:6:24",
                        "nodeType": "YulTypedName",
                        "src": "15227:6:24",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "15235:6:24",
                        "nodeType": "YulTypedName",
                        "src": "15235:6:24",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "15243:6:24",
                        "nodeType": "YulTypedName",
                        "src": "15243:6:24",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nativeSrc": "15254:3:24",
                        "nodeType": "YulTypedName",
                        "src": "15254:3:24",
                        "type": ""
                      }
                    ],
                    "src": "15071:479:24"
                  }
                ]
              },
              "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_uint32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint32(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_struct$_MessagingFee_$5932_memory_ptr__to_t_struct$_MessagingFee_$5932_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_bool__to_t_address_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 128)\n        let length := mload(value1)\n        mstore(add(headStart, 128), length)\n        copy_memory_to_memory_with_cleanup(add(value1, 32), add(headStart, 160), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 160)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_uint32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_uint32(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_address_t_uint32_t_uint256_t_bool__to_t_bytes32_t_address_t_address_t_uint256_t_address_t_uint32_t_uint256_t_bool__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, 0xffffffff))\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$967__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256__to_t_bytes32_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_6ade8173b8e4fc1a5ad20adac81a8ddca01b3c342ab50a80303220df93f507ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Service not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4d867bd14c37eceafe3e477a36f0f794e64eba2f6941b704e608dffa55286d0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Token not accepted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8ad923b2e364ce1aeaf4231bbcdfbcf3913f3afdc5e95d213d4d8bc5188fdf23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Chain not supported\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint32__to_t_address_t_uint256_t_address_t_uint32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xffffffff))\n    }\n    function abi_encode_tuple_packed_t_address_t_string_calldata_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        calldatacopy(add(pos, 20), value1, value2)\n        let _1 := add(pos, value2)\n        mstore(add(_1, 20), value3)\n        end := add(_1, 52)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_1b5b860d9d6895694610fb6500930b0243362ecab80509ccc9088c22893e9b33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Not service owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_uint32_t_bytes_memory_ptr_t_uint256__to_t_uint32_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(224, value0), shl(224, 0xffffffff)))\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(pos, 4), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 4), value2)\n        end := add(_1, 36)\n    }\n}",
              "id": 24,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {
            "5290": [
              {
                "length": 32,
                "start": 768
              },
              {
                "length": 32,
                "start": 2699
              },
              {
                "length": 32,
                "start": 3301
              },
              {
                "length": 32,
                "start": 5325
              }
            ],
            "5920": [
              {
                "length": 32,
                "start": 908
              }
            ]
          },
          "linkReferences": {},
          "object": "6080604052600436106101095760003560e01c8063239bd611116100955780638da5cb5b116100645780638da5cb5b146103c3578063945a322a146103e1578063973a814e14610401578063ba7c873214610417578063f2fde38b1461043757600080fd5b8063239bd6111461033a57806337001ca41461035a5780635e280f111461037a578063715018a6146103ae57600080fd5b80630ca1bdab116100dc5780630ca1bdab146101ce5780630d7a55ba146101e157806310619dce146102ae5780631b6b204a146102ce57806322e669d3146102ee57600080fd5b806303731b9e1461010e57806304a5bf1e14610141578063069c9fae1461017c5780630a790eb71461019e575b600080fd5b34801561011a57600080fd5b5061012e610129366004611772565b610457565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b5061016161015c3660046117f9565b610488565b60408051825181526020928301519281019290925201610138565b34801561018857600080fd5b5061019c610197366004611772565b6106d7565b005b3480156101aa57600080fd5b506101be6101b9366004611853565b610709565b6040516101389493929190611890565b61012e6101dc3660046118e1565b6107c8565b3480156101ed57600080fd5b506102596101fc366004611853565b6006602081905260009182526040909120805460018201546002830154600384015460048501546005860154959096015493956001600160a01b0393841695928416949193811692600160a01b90910463ffffffff169160ff1688565b604080519889526001600160a01b0397881660208a01529587169588019590955260608701939093529316608085015263ffffffff90921660a084015260c0830191909152151560e082015261010001610138565b3480156102ba57600080fd5b5061019c6102c9366004611950565b610e67565b3480156102da57600080fd5b5061019c6102e9366004611950565b610e91565b3480156102fa57600080fd5b506103227f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b34801561034657600080fd5b5061012e6103553660046119b7565b610ebb565b34801561036657600080fd5b50600354610322906001600160a01b031681565b34801561038657600080fd5b506103227f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ba57600080fd5b5061019c6110a8565b3480156103cf57600080fd5b506000546001600160a01b0316610322565b3480156103ed57600080fd5b5061019c6103fc366004611a5b565b6110bc565b34801561040d57600080fd5b5061012e60075481565b34801561042357600080fd5b50600254610322906001600160a01b031681565b34801561044357600080fd5b5061019c610452366004611950565b611139565b6005602052816000526040600020818154811061047357600080fd5b90600052602060002001600091509150505481565b6040805180820182526000808252602080830182905287825260048152838220845160c0810190955280546001600160a01b031685526001810180549495939491928401916104d690611a90565b80601f016020809104026020016040519081016040528092919081815260200182805461050290611a90565b801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050815260200160028201548152602001600382018054806020026020016040519081016040528092919081815260200182805480156105bb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161059d575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561063f57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106025790505b50505091835250506005919091015460ff161515602091820152815160408084015181519384018b90526001600160a01b039092169083015260608201529091506106cd90869060800160408051601f198184030181526020601f89018190048102840181019092528783529190889088908190840183828082843760009201829052509250611177915050565b9695505050505050565b6106df6111ab565b6107056106f46000546001600160a01b031690565b6001600160a01b03841690836111d8565b5050565b600460205260009081526040902080546001820180546001600160a01b03909216929161073590611a90565b80601f016020809104026020016040519081016040528092919081815260200182805461076190611a90565b80156107ae5780601f10610783576101008083540402835291602001916107ae565b820191906000526020600020905b81548152906001019060200180831161079157829003601f168201915b50505050600283015460059093015491929160ff16905084565b60006107d261123c565b6000868152600460209081526040808320815160c0810190925280546001600160a01b03168252600181018054929391929184019161081090611a90565b80601f016020809104026020016040519081016040528092919081815260200182805461083c90611a90565b80156108895780601f1061085e57610100808354040283529160200191610889565b820191906000526020600020905b81548152906001019060200180831161086c57829003601f168201915b5050505050815260200160028201548152602001600382018054806020026020016040519081016040528092919081815260200182805480156108f557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108d7575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561097957602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161093c5790505b50505091835250506005919091015460ff16151560209091015260a08101519091506109e15760405162461bcd60e51b815260206004820152601260248201527153657276696365206e6f742061637469766560701b60448201526064015b60405180910390fd5b6109eb8187611266565b610a2c5760405162461bcd60e51b8152602060048201526012602482015271151bdad95b881b9bdd081858d8d95c1d195960721b60448201526064016109d8565b610a3681866112cb565b610a785760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016109d8565b6040810151610ab5906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903390309061131e565b60078054906000610ac583611ae0565b909155506040805160208101929092526bffffffffffffffffffffffff193360601b1690820152426054820152607401604051602081830303815290604052805190602001209150604051806101000160405280888152602001336001600160a01b0316815260200182600001516001600160a01b0316815260200182604001518152602001876001600160a01b031681526020018663ffffffff16815260200142815260200160001515815250600660008481526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160040160146101000a81548163ffffffff021916908363ffffffff16021790555060c0820151816005015560e08201518160060160006101000a81548160ff02191690831515021790555090505086827fba3d72ca72a32058f329441a3a0a404295eeea063467b1954afecb143aabb99b3384604001518a8a604051610cdb94939291906001600160a01b03948516815260208101939093529216604082015263ffffffff91909116606082015260800190565b60405180910390a37f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316141580610d2a5750468563ffffffff1614155b15610dc5576000828152600660208181526040928390208351610100810185528154815260018201546001600160a01b039081169382019390935260028201548316948101949094526003810154606085015260048101549182166080850152600160a01b90910463ffffffff1660a0840152600581015460c0840152015460ff16151560e0820152610dc0908390868661135d565b610e54565b6000828152600660208181526040928390208351610100810185528154815260018201546001600160a01b039081169382019390935260028201548316948101949094526003810154606085015260048101549182166080850152600160a01b90910463ffffffff1660a0840152600581015460c0840152015460ff16151560e0820152610e549083906114b5565b50610e5e60018055565b95945050505050565b610e6f6111ab565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610e996111ab565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600033888842604051602001610ed49493929190611af9565b60408051601f19818403018152828252805160209182012060c0840183523384528251601f8c018390048302810183019093528a8352935082810191908b908b9081908401838280828437600092019190915250505090825250602080820189905260408051888302818101840183528982529190930192918991899182919085019084908082843760009201919091525050509082525060408051602086810282810182019093528682529283019290918791879182918501908490808284376000920182905250938552505060016020938401819052858352600484526040909220845181546001600160a01b0319166001600160a01b039091161781559284015191830191610fe7915082611b8c565b50604082015160028201556060820151805161100d916003840191602090910190611636565b506080820151805161102991600484019160209091019061169b565b5060a091909101516005918201805460ff19169115159190911790553360008181526020928352604080822080546001810182559083529184902090910184905551888152909183917f1bd0bc8e83e4b1ca39e055b0ee51fbde9f6004eef864db76dd1fc7386693eb79910160405180910390a3979650505050505050565b6110b06111ab565b6110ba600061153c565b565b6000828152600460205260409020546001600160a01b031633146111165760405162461bcd60e51b81526020600482015260116024820152702737ba1039b2b93b34b1b29037bbb732b960791b60448201526064016109d8565b600091825260046020526040909120600501805460ff1916911515919091179055565b6111416111ab565b6001600160a01b03811661116b57604051631e4fbdf760e01b8152600060048201526024016109d8565b6111748161153c565b50565b505060408051808201825260008082526020918201819052825180840190935266038d7ea4c6800083529082015292915050565b6000546001600160a01b031633146110ba5760405163118cdaa760e01b81523360048201526024016109d8565b6040516001600160a01b0383811660248301526044820183905261123791859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061158c565b505050565b60026001540361125f57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000805b8360600151518110156112bf57826001600160a01b03168460600151828151811061129757611297611c4c565b60200260200101516001600160a01b0316036112b75760019150506112c5565b60010161126a565b50600090505b92915050565b6000805b8360800151518110156112bf578263ffffffff16846080015182815181106112f9576112f9611c4c565b602002602001015163ffffffff16036113165760019150506112c5565b6001016112cf565b6040516001600160a01b0384811660248301528381166044830152606482018390526113579186918216906323b872dd90608401611205565b50505050565b6040830151606084015160808501516000929190606461137e836063611c62565b6113889190611c79565b604080516001600160a01b0395861660208201529081019390935292166060820152608081019190915260a001604051602081830303815290604052905060006114638560a001518787604001518860600151604051602001611407939291909283526001600160a01b03919091166020830152604082015260600190565b60408051601f198184030181526020601f890181900481028401810190925287835291908890889081908401838280828437600092018290525060408051808201909152348152602081019190915292503391508890506115fd565b60a08601516040805163ffffffff90921682526020820183905291925087917fb8cb06e60d12513400244bca527994b43b879ff6428e977f67071d81497b6f5f910160405180910390a2505050505050565b604081015160608201516114f3916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916111d8565b6000828152600660208190526040808320909101805460ff191660011790555183917ff2baea2668e36a27a898b8c745decb4439ff61ae04d545dcc6954b84bd3e3c4291a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080602060008451602086016000885af1806115af576040513d6000823e3d81fd5b50506000513d915081156115c75780600114156115d4565b6001600160a01b0384163b155b1561135757604051635274afe760e01b81526001600160a01b03851660048201526024016109d8565b600086864260405160200161161493929190611c9b565b6040516020818303038152906040528051906020012090509695505050505050565b82805482825590600052602060002090810192821561168b579160200282015b8281111561168b57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611656565b50611697929150611741565b5090565b8280548282559060005260206000209060070160089004810192821561168b5791602002820160005b8382111561170857835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026116c4565b80156117385782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611708565b50506116979291505b5b808211156116975760008155600101611742565b80356001600160a01b038116811461176d57600080fd5b919050565b6000806040838503121561178557600080fd5b61178e83611756565b946020939093013593505050565b803563ffffffff8116811461176d57600080fd5b60008083601f8401126117c257600080fd5b50813567ffffffffffffffff8111156117da57600080fd5b6020830191508360208285010111156117f257600080fd5b9250929050565b6000806000806060858703121561180f57600080fd5b8435935061181f6020860161179c565b9250604085013567ffffffffffffffff81111561183b57600080fd5b611847878288016117b0565b95989497509550505050565b60006020828403121561186557600080fd5b5035919050565b60005b8381101561188757818101518382015260200161186f565b50506000910152565b60018060a01b038516815260806020820152600084518060808401526118bd8160a085016020890161186c565b604083019490945250901515606082015260a0601f909201601f1916010192915050565b6000806000806000608086880312156118f957600080fd5b8535945061190960208701611756565b93506119176040870161179c565b9250606086013567ffffffffffffffff81111561193357600080fd5b61193f888289016117b0565b969995985093965092949392505050565b60006020828403121561196257600080fd5b61196b82611756565b9392505050565b60008083601f84011261198457600080fd5b50813567ffffffffffffffff81111561199c57600080fd5b6020830191508360208260051b85010111156117f257600080fd5b60008060008060008060006080888a0312156119d257600080fd5b873567ffffffffffffffff808211156119ea57600080fd5b6119f68b838c016117b0565b909950975060208a0135965060408a0135915080821115611a1657600080fd5b611a228b838c01611972565b909650945060608a0135915080821115611a3b57600080fd5b50611a488a828b01611972565b989b979a50959850939692959293505050565b60008060408385031215611a6e57600080fd5b8235915060208301358015158114611a8557600080fd5b809150509250929050565b600181811c90821680611aa457607f821691505b602082108103611ac457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611af257611af2611aca565b5060010190565b6bffffffffffffffffffffffff198560601b16815282846014830137601492019182015260340192915050565b634e487b7160e01b600052604160045260246000fd5b601f821115611237576000816000526020600020601f850160051c81016020861015611b655750805b601f850160051c820191505b81811015611b8457828155600101611b71565b505050505050565b815167ffffffffffffffff811115611ba657611ba6611b26565b611bba81611bb48454611a90565b84611b3c565b602080601f831160018114611bef5760008415611bd75750858301515b600019600386901b1c1916600185901b178555611b84565b600085815260208120601f198616915b82811015611c1e57888601518255948401946001909101908401611bff565b5085821015611c3c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176112c5576112c5611aca565b600082611c9657634e487b7160e01b600052601260045260246000fd5b500490565b63ffffffff60e01b8460e01b16815260008351611cbf81600485016020880161186c565b6004920191820192909252602401939250505056fea264697066735822122033bcf3a3be30ebd4c6e4f46e7afc03dcbdabb034f463d62922506377ec4d653b64736f6c63430008160033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x239BD611 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x945A322A EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x973A814E EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xBA7C8732 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x239BD611 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x37001CA4 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA1BDAB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xCA1BDAB EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xD7A55BA EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x10619DCE EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x1B6B204A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x22E669D3 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3731B9E EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x4A5BF1E EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x69C9FAE EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA790EB7 EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD SWAP6 SWAP1 SWAP7 ADD SLOAD SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP3 DUP5 AND SWAP5 SWAP2 SWAP4 DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP2 PUSH1 0xFF AND DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x20 DUP11 ADD MSTORE SWAP6 DUP8 AND SWAP6 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B7 JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x322 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x10A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x322 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x3FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x10BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x322 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP8 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP6 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x4D6 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x502 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x524 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x532 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59D JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x63F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x602 JUMPI SWAP1 POP JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP2 MLOAD SWAP4 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH2 0x6CD SWAP1 DUP7 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP5 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP4 MSTORE SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH2 0x1177 SWAP2 POP POP JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x705 PUSH2 0x6F4 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0x11D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x735 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x761 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x783 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x791 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x810 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x83C SWAP1 PUSH2 0x1A90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x889 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x889 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x86C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D7 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x979 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x93C JUMPI SWAP1 POP JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53657276696365206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EB DUP2 DUP8 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151BDAD95B881B9BDD081858D8D95C1D1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0xA36 DUP2 DUP7 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0xA78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10DA185A5B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0xAB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xAC5 DUP4 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP7 DUP3 PUSH32 0xBA3D72CA72A32058F329441A3A0A404295EEEA063467B1954AFECB143AABB99B CALLER DUP5 PUSH1 0x40 ADD MLOAD DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xCDB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 PUSH2 0xD2A JUMPI POP CHAINID DUP6 PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP2 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0xDC0 SWAP1 DUP4 SWAP1 DUP7 DUP7 PUSH2 0x135D JUMP JUMPDEST PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP2 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0xE54 SWAP1 DUP4 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST POP PUSH2 0xE5E PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE99 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER DUP9 DUP9 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0xC0 DUP5 ADD DUP4 MSTORE CALLER DUP5 MSTORE DUP3 MLOAD PUSH1 0x1F DUP13 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP11 DUP4 MSTORE SWAP4 POP DUP3 DUP2 ADD SWAP2 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP9 DUP4 MUL DUP2 DUP2 ADD DUP5 ADD DUP4 MSTORE DUP10 DUP3 MSTORE SWAP2 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP10 SWAP2 DUP10 SWAP2 DUP3 SWAP2 SWAP1 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP7 DUP2 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP7 DUP3 MSTORE SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 DUP8 SWAP2 DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE DUP6 DUP4 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP3 DUP5 ADD MLOAD SWAP2 DUP4 ADD SWAP2 PUSH2 0xFE7 SWAP2 POP DUP3 PUSH2 0x1B8C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x100D SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1636 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x1029 SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x169B JUMP JUMPDEST POP PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP5 SWAP1 SSTORE MLOAD DUP9 DUP2 MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x1BD0BC8E83E4B1CA39E055B0EE51FBDE9F6004EEF864DB76DD1FC7386693EB79 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10B0 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x10BA PUSH1 0x0 PUSH2 0x153C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA1039B2B93B34B1B29037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x1174 DUP2 PUSH2 0x153C JUMP JUMPDEST POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH7 0x38D7EA4C68000 DUP4 MSTORE SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1237 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x158C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x12BF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x60 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1297 JUMPI PUSH2 0x1297 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x12B7 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x126A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x12BF JUMPI DUP3 PUSH4 0xFFFFFFFF AND DUP5 PUSH1 0x80 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12F9 JUMPI PUSH2 0x12F9 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND SUB PUSH2 0x1316 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1357 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x1205 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x64 PUSH2 0x137E DUP4 PUSH1 0x63 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1388 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1463 DUP6 PUSH1 0xA0 ADD MLOAD DUP8 DUP8 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1407 SWAP4 SWAP3 SWAP2 SWAP1 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP5 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP4 MSTORE SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 POP CALLER SWAP2 POP DUP9 SWAP1 POP PUSH2 0x15FD JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP8 SWAP2 PUSH32 0xB8CB06E60D12513400244BCA527994B43B879FF6428E977F67071D81497B6F5F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x14F3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP4 SWAP2 PUSH32 0xF2BAEA2668E36A27A898B8C745DECB4439FF61AE04D545DCC6954B84BD3E3C42 SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x15AF JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x15C7 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1614 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x168B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x168B JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1656 JUMP JUMPDEST POP PUSH2 0x1697 SWAP3 SWAP2 POP PUSH2 0x1741 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x168B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x1708 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x16C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1738 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x1708 JUMP JUMPDEST POP POP PUSH2 0x1697 SWAP3 SWAP2 POP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1697 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1742 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x176D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x178E DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x176D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x181F PUSH1 0x20 DUP7 ADD PUSH2 0x179C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1847 DUP8 DUP3 DUP9 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1887 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x186F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP5 MLOAD DUP1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x18BD DUP2 PUSH1 0xA0 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x186C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x1909 PUSH1 0x20 DUP8 ADD PUSH2 0x1756 JUMP JUMPDEST SWAP4 POP PUSH2 0x1917 PUSH1 0x40 DUP8 ADD PUSH2 0x179C JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193F DUP9 DUP3 DUP10 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196B DUP3 PUSH2 0x1756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x199C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x19D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19F6 DUP12 DUP4 DUP13 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A22 DUP12 DUP4 DUP13 ADD PUSH2 0x1972 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A48 DUP11 DUP3 DUP12 ADD PUSH2 0x1972 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1AA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1AF2 JUMPI PUSH2 0x1AF2 PUSH2 0x1ACA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP6 PUSH1 0x60 SHL AND DUP2 MSTORE DUP3 DUP5 PUSH1 0x14 DUP4 ADD CALLDATACOPY PUSH1 0x14 SWAP3 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1237 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1B65 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B84 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B71 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BA6 JUMPI PUSH2 0x1BA6 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x1BBA DUP2 PUSH2 0x1BB4 DUP5 SLOAD PUSH2 0x1A90 JUMP JUMPDEST DUP5 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BEF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1BD7 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C1E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1BFF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1C3C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x12C5 JUMPI PUSH2 0x12C5 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C96 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP5 PUSH1 0xE0 SHL AND DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1CBF DUP2 PUSH1 0x4 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x186C JUMP JUMPDEST PUSH1 0x4 SWAP3 ADD SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xBC RETURN LOG3 0xBE ADDRESS 0xEB 0xD4 0xC6 0xE4 DELEGATECALL PUSH15 0x7AFC03DCBDABB034F463D629225063 PUSH24 0xEC4D653B64736F6C63430008160033000000000000000000 ",
          "sourceMap": "510:8141:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:53;;;;;;;;;;-1:-1:-1;1292:53:20;;;;;:::i;:::-;;:::i;:::-;;;597:25:24;;;585:2;570:18;1292:53:20;;;;;;;;7385:423;;;;;;;;;;-1:-1:-1;7385:423:20;;;;;:::i;:::-;;:::i;:::-;;;;1931:13:24;;1913:32;;2001:4;1989:17;;;1983:24;1961:20;;;1954:54;;;;1886:18;7385:423:20;1707:307:24;8512:137:20;;;;;;;;;;-1:-1:-1;8512:137:20;;;;;:::i;:::-;;:::i;:::-;;1243:43;;;;;;;;;;-1:-1:-1;1243:43:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3051:1665::-;;;;;;:::i;:::-;;:::i;1351:57::-;;;;;;;;;;-1:-1:-1;1351:57:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1351:57:20;;;;;;;;;;;;;-1:-1:-1;;;1351:57:20;;;;;;;;;;;;;;4077:25:24;;;-1:-1:-1;;;;;4176:15:24;;;4171:2;4156:18;;4149:43;4228:15;;;4208:18;;;4201:43;;;;4275:2;4260:18;;4253:34;;;;4324:15;;4318:3;4303:19;;4296:44;4389:10;4377:23;;;4129:3;4356:19;;4349:52;4432:3;4417:19;;4410:35;;;;4489:14;4482:22;4476:3;4461:19;;4454:51;4064:3;4049:19;1351:57:20;3742:769:24;8066:108:20;;;;;;;;;;-1:-1:-1;8066:108:20;;;;;:::i;:::-;;:::i;7881:114::-;;;;;;;;;;-1:-1:-1;7881:114:20;;;;;:::i;:::-;;:::i;628:29::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4885:32:24;;;4867:51;;4855:2;4840:18;628:29:20;4707:217:24;2240:737:20;;;;;;;;;;-1:-1:-1;2240:737:20;;;;;:::i;:::-;;:::i;701:30::-;;;;;;;;;;-1:-1:-1;701:30:20;;;;-1:-1:-1;;;;;701:30:20;;;152:33:21;;;;;;;;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;1638:85::-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;8237:209:20;;;;;;;;;;-1:-1:-1;8237:209:20;;;;;:::i;:::-;;:::i;1414:29::-;;;;;;;;;;;;;;;;663:32;;;;;;;;;;-1:-1:-1;663:32:20;;;;-1:-1:-1;;;;;663:32:20;;;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1292:53:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7385:423::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;7591:20:20;;;:8;:20;;;;;7566:45;;;;;;;;;;-1:-1:-1;;;;;7566:45:20;;;;;;;;-1:-1:-1;;;;7591:20:20;;7566:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7566:45:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7566:45:20;;;-1:-1:-1;;7566:45:20;;;;;;;;;;;;;;;7711:16;;7729:20;;;;;7688:62;;;;;7758:25:24;;;-1:-1:-1;;;;;7819:32:24;;;7799:18;;;7792:60;7868:18;;;7861:34;7711:16:20;;-1:-1:-1;7637:164:20;;7657:17;;7731:18:24;;7688:62:20;;;-1:-1:-1;;7688:62:20;;;;;;;7637:164;;;;;;;;;;;;;;;;;;7688:62;;7764:8;;;;;;7637:164;;7764:8;;;;7637:164;;;;;;;;-1:-1:-1;7637:164:20;-1:-1:-1;7637:6:20;;-1:-1:-1;;7637:164:20:i;:::-;7630:171;7385:423;-1:-1:-1;;;;;;7385:423:20:o;8512:137::-;1531:13:0;:11;:13::i;:::-;8597:45:20::1;8625:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;8625:7:20::1;-1:-1:-1::0;;;;;8597:27:20;::::1;::::0;8634:7;8597:27:::1;:45::i;:::-;8512:137:::0;;:::o;1243:43::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1243:43:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1243:43:20;;;;;;;;;;;;;;;-1:-1:-1;1243:43:20;:::o;3051:1665::-;3248:17;2500:21:10;:19;:21::i;:::-;3277:22:20::1;3302:20:::0;;;:8:::1;:20;::::0;;;;;;;3277:45;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;3277:45:20::1;::::0;;;;::::1;::::0;;;;3302:20;;3277:45;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;3277:45:20::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;3277:45:20;;;-1:-1:-1;;3277:45:20::1;::::0;;;::::1;::::0;::::1;;;;;::::0;;::::1;::::0;3340:14:::1;::::0;::::1;::::0;3277:45;;-1:-1:-1;3332:45:20::1;;;::::0;-1:-1:-1;;;3332:45:20;;8108:2:24;3332:45:20::1;::::0;::::1;8090:21:24::0;8147:2;8127:18;;;8120:30;-1:-1:-1;;;8166:18:24;;;8159:48;8224:18;;3332:45:20::1;;;;;;;;;3395:42;3412:7;3421:15;3395:16;:42::i;:::-;3387:73;;;::::0;-1:-1:-1;;;3387:73:20;;8455:2:24;3387:73:20::1;::::0;::::1;8437:21:24::0;8494:2;8474:18;;;8467:30;-1:-1:-1;;;8513:18:24;;;8506:48;8571:18;;3387:73:20::1;8253:342:24::0;3387:73:20::1;3478:45;3496:7;3505:17;3478;:45::i;:::-;3470:77;;;::::0;-1:-1:-1;;;3470:77:20;;8802:2:24;3470:77:20::1;::::0;::::1;8784:21:24::0;8841:2;8821:18;;;8814:30;-1:-1:-1;;;8860:18:24;;;8853:49;8919:18;;3470:77:20::1;8600:343:24::0;3470:77:20::1;3653:20;::::0;::::1;::::0;3603:71:::1;::::0;-1:-1:-1;;;;;3603:5:20::1;:22;::::0;3626:10:::1;::::0;3646:4:::1;::::0;3603:22:::1;:71::i;:::-;3766:14;:16:::0;;;:14:::1;:16;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;3749:63:20::1;::::0;;::::1;::::0;::::1;9405:19:24::0;;;;-1:-1:-1;;3784:10:20::1;9462:2:24::0;9458:15;9454:53;9440:12;;;9433:75;3796:15:20::1;9524:12:24::0;;;9517:28;9561:12;;3749:63:20::1;;;;;;;;;;;;3739:74;;;;;;3727:86;;3852:345;;;;;;;;3892:10;3852:345;;;;3923:10;-1:-1:-1::0;;;;;3852:345:20::1;;;;;3964:7;:16;;;-1:-1:-1::0;;;;;3852:345:20::1;;;;;4002:7;:20;;;3852:345;;;;4052:15;-1:-1:-1::0;;;;;3852:345:20::1;;;;;4099:17;3852:345;;;;;;4141:15;3852:345;;;;4181:5;3852:345;;;;::::0;3823:15:::1;:26;3839:9;3823:26;;;;;;;;;;;:374;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3823:374:20::1;;;;;-1:-1:-1::0;;;;;3823:374:20::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3823:374:20::1;;;;;-1:-1:-1::0;;;;;3823:374:20::1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3823:374:20::1;;;;;-1:-1:-1::0;;;;;3823:374:20::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4274:10;4251:9;4221:191;4298:10;4322:7;:20;;;4356:15;4385:17;4221:191;;;;;;;;-1:-1:-1::0;;;;;9869:15:24;;;9851:34;;9916:2;9901:18;;9894:34;;;;9964:15;;9959:2;9944:18;;9937:43;10028:10;10016:23;;;;10011:2;9996:18;;9989:51;9800:3;9785:19;;9584:462;4221:191:20::1;;;;;;;;4487:5;-1:-1:-1::0;;;;;4460:33:20::1;:15;-1:-1:-1::0;;;;;4460:33:20::1;;;:71;;;;4518:13;4497:17;:34;;;;4460:71;4456:254;;;4573:26;::::0;;;:15:::1;:26;::::0;;;;;;;;4547:63;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4547:63:20;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;4547:63:20;;::::1;;;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;;;;::::0;;;;::::1;::::0;4573:26;;4601:8;;4547:14:::1;:63::i;:::-;4456:254;;;4672:26;::::0;;;:15:::1;:26;::::0;;;;;;;;4641:58;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4641:58:20;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;4641:58:20;;::::1;;;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;;;;::::0;;;;::::1;::::0;4672:26;;4641:19:::1;:58::i;:::-;3267:1449;2542:20:10::0;1857:1;3068:21;;2888:208;2542:20;3051:1665:20;;;;;;;:::o;8066:108::-;1531:13:0;:11;:13::i;:::-;8141:15:20::1;:26:::0;;-1:-1:-1;;;;;;8141:26:20::1;-1:-1:-1::0;;;;;8141:26:20;;;::::1;::::0;;;::::1;::::0;;8066:108::o;7881:114::-;1531:13:0;:11;:13::i;:::-;7959:17:20::1;:29:::0;;-1:-1:-1;;;;;;7959:29:20::1;-1:-1:-1::0;;;;;7959:29:20;;;::::1;::::0;;;::::1;::::0;;7881:114::o;2240:737::-;2443:17;2511:10;2523:9;;2534:15;2494:56;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2494:56:20;;;;;;;;;2484:67;;2494:56;2484:67;;;;2592:245;;;;;2624:10;2592:245;;;;;;;;;;;;;;;;;;;;;;2484:67;-1:-1:-1;2592:245:20;;;;;2658:9;;;;;;2592:245;;2658:9;;;;2592:245;;;;;;;;;-1:-1:-1;;;2592:245:20;;;-1:-1:-1;2592:245:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2738:15;;;;;;2592:245;;;;2738:15;;2592:245;2738:15;2592:245;;;;;;;;;-1:-1:-1;;;2592:245:20;;;-1:-1:-1;2592:245:20;;;;;;;;;;;;;;;;;;;;;;;;2784:16;;;;;;2592:245;;;2784:16;;2592:245;2784:16;2592:245;;;;;;;;-1:-1:-1;2592:245:20;;;-1:-1:-1;;2822:4:20;2592:245;;;;;;;2570:19;;;:8;:19;;;;;;:267;;;;-1:-1:-1;;;;;;2570:267:20;-1:-1:-1;;;;;2570:267:20;;;;;;;;;;;;;;;;-1:-1:-1;2570:267:20;;:::i;:::-;-1:-1:-1;2570:267:20;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2570:267:20;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2570:267:20;;;;;;;;;;;;-1:-1:-1;;2570:267:20;;;;;;;;;;2873:10;-1:-1:-1;2856:28:20;;;;;;;;;;;:44;;-1:-1:-1;2856:44:20;;;;;;;;;;;;;;;;;2915:55;597:25:24;;;2873:10:20;;2856:44;;2915:55;;570:18:24;2915:55:20;;;;;;;2240:737;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;8237:209:20:-;8327:20;;;;:8;:20;;;;;:29;-1:-1:-1;;;;;8327:29:20;8360:10;8327:43;8319:73;;;;-1:-1:-1;;;8319:73:20;;13021:2:24;8319:73:20;;;13003:21:24;13060:2;13040:18;;;13033:30;-1:-1:-1;;;13079:18:24;;;13072:47;13136:18;;8319:73:20;12819:341:24;8319:73:20;8402:20;;;;:8;:20;;;;;;:27;;:37;;-1:-1:-1;;8402:37:20;;;;;;;;;;8237:209::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4867:51:24::0;4840:18;;2672:31:0::1;4707:217:24::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;872:291:21:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;1069:87:21;;;;;;;;1107:11;1069:87;;;;;;;872:291;-1:-1:-1;;872:291:21:o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:9;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;4867:51:24;4840:18;;1901:40:0;4707:217:24;1219:160:8;1328:43;;-1:-1:-1;;;;;13357:32:24;;;1328:43:8;;;13339:51:24;13406:18;;;13399:34;;;1301:71:8;;1321:5;;1343:14;;;;;13312:18:24;;1328:43:8;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:8;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2575:307:10:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:10;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;6592:318:20:-;6701:4;;6717:165;6738:7;:22;;;:29;6734:1;:33;6717:165;;;6821:5;-1:-1:-1;;;;;6792:34:20;:7;:22;;;6815:1;6792:25;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6792:34:20;;6788:84;;6853:4;6846:11;;;;;6788:84;6769:3;;6717:165;;;;6898:5;6891:12;;6592:318;;;;;:::o;6990:324::-;7101:4;;7117:169;7138:7;:23;;;:30;7134:1;:34;7117:169;;;7223:7;7193:37;;:7;:23;;;7217:1;7193:26;;;;;;;;:::i;:::-;;;;;;;:37;;;7189:87;;7257:4;7250:11;;;;;7189:87;7170:3;;7117:169;;1618:188:8;1745:53;;-1:-1:-1;;;;;13834:15:24;;;1745:53:8;;;13816:34:24;13886:15;;;13866:18;;;13859:43;13918:18;;;13911:34;;;1718:81:8;;1738:5;;1760:18;;;;;13751::24;;1745:53:8;13576:375:24;1718:81:8;1618:188;;;;:::o;4801:819:20:-;5043:23;;;;5080:14;;;;5108:22;;;;4993:23;;5043;5080:14;5166:3;5144:19;5080:14;5161:2;5144:19;:::i;:::-;:25;;;;:::i;:::-;5019:175;;;-1:-1:-1;;;;;14638:15:24;;;5019:175:20;;;14620:34:24;14670:18;;;14663:34;;;;14733:15;;14713:18;;;14706:43;14765:18;;;14758:34;;;;14554:19;;5019:175:20;;;;;;;;;;;;4993:201;;5260:12;5275:250;5296:7;:24;;;5345:9;5356:7;:23;;;5381:7;:14;;;5334:62;;;;;;;;;7758:25:24;;;-1:-1:-1;;;;;7819:32:24;;;;7814:2;7799:18;;7792:60;7883:2;7868:18;;7861:34;7746:2;7731:18;;7556:345;5334:62:20;;;;-1:-1:-1;;5334:62:20;;;;;;;5275:250;;;;;;;;;;;;;;;;;;5334:62;;5410:8;;;;;;5275:250;;5410:8;;;;5275:250;;;;;;;;-1:-1:-1;5432:26:20;;;;;;;;;5445:9;5432:26;;;;;;;;;;-1:-1:-1;5480:10:20;;-1:-1:-1;5505:10:20;;-1:-1:-1;5275:7:20;:250::i;:::-;5582:24;;;;5549:64;;;15005:10:24;14993:23;;;14975:42;;15048:2;15033:18;;15026:34;;;5260:265:20;;-1:-1:-1;5571:9:20;;5549:64;;14948:18:24;5549:64:20;;;;;;;4938:682;;4801:819;;;;:::o;5702:258::-;5818:23;;;;5843:14;;;;5799:59;;-1:-1:-1;;;;;5799:5:20;:18;;;:59::i;:::-;5868:26;;;;:15;:26;;;;;;;;:36;;;:43;;-1:-1:-1;;5868:43:20;5907:4;5868:43;;;5926:27;5884:9;;5926:27;;;5702:258;;:::o;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;8370:720:8:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:8;8910:8;8866:16;;-1:-1:-1;8942:15:8;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:8;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:8;;-1:-1:-1;;;;;4885:32:24;;9033:40:8;;;4867:51:24;4840:18;;9033:40:8;4707:217:24;504:358:21;739:7;819;828:8;838:15;802:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;792:63;;;;;;785:70;;504:358;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:24;82:20;;-1:-1:-1;;;;;131:31:24;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:24:o;633:163::-;700:20;;760:10;749:22;;739:33;;729:61;;786:1;783;776:12;801:347;852:8;862:6;916:3;909:4;901:6;897:17;893:27;883:55;;934:1;931;924:12;883:55;-1:-1:-1;957:20:24;;1000:18;989:30;;986:50;;;1032:1;1029;1022:12;986:50;1069:4;1061:6;1057:17;1045:29;;1121:3;1114:4;1105:6;1097;1093:19;1089:30;1086:39;1083:59;;;1138:1;1135;1128:12;1083:59;801:347;;;;;:::o;1153:549::-;1240:6;1248;1256;1264;1317:2;1305:9;1296:7;1292:23;1288:32;1285:52;;;1333:1;1330;1323:12;1285:52;1369:9;1356:23;1346:33;;1398:37;1431:2;1420:9;1416:18;1398:37;:::i;:::-;1388:47;;1486:2;1475:9;1471:18;1458:32;1513:18;1505:6;1502:30;1499:50;;;1545:1;1542;1535:12;1499:50;1584:58;1634:7;1625:6;1614:9;1610:22;1584:58;:::i;:::-;1153:549;;;;-1:-1:-1;1661:8:24;-1:-1:-1;;;;1153:549:24:o;2019:180::-;2078:6;2131:2;2119:9;2110:7;2106:23;2102:32;2099:52;;;2147:1;2144;2137:12;2099:52;-1:-1:-1;2170:23:24;;2019:180;-1:-1:-1;2019:180:24:o;2204:250::-;2289:1;2299:113;2313:6;2310:1;2307:13;2299:113;;;2389:11;;;2383:18;2370:11;;;2363:39;2335:2;2328:10;2299:113;;;-1:-1:-1;;2446:1:24;2428:16;;2421:27;2204:250::o;2459:649::-;2715:1;2711;2706:3;2702:11;2698:19;2690:6;2686:32;2675:9;2668:51;2755:3;2750:2;2739:9;2735:18;2728:31;2649:4;2788:6;2782:13;2832:6;2826:3;2815:9;2811:19;2804:35;2848:80;2921:6;2915:3;2904:9;2900:19;2895:2;2887:6;2883:15;2848:80;:::i;:::-;3031:2;3016:18;;3009:34;;;;-1:-1:-1;3086:14:24;;3079:22;3074:2;3059:18;;3052:50;2996:3;2989:2;2968:15;;;-1:-1:-1;;2964:29:24;2949:45;2945:55;;;-1:-1:-1;;2459:649:24:o;3113:624::-;3209:6;3217;3225;3233;3241;3294:3;3282:9;3273:7;3269:23;3265:33;3262:53;;;3311:1;3308;3301:12;3262:53;3347:9;3334:23;3324:33;;3376:38;3410:2;3399:9;3395:18;3376:38;:::i;:::-;3366:48;;3433:37;3466:2;3455:9;3451:18;3433:37;:::i;:::-;3423:47;;3521:2;3510:9;3506:18;3493:32;3548:18;3540:6;3537:30;3534:50;;;3580:1;3577;3570:12;3534:50;3619:58;3669:7;3660:6;3649:9;3645:22;3619:58;:::i;:::-;3113:624;;;;-1:-1:-1;3113:624:24;;-1:-1:-1;3696:8:24;;3593:84;3113:624;-1:-1:-1;;;3113:624:24:o;4516:186::-;4575:6;4628:2;4616:9;4607:7;4603:23;4599:32;4596:52;;;4644:1;4641;4634:12;4596:52;4667:29;4686:9;4667:29;:::i;:::-;4657:39;4516:186;-1:-1:-1;;;4516:186:24:o;4929:367::-;4992:8;5002:6;5056:3;5049:4;5041:6;5037:17;5033:27;5023:55;;5074:1;5071;5064:12;5023:55;-1:-1:-1;5097:20:24;;5140:18;5129:30;;5126:50;;;5172:1;5169;5162:12;5126:50;5209:4;5201:6;5197:17;5185:29;;5269:3;5262:4;5252:6;5249:1;5245:14;5237:6;5233:27;5229:38;5226:47;5223:67;;;5286:1;5283;5276:12;5301:1129;5452:6;5460;5468;5476;5484;5492;5500;5553:3;5541:9;5532:7;5528:23;5524:33;5521:53;;;5570:1;5567;5560:12;5521:53;5610:9;5597:23;5639:18;5680:2;5672:6;5669:14;5666:34;;;5696:1;5693;5686:12;5666:34;5735:58;5785:7;5776:6;5765:9;5761:22;5735:58;:::i;:::-;5812:8;;-1:-1:-1;5709:84:24;-1:-1:-1;5894:2:24;5879:18;;5866:32;;-1:-1:-1;5951:2:24;5936:18;;5923:32;;-1:-1:-1;5967:16:24;;;5964:36;;;5996:1;5993;5986:12;5964:36;6035:72;6099:7;6088:8;6077:9;6073:24;6035:72;:::i;:::-;6126:8;;-1:-1:-1;6009:98:24;-1:-1:-1;6214:2:24;6199:18;;6186:32;;-1:-1:-1;6230:16:24;;;6227:36;;;6259:1;6256;6249:12;6227:36;;6298:72;6362:7;6351:8;6340:9;6336:24;6298:72;:::i;:::-;5301:1129;;;;-1:-1:-1;5301:1129:24;;-1:-1:-1;5301:1129:24;;;;6272:98;;-1:-1:-1;;;5301:1129:24:o;6643:341::-;6708:6;6716;6769:2;6757:9;6748:7;6744:23;6740:32;6737:52;;;6785:1;6782;6775:12;6737:52;6821:9;6808:23;6798:33;;6881:2;6870:9;6866:18;6853:32;6928:5;6921:13;6914:21;6907:5;6904:32;6894:60;;6950:1;6947;6940:12;6894:60;6973:5;6963:15;;;6643:341;;;;;:::o;7171:380::-;7250:1;7246:12;;;;7293;;;7314:61;;7368:4;7360:6;7356:17;7346:27;;7314:61;7421:2;7413:6;7410:14;7390:18;7387:38;7384:161;;7467:10;7462:3;7458:20;7455:1;7448:31;7502:4;7499:1;7492:15;7530:4;7527:1;7520:15;7384:161;;7171:380;;;:::o;8948:127::-;9009:10;9004:3;9000:20;8997:1;8990:31;9040:4;9037:1;9030:15;9064:4;9061:1;9054:15;9080:135;9119:3;9140:17;;;9137:43;;9160:18;;:::i;:::-;-1:-1:-1;9207:1:24;9196:13;;9080:135::o;10051:436::-;10303:26;10299:31;10290:6;10286:2;10282:15;10278:53;10273:3;10266:66;10376:6;10368;10363:2;10358:3;10354:12;10341:42;10442:2;10402:16;;10434:11;;;10427:27;10478:2;10470:11;;10051:436;-1:-1:-1;;10051:436:24:o;10492:127::-;10553:10;10548:3;10544:20;10541:1;10534:31;10584:4;10581:1;10574:15;10608:4;10605:1;10598:15;10750:543;10852:2;10847:3;10844:11;10841:446;;;10888:1;10912:5;10909:1;10902:16;10956:4;10953:1;10943:18;11026:2;11014:10;11010:19;11007:1;11003:27;10997:4;10993:38;11062:4;11050:10;11047:20;11044:47;;;-1:-1:-1;11085:4:24;11044:47;11140:2;11135:3;11131:12;11128:1;11124:20;11118:4;11114:31;11104:41;;11195:82;11213:2;11206:5;11203:13;11195:82;;;11258:17;;;11239:1;11228:13;11195:82;;;11199:3;;;10750:543;;;:::o;11469:1345::-;11595:3;11589:10;11622:18;11614:6;11611:30;11608:56;;;11644:18;;:::i;:::-;11673:97;11763:6;11723:38;11755:4;11749:11;11723:38;:::i;:::-;11717:4;11673:97;:::i;:::-;11825:4;;11882:2;11871:14;;11899:1;11894:663;;;;12601:1;12618:6;12615:89;;;-1:-1:-1;12670:19:24;;;12664:26;12615:89;-1:-1:-1;;11426:1:24;11422:11;;;11418:24;11414:29;11404:40;11450:1;11446:11;;;11401:57;12717:81;;11864:944;;11894:663;10697:1;10690:14;;;10734:4;10721:18;;-1:-1:-1;;11930:20:24;;;12048:236;12062:7;12059:1;12056:14;12048:236;;;12151:19;;;12145:26;12130:42;;12243:27;;;;12211:1;12199:14;;;;12078:19;;12048:236;;;12052:3;12312:6;12303:7;12300:19;12297:201;;;12373:19;;;12367:26;-1:-1:-1;;12456:1:24;12452:14;;;12468:3;12448:24;12444:37;12440:42;12425:58;12410:74;;12297:201;-1:-1:-1;;;;;12544:1:24;12528:14;;;12524:22;12511:36;;-1:-1:-1;11469:1345:24:o;13444:127::-;13505:10;13500:3;13496:20;13493:1;13486:31;13536:4;13533:1;13526:15;13560:4;13557:1;13550:15;13956:168;14029:9;;;14060;;14077:15;;;14071:22;;14057:37;14047:71;;14098:18;;:::i;14129:217::-;14169:1;14195;14185:132;;14239:10;14234:3;14230:20;14227:1;14220:31;14274:4;14271:1;14264:15;14302:4;14299:1;14292:15;14185:132;-1:-1:-1;14331:9:24;;14129:217::o;15071:479::-;15315:10;15310:3;15306:20;15297:6;15292:3;15288:16;15284:43;15279:3;15272:56;15254:3;15357:6;15351:13;15373:74;15440:6;15436:1;15431:3;15427:11;15420:4;15412:6;15408:17;15373:74;:::i;:::-;15506:1;15466:16;;15498:10;;;15491:26;;;;15541:2;15533:11;;15071:479;-1:-1:-1;;;15071:479:24:o"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "1486800",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "endpoint()": "infinite",
            "owner()": "2353",
            "paymentRequests(bytes32)": "15439",
            "providerServices(address,uint256)": "4757",
            "pyusd()": "infinite",
            "pyusdOFTAdapter()": "2382",
            "quotePayment(bytes32,uint32,bytes)": "infinite",
            "recoverTokens(address,uint256)": "infinite",
            "registerService(string,uint256,address[],uint32[])": "infinite",
            "renounceOwnership()": "infinite",
            "requestCounter()": "2350",
            "requestPayment(bytes32,address,uint32,bytes)": "infinite",
            "services(bytes32)": "infinite",
            "setPYUSDOFTAdapter(address)": "26802",
            "setTokenSwapComposer(address)": "26824",
            "tokenSwapComposer()": "2425",
            "transferOwnership(address)": "28443",
            "updateServiceStatus(bytes32,bool)": "26850"
          },
          "internal": {
            "_isChainSupported(struct X402PaymentRouter.Service memory,uint32)": "infinite",
            "_isTokenAccepted(struct X402PaymentRouter.Service memory,address)": "infinite",
            "_lzReceive(struct OApp.Origin calldata,bytes32,bytes calldata,address,bytes calldata)": "infinite",
            "_routeDirectPayment(bytes32,struct X402PaymentRouter.PaymentRequest memory)": "infinite",
            "_routeWithSwap(bytes32,struct X402PaymentRouter.PaymentRequest memory,bytes calldata)": "infinite"
          }
        },
        "methodIdentifiers": {
          "endpoint()": "5e280f11",
          "owner()": "8da5cb5b",
          "paymentRequests(bytes32)": "0d7a55ba",
          "providerServices(address,uint256)": "03731b9e",
          "pyusd()": "22e669d3",
          "pyusdOFTAdapter()": "37001ca4",
          "quotePayment(bytes32,uint32,bytes)": "04a5bf1e",
          "recoverTokens(address,uint256)": "069c9fae",
          "registerService(string,uint256,address[],uint32[])": "239bd611",
          "renounceOwnership()": "715018a6",
          "requestCounter()": "973a814e",
          "requestPayment(bytes32,address,uint32,bytes)": "0ca1bdab",
          "services(bytes32)": "0a790eb7",
          "setPYUSDOFTAdapter(address)": "10619dce",
          "setTokenSwapComposer(address)": "1b6b204a",
          "tokenSwapComposer()": "ba7c8732",
          "transferOwnership(address)": "f2fde38b",
          "updateServiceStatus(bytes32,bool)": "945a322a"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pyusd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationChain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"}],\"name\":\"CrossChainPaymentSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"PaymentCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"serviceId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationChain\",\"type\":\"uint32\"}],\"name\":\"PaymentRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"serviceId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ServiceRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"paymentRequests\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"serviceId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requestedToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"destinationChain\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"providerServices\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pyusd\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pyusdOFTAdapter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_serviceId\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"_destinationChain\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"}],\"name\":\"quotePayment\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct OApp.MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_endpoint\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerCall\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_acceptedTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"_supportedChains\",\"type\":\"uint32[]\"}],\"name\":\"registerService\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"serviceId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_serviceId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_requestedToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_destinationChain\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"}],\"name\":\"requestPayment\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"services\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"endpoint\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pricePerCall\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adapter\",\"type\":\"address\"}],\"name\":\"setPYUSDOFTAdapter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_composer\",\"type\":\"address\"}],\"name\":\"setTokenSwapComposer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSwapComposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_serviceId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"updateServiceStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Routes PYUSD payments cross-chain with automatic token swapping\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"X402PaymentRouter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quotePayment(bytes32,uint32,bytes)\":{\"notice\":\"Quote cross-chain payment fee\"},\"recoverTokens(address,uint256)\":{\"notice\":\"Emergency token recovery\"},\"registerService(string,uint256,address[],uint32[])\":{\"notice\":\"Register x402 service\"},\"requestPayment(bytes32,address,uint32,bytes)\":{\"notice\":\"Request payment for x402 service\"},\"setPYUSDOFTAdapter(address)\":{\"notice\":\"Set PYUSD OFT adapter address\"},\"setTokenSwapComposer(address)\":{\"notice\":\"Set token swap composer address\"},\"updateServiceStatus(bytes32,bool)\":{\"notice\":\"Update service status\"}},\"notice\":\"Main payment router for x402 microservices with LayerZero integration\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/X402PaymentRouter.sol\":\"X402PaymentRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/X402PaymentRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"./base/OApp.sol\\\";\\n\\n/**\\n * @title X402PaymentRouter\\n * @notice Main payment router for x402 microservices with LayerZero integration\\n * @dev Routes PYUSD payments cross-chain with automatic token swapping\\n */\\ncontract X402PaymentRouter is OApp, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n    \\n    // Core components\\n    IERC20 public immutable pyusd;\\n    address public tokenSwapComposer;\\n    address public pyusdOFTAdapter;\\n    \\n    // Service registry\\n    struct Service {\\n        address provider;\\n        string endpoint;\\n        uint256 pricePerCall;\\n        address[] acceptedTokens;\\n        uint32[] supportedChains;\\n        bool active;\\n    }\\n    \\n    struct PaymentRequest {\\n        bytes32 serviceId;\\n        address payer;\\n        address serviceProvider;\\n        uint256 amount;\\n        address requestedToken;\\n        uint32 destinationChain;\\n        uint256 timestamp;\\n        bool completed;\\n    }\\n    \\n    // State\\n    mapping(bytes32 => Service) public services;\\n    mapping(address => bytes32[]) public providerServices;\\n    mapping(bytes32 => PaymentRequest) public paymentRequests;\\n    uint256 public requestCounter;\\n    \\n    // Events\\n    event ServiceRegistered(\\n        bytes32 indexed serviceId,\\n        address indexed provider,\\n        uint256 price\\n    );\\n    \\n    event PaymentRequested(\\n        bytes32 indexed requestId,\\n        bytes32 indexed serviceId,\\n        address payer,\\n        uint256 amount,\\n        address requestedToken,\\n        uint32 destinationChain\\n    );\\n    \\n    event PaymentCompleted(bytes32 indexed requestId);\\n    \\n    event CrossChainPaymentSent(\\n        bytes32 indexed requestId,\\n        uint32 destinationChain,\\n        bytes32 guid\\n    );\\n    \\n    constructor(\\n        address _pyusd,\\n        address _endpoint,\\n        address _delegate\\n    ) OApp(_endpoint, _delegate) {\\n        pyusd = IERC20(_pyusd);\\n    }\\n    \\n    /**\\n     * @notice Register x402 service\\n     */\\n    function registerService(\\n        string calldata _endpoint,\\n        uint256 _pricePerCall,\\n        address[] calldata _acceptedTokens,\\n        uint32[] calldata _supportedChains\\n    ) external returns (bytes32 serviceId) {\\n        serviceId = keccak256(abi.encodePacked(msg.sender, _endpoint, block.timestamp));\\n        \\n        services[serviceId] = Service({\\n            provider: msg.sender,\\n            endpoint: _endpoint,\\n            pricePerCall: _pricePerCall,\\n            acceptedTokens: _acceptedTokens,\\n            supportedChains: _supportedChains,\\n            active: true\\n        });\\n        \\n        providerServices[msg.sender].push(serviceId);\\n        emit ServiceRegistered(serviceId, msg.sender, _pricePerCall);\\n    }\\n    \\n    /**\\n     * @notice Request payment for x402 service\\n     */\\n    function requestPayment(\\n        bytes32 _serviceId,\\n        address _requestedToken,\\n        uint32 _destinationChain,\\n        bytes calldata _options\\n    ) external payable nonReentrant returns (bytes32 requestId) {\\n        Service memory service = services[_serviceId];\\n        require(service.active, \\\"Service not active\\\");\\n        require(_isTokenAccepted(service, _requestedToken), \\\"Token not accepted\\\");\\n        require(_isChainSupported(service, _destinationChain), \\\"Chain not supported\\\");\\n        \\n        // Transfer PYUSD from payer\\n        pyusd.safeTransferFrom(msg.sender, address(this), service.pricePerCall);\\n        \\n        // Create payment request\\n        requestId = keccak256(abi.encodePacked(requestCounter++, msg.sender, block.timestamp));\\n        paymentRequests[requestId] = PaymentRequest({\\n            serviceId: _serviceId,\\n            payer: msg.sender,\\n            serviceProvider: service.provider,\\n            amount: service.pricePerCall,\\n            requestedToken: _requestedToken,\\n            destinationChain: _destinationChain,\\n            timestamp: block.timestamp,\\n            completed: false\\n        });\\n        \\n        emit PaymentRequested(\\n            requestId,\\n            _serviceId,\\n            msg.sender,\\n            service.pricePerCall,\\n            _requestedToken,\\n            _destinationChain\\n        );\\n        \\n        // Route payment\\n        if (_requestedToken != address(pyusd) || _destinationChain != block.chainid) {\\n            _routeWithSwap(requestId, paymentRequests[requestId], _options);\\n        } else {\\n            _routeDirectPayment(requestId, paymentRequests[requestId]);\\n        }\\n    }\\n    \\n    /**\\n     * @notice Route payment with token swap via LayerZero\\n     */\\n    function _routeWithSwap(\\n        bytes32 requestId,\\n        PaymentRequest memory request,\\n        bytes calldata _options\\n    ) private {\\n        // Prepare composed message for swap\\n        bytes memory composeMsg = abi.encode(\\n            request.serviceProvider,\\n            request.amount,\\n            request.requestedToken,\\n            request.amount * 99 / 100 // 1% slippage\\n        );\\n        \\n        // Send via LayerZero with composition\\n        bytes32 guid = _lzSend(\\n            request.destinationChain,\\n            abi.encode(requestId, request.serviceProvider, request.amount),\\n            _options,\\n            MessagingFee(msg.value, 0),\\n            payable(msg.sender),\\n            composeMsg\\n        );\\n        \\n        emit CrossChainPaymentSent(requestId, request.destinationChain, guid);\\n    }\\n    \\n    /**\\n     * @notice Route direct PYUSD payment on same chain\\n     */\\n    function _routeDirectPayment(bytes32 requestId, PaymentRequest memory request) private {\\n        pyusd.safeTransfer(request.serviceProvider, request.amount);\\n        paymentRequests[requestId].completed = true;\\n        emit PaymentCompleted(requestId);\\n    }\\n    \\n    /**\\n     * @notice Receive cross-chain payment confirmation\\n     */\\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal override {\\n        (bytes32 requestId, address provider, uint256 amount) = \\n            abi.decode(_message, (bytes32, address, uint256));\\n        \\n        // Mark payment as completed\\n        paymentRequests[requestId].completed = true;\\n        emit PaymentCompleted(requestId);\\n    }\\n    \\n    /**\\n     * @notice Check if token is accepted by service\\n     */\\n    function _isTokenAccepted(\\n        Service memory service,\\n        address token\\n    ) private pure returns (bool) {\\n        for (uint i = 0; i < service.acceptedTokens.length; i++) {\\n            if (service.acceptedTokens[i] == token) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n    \\n    /**\\n     * @notice Check if chain is supported by service\\n     */\\n    function _isChainSupported(\\n        Service memory service,\\n        uint32 chainId\\n    ) private pure returns (bool) {\\n        for (uint i = 0; i < service.supportedChains.length; i++) {\\n            if (service.supportedChains[i] == chainId) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n    \\n    /**\\n     * @notice Quote cross-chain payment fee\\n     */\\n    function quotePayment(\\n        bytes32 _serviceId,\\n        uint32 _destinationChain,\\n        bytes calldata _options\\n    ) external view returns (MessagingFee memory fee) {\\n        Service memory service = services[_serviceId];\\n        \\n        return _quote(\\n            _destinationChain,\\n            abi.encode(_serviceId, service.provider, service.pricePerCall),\\n            _options,\\n            false\\n        );\\n    }\\n    \\n    /**\\n     * @notice Set token swap composer address\\n     */\\n    function setTokenSwapComposer(address _composer) external onlyOwner {\\n        tokenSwapComposer = _composer;\\n    }\\n    \\n    /**\\n     * @notice Set PYUSD OFT adapter address\\n     */\\n    function setPYUSDOFTAdapter(address _adapter) external onlyOwner {\\n        pyusdOFTAdapter = _adapter;\\n    }\\n    \\n    /**\\n     * @notice Update service status\\n     */\\n    function updateServiceStatus(bytes32 _serviceId, bool _active) external {\\n        require(services[_serviceId].provider == msg.sender, \\\"Not service owner\\\");\\n        services[_serviceId].active = _active;\\n    }\\n    \\n    /**\\n     * @notice Emergency token recovery\\n     */\\n    function recoverTokens(address _token, uint256 _amount) external onlyOwner {\\n        IERC20(_token).safeTransfer(owner(), _amount);\\n    }\\n}\",\"keccak256\":\"0xb34448c903d367f4a21648bc6bcaca3feb38506b749c6366eb50e88a26200c83\",\"license\":\"MIT\"},\"contracts/base/OApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract OApp is Ownable {\\n    address public immutable endpoint;\\n    \\n    struct Origin {\\n        uint32 srcEid;\\n        bytes32 sender;\\n        uint64 nonce;\\n    }\\n    \\n    struct MessagingFee {\\n        uint256 nativeFee;\\n        uint256 lzTokenFee;\\n    }\\n    \\n    constructor(address _endpoint, address _delegate) Ownable(_delegate) {\\n        endpoint = _endpoint;\\n    }\\n    \\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address payable _refundAddress,\\n        bytes memory _composeMsg\\n    ) internal returns (bytes32) {\\n        // Simplified send\\n        return keccak256(abi.encodePacked(_dstEid, _message, block.timestamp));\\n    }\\n    \\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view returns (MessagingFee memory) {\\n        return MessagingFee({\\n            nativeFee: 0.001 ether,\\n            lzTokenFee: 0\\n        });\\n    }\\n    \\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal virtual;\\n}\",\"keccak256\":\"0x7327b01651c80031dd27b4dea9751e8836c159fd5d79329eede3ec409d3e594f\",\"license\":\"MIT\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 8,
            "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1498,
            "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5292,
            "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
            "label": "tokenSwapComposer",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 5294,
            "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
            "label": "pyusdOFTAdapter",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 5331,
            "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
            "label": "services",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(Service)5309_storage)"
          },
          {
            "astId": 5336,
            "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
            "label": "providerServices",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
          },
          {
            "astId": 5341,
            "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
            "label": "paymentRequests",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_struct(PaymentRequest)5326_storage)"
          },
          {
            "astId": 5343,
            "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
            "label": "requestCounter",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "base": "t_address",
            "encoding": "dynamic_array",
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "base": "t_bytes32",
            "encoding": "dynamic_array",
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)dyn_storage": {
            "base": "t_uint32",
            "encoding": "dynamic_array",
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "encoding": "inplace",
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32",
            "value": "t_array(t_bytes32)dyn_storage"
          },
          "t_mapping(t_bytes32,t_struct(PaymentRequest)5326_storage)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => struct X402PaymentRouter.PaymentRequest)",
            "numberOfBytes": "32",
            "value": "t_struct(PaymentRequest)5326_storage"
          },
          "t_mapping(t_bytes32,t_struct(Service)5309_storage)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => struct X402PaymentRouter.Service)",
            "numberOfBytes": "32",
            "value": "t_struct(Service)5309_storage"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PaymentRequest)5326_storage": {
            "encoding": "inplace",
            "label": "struct X402PaymentRouter.PaymentRequest",
            "members": [
              {
                "astId": 5311,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "serviceId",
                "offset": 0,
                "slot": "0",
                "type": "t_bytes32"
              },
              {
                "astId": 5313,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "payer",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 5315,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "serviceProvider",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 5317,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "amount",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 5319,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "requestedToken",
                "offset": 0,
                "slot": "4",
                "type": "t_address"
              },
              {
                "astId": 5321,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "destinationChain",
                "offset": 20,
                "slot": "4",
                "type": "t_uint32"
              },
              {
                "astId": 5323,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "timestamp",
                "offset": 0,
                "slot": "5",
                "type": "t_uint256"
              },
              {
                "astId": 5325,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "completed",
                "offset": 0,
                "slot": "6",
                "type": "t_bool"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Service)5309_storage": {
            "encoding": "inplace",
            "label": "struct X402PaymentRouter.Service",
            "members": [
              {
                "astId": 5296,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "provider",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 5298,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "endpoint",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
              },
              {
                "astId": 5300,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "pricePerCall",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 5303,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "acceptedTokens",
                "offset": 0,
                "slot": "3",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 5306,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "supportedChains",
                "offset": 0,
                "slot": "4",
                "type": "t_array(t_uint32)dyn_storage"
              },
              {
                "astId": 5308,
                "contract": "contracts/X402PaymentRouter.sol:X402PaymentRouter",
                "label": "active",
                "offset": 0,
                "slot": "5",
                "type": "t_bool"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "encoding": "inplace",
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "quotePayment(bytes32,uint32,bytes)": {
            "notice": "Quote cross-chain payment fee"
          },
          "recoverTokens(address,uint256)": {
            "notice": "Emergency token recovery"
          },
          "registerService(string,uint256,address[],uint32[])": {
            "notice": "Register x402 service"
          },
          "requestPayment(bytes32,address,uint32,bytes)": {
            "notice": "Request payment for x402 service"
          },
          "setPYUSDOFTAdapter(address)": {
            "notice": "Set PYUSD OFT adapter address"
          },
          "setTokenSwapComposer(address)": {
            "notice": "Set token swap composer address"
          },
          "updateServiceStatus(bytes32,bool)": {
            "notice": "Update service status"
          }
        },
        "notice": "Main payment router for x402 microservices with LayerZero integration",
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/IERC1363.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/ERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\"\n    },\n    \"contracts/base/OApp.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract OApp is Ownable {\\n    address public immutable endpoint;\\n    \\n    struct Origin {\\n        uint32 srcEid;\\n        bytes32 sender;\\n        uint64 nonce;\\n    }\\n    \\n    struct MessagingFee {\\n        uint256 nativeFee;\\n        uint256 lzTokenFee;\\n    }\\n    \\n    constructor(address _endpoint, address _delegate) Ownable(_delegate) {\\n        endpoint = _endpoint;\\n    }\\n    \\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address payable _refundAddress,\\n        bytes memory _composeMsg\\n    ) internal returns (bytes32) {\\n        // Simplified send\\n        return keccak256(abi.encodePacked(_dstEid, _message, block.timestamp));\\n    }\\n    \\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view returns (MessagingFee memory) {\\n        return MessagingFee({\\n            nativeFee: 0.001 ether,\\n            lzTokenFee: 0\\n        });\\n    }\\n    \\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal virtual;\\n}\"\n    },\n    \"contracts/base/OFTCore.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract OFTCore is Ownable {\\n    uint8 public immutable sharedDecimals;\\n    address public immutable lzEndpoint;\\n    \\n    struct SendParam {\\n        uint32 dstEid;\\n        bytes32 to;\\n        uint256 amountLD;\\n        uint256 minAmountLD;\\n        bytes extraOptions;\\n        bytes composeMsg;\\n        bytes oftCmd;\\n    }\\n    \\n    struct MessagingFee {\\n        uint256 nativeFee;\\n        uint256 lzTokenFee;\\n    }\\n    \\n    constructor(\\n        uint8 _sharedDecimals,\\n        address _lzEndpoint,\\n        address _delegate\\n    ) Ownable(_delegate) {\\n        sharedDecimals = _sharedDecimals;\\n        lzEndpoint = _lzEndpoint;\\n    }\\n    \\n    function _debit(\\n        uint256 _amountLD,\\n        uint256 _minAmountLD,\\n        uint32 _dstEid\\n    ) internal virtual returns (uint256 amountSentLD, uint256 amountReceivedLD);\\n    \\n    function _credit(\\n        address _to,\\n        uint256 _amountLD,\\n        uint32 _srcEid\\n    ) internal virtual returns (uint256 amountReceivedLD);\\n    \\n    function _send(\\n        SendParam memory _sendParam,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal returns (bytes32 guid) {\\n        (uint256 amountSentLD, uint256 amountReceivedLD) = _debit(\\n            _sendParam.amountLD,\\n            _sendParam.minAmountLD,\\n            _sendParam.dstEid\\n        );\\n        \\n        // Simplified send logic\\n        guid = keccak256(abi.encodePacked(block.timestamp, _sendParam.dstEid, _sendParam.to));\\n        return guid;\\n    }\\n    \\n    function _quote(\\n        SendParam memory _sendParam,\\n        bool _payInLzToken\\n    ) internal view returns (MessagingFee memory) {\\n        // Simplified quote logic\\n        return MessagingFee({\\n            nativeFee: 0.001 ether,\\n            lzTokenFee: 0\\n        });\\n    }\\n}\"\n    },\n    \"contracts/HiveMindCoordinator.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title HiveMindCoordinator\\n * @notice Coordinates AI agent swarm operations with micropayments\\n * @dev Manages agent registration, task distribution, and earnings\\n */\\ncontract HiveMindCoordinator is Ownable, ReentrancyGuard {\\n    \\n    // Agent structure\\n    struct Agent {\\n        address wallet;\\n        string endpoint;\\n        string[] capabilities;\\n        uint256 reputation;\\n        uint256 earnings;\\n        uint256 tasksCompleted;\\n        bool active;\\n        uint256 registeredAt;\\n    }\\n    \\n    // Task structure\\n    struct Task {\\n        uint256 id;\\n        address requester;\\n        string taskType;\\n        string ipfsHash; // Task details stored on IPFS\\n        uint256 reward;\\n        address assignedAgent;\\n        TaskStatus status;\\n        uint256 createdAt;\\n        uint256 completedAt;\\n    }\\n    \\n    enum TaskStatus {\\n        Pending,\\n        Assigned,\\n        InProgress,\\n        Completed,\\n        Failed,\\n        Disputed\\n    }\\n    \\n    // State variables\\n    IERC20 public paymentToken; // USDC or other stablecoin\\n    uint256 public taskCounter;\\n    uint256 public platformFee = 100; // 1% = 100 basis points\\n    uint256 public minReputation = 100;\\n    uint256 public totalEarnings;\\n    \\n    // Mappings\\n    mapping(address => Agent) public agents;\\n    mapping(uint256 => Task) public tasks;\\n    mapping(address => uint256[]) public agentTasks;\\n    mapping(string => address[]) public capabilityToAgents;\\n    \\n    // Arrays for enumeration\\n    address[] public registeredAgents;\\n    \\n    // Events\\n    event AgentRegistered(address indexed agent, string endpoint);\\n    event AgentUpdated(address indexed agent, string[] capabilities);\\n    event TaskCreated(uint256 indexed taskId, address indexed requester, uint256 reward);\\n    event TaskAssigned(uint256 indexed taskId, address indexed agent);\\n    event TaskCompleted(uint256 indexed taskId, address indexed agent, uint256 reward);\\n    event TaskFailed(uint256 indexed taskId, address indexed agent);\\n    event ReputationUpdated(address indexed agent, uint256 newReputation);\\n    event EarningsWithdrawn(address indexed agent, uint256 amount);\\n    \\n    constructor(address _paymentToken) Ownable(msg.sender) {\\n        paymentToken = IERC20(_paymentToken);\\n    }\\n    \\n    /**\\n     * @notice Register a new agent in the swarm\\n     * @param endpoint Agent's API endpoint\\n     * @param capabilities Array of agent capabilities\\n     */\\n    function registerAgent(\\n        string memory endpoint,\\n        string[] memory capabilities\\n    ) external {\\n        require(bytes(endpoint).length > 0, \\\"Invalid endpoint\\\");\\n        require(capabilities.length > 0, \\\"No capabilities provided\\\");\\n        require(!agents[msg.sender].active, \\\"Agent already registered\\\");\\n        \\n        Agent storage newAgent = agents[msg.sender];\\n        newAgent.wallet = msg.sender;\\n        newAgent.endpoint = endpoint;\\n        newAgent.capabilities = capabilities;\\n        newAgent.reputation = minReputation;\\n        newAgent.active = true;\\n        newAgent.registeredAt = block.timestamp;\\n        \\n        registeredAgents.push(msg.sender);\\n        \\n        // Map capabilities to agent\\n        for (uint i = 0; i < capabilities.length; i++) {\\n            capabilityToAgents[capabilities[i]].push(msg.sender);\\n        }\\n        \\n        emit AgentRegistered(msg.sender, endpoint);\\n    }\\n    \\n    /**\\n     * @notice Update agent capabilities\\n     * @param capabilities New array of capabilities\\n     */\\n    function updateCapabilities(string[] memory capabilities) external {\\n        require(agents[msg.sender].active, \\\"Agent not registered\\\");\\n        require(capabilities.length > 0, \\\"No capabilities provided\\\");\\n        \\n        // Clear old capability mappings\\n        string[] memory oldCapabilities = agents[msg.sender].capabilities;\\n        for (uint i = 0; i < oldCapabilities.length; i++) {\\n            _removeFromCapabilityMapping(oldCapabilities[i], msg.sender);\\n        }\\n        \\n        // Update capabilities\\n        agents[msg.sender].capabilities = capabilities;\\n        \\n        // Update capability mappings\\n        for (uint i = 0; i < capabilities.length; i++) {\\n            capabilityToAgents[capabilities[i]].push(msg.sender);\\n        }\\n        \\n        emit AgentUpdated(msg.sender, capabilities);\\n    }\\n    \\n    /**\\n     * @notice Create a new task\\n     * @param taskType Type of task\\n     * @param ipfsHash IPFS hash containing task details\\n     * @param reward Task reward amount\\n     */\\n    function createTask(\\n        string memory taskType,\\n        string memory ipfsHash,\\n        uint256 reward\\n    ) external nonReentrant returns (uint256) {\\n        require(reward > 0, \\\"Invalid reward amount\\\");\\n        require(bytes(taskType).length > 0, \\\"Invalid task type\\\");\\n        require(bytes(ipfsHash).length > 0, \\\"Invalid IPFS hash\\\");\\n        \\n        // Transfer reward to contract\\n        require(\\n            paymentToken.transferFrom(msg.sender, address(this), reward),\\n            \\\"Payment transfer failed\\\"\\n        );\\n        \\n        taskCounter++;\\n        \\n        Task storage newTask = tasks[taskCounter];\\n        newTask.id = taskCounter;\\n        newTask.requester = msg.sender;\\n        newTask.taskType = taskType;\\n        newTask.ipfsHash = ipfsHash;\\n        newTask.reward = reward;\\n        newTask.status = TaskStatus.Pending;\\n        newTask.createdAt = block.timestamp;\\n        \\n        emit TaskCreated(taskCounter, msg.sender, reward);\\n        \\n        return taskCounter;\\n    }\\n    \\n    /**\\n     * @notice Assign task to an agent\\n     * @param taskId Task ID to assign\\n     * @param agent Agent address to assign to\\n     */\\n    function assignTask(uint256 taskId, address agent) external {\\n        Task storage task = tasks[taskId];\\n        require(task.id != 0, \\\"Task does not exist\\\");\\n        require(task.status == TaskStatus.Pending, \\\"Task not available\\\");\\n        require(agents[agent].active, \\\"Agent not active\\\");\\n        require(\\n            msg.sender == task.requester || msg.sender == owner(),\\n            \\\"Not authorized\\\"\\n        );\\n        \\n        task.assignedAgent = agent;\\n        task.status = TaskStatus.Assigned;\\n        agentTasks[agent].push(taskId);\\n        \\n        emit TaskAssigned(taskId, agent);\\n    }\\n    \\n    /**\\n     * @notice Mark task as completed and distribute rewards\\n     * @param taskId Task ID to complete\\n     */\\n    function completeTask(uint256 taskId) external nonReentrant {\\n        Task storage task = tasks[taskId];\\n        require(task.id != 0, \\\"Task does not exist\\\");\\n        require(\\n            task.status == TaskStatus.Assigned || \\n            task.status == TaskStatus.InProgress,\\n            \\\"Task not in progress\\\"\\n        );\\n        require(\\n            msg.sender == task.assignedAgent || \\n            msg.sender == task.requester ||\\n            msg.sender == owner(),\\n            \\\"Not authorized\\\"\\n        );\\n        \\n        task.status = TaskStatus.Completed;\\n        task.completedAt = block.timestamp;\\n        \\n        // Calculate platform fee\\n        uint256 fee = (task.reward * platformFee) / 10000;\\n        uint256 agentReward = task.reward - fee;\\n        \\n        // Update agent stats\\n        Agent storage agent = agents[task.assignedAgent];\\n        agent.earnings += agentReward;\\n        agent.tasksCompleted++;\\n        agent.reputation = _calculateReputation(agent);\\n        \\n        totalEarnings += fee;\\n        \\n        // Transfer reward to agent\\n        require(\\n            paymentToken.transfer(task.assignedAgent, agentReward),\\n            \\\"Reward transfer failed\\\"\\n        );\\n        \\n        emit TaskCompleted(taskId, task.assignedAgent, agentReward);\\n        emit ReputationUpdated(task.assignedAgent, agent.reputation);\\n    }\\n    \\n    /**\\n     * @notice Mark task as failed\\n     * @param taskId Task ID that failed\\n     */\\n    function failTask(uint256 taskId) external {\\n        Task storage task = tasks[taskId];\\n        require(task.id != 0, \\\"Task does not exist\\\");\\n        require(\\n            task.status == TaskStatus.Assigned || \\n            task.status == TaskStatus.InProgress,\\n            \\\"Task not in progress\\\"\\n        );\\n        require(\\n            msg.sender == task.assignedAgent || \\n            msg.sender == task.requester ||\\n            msg.sender == owner(),\\n            \\\"Not authorized\\\"\\n        );\\n        \\n        task.status = TaskStatus.Failed;\\n        \\n        // Reduce agent reputation\\n        Agent storage agent = agents[task.assignedAgent];\\n        agent.reputation = (agent.reputation * 90) / 100; // 10% reduction\\n        \\n        // Refund task requester\\n        require(\\n            paymentToken.transfer(task.requester, task.reward),\\n            \\\"Refund transfer failed\\\"\\n        );\\n        \\n        emit TaskFailed(taskId, task.assignedAgent);\\n        emit ReputationUpdated(task.assignedAgent, agent.reputation);\\n    }\\n    \\n    /**\\n     * @notice Get agents with specific capability\\n     * @param capability Capability to search for\\n     * @return Array of agent addresses\\n     */\\n    function getAgentsByCapability(string memory capability) \\n        external \\n        view \\n        returns (address[] memory) \\n    {\\n        return capabilityToAgents[capability];\\n    }\\n    \\n    /**\\n     * @notice Get agent details\\n     * @param agent Agent address\\n     * @return Agent struct\\n     */\\n    function getAgent(address agent) \\n        external \\n        view \\n        returns (Agent memory) \\n    {\\n        return agents[agent];\\n    }\\n    \\n    /**\\n     * @notice Get task details\\n     * @param taskId Task ID\\n     * @return Task struct\\n     */\\n    function getTask(uint256 taskId) \\n        external \\n        view \\n        returns (Task memory) \\n    {\\n        return tasks[taskId];\\n    }\\n    \\n    /**\\n     * @notice Get tasks assigned to an agent\\n     * @param agent Agent address\\n     * @return Array of task IDs\\n     */\\n    function getAgentTasks(address agent) \\n        external \\n        view \\n        returns (uint256[] memory) \\n    {\\n        return agentTasks[agent];\\n    }\\n    \\n    /**\\n     * @notice Withdraw platform earnings (owner only)\\n     */\\n    function withdrawPlatformEarnings() external onlyOwner nonReentrant {\\n        uint256 amount = totalEarnings;\\n        totalEarnings = 0;\\n        \\n        require(\\n            paymentToken.transfer(owner(), amount),\\n            \\\"Withdrawal failed\\\"\\n        );\\n        \\n        emit EarningsWithdrawn(owner(), amount);\\n    }\\n    \\n    /**\\n     * @notice Update platform fee (owner only)\\n     * @param newFee New fee in basis points (100 = 1%)\\n     */\\n    function updatePlatformFee(uint256 newFee) external onlyOwner {\\n        require(newFee <= 1000, \\\"Fee too high\\\"); // Max 10%\\n        platformFee = newFee;\\n    }\\n    \\n    /**\\n     * @notice Calculate agent reputation based on performance\\n     * @param agent Agent struct\\n     * @return New reputation score\\n     */\\n    function _calculateReputation(Agent memory agent) \\n        private \\n        view \\n        returns (uint256) \\n    {\\n        if (agent.tasksCompleted == 0) {\\n            return agent.reputation;\\n        }\\n        \\n        // Simple reputation calculation\\n        // Can be enhanced with more sophisticated algorithms\\n        uint256 baseScore = minReputation;\\n        uint256 performanceBonus = agent.tasksCompleted * 10;\\n        uint256 earningsBonus = agent.earnings / 1e18; // Per token earned\\n        \\n        return baseScore + performanceBonus + earningsBonus;\\n    }\\n    \\n    /**\\n     * @notice Remove agent from capability mapping\\n     * @param capability Capability string\\n     * @param agent Agent address to remove\\n     */\\n    function _removeFromCapabilityMapping(\\n        string memory capability, \\n        address agent\\n    ) private {\\n        address[] storage agentList = capabilityToAgents[capability];\\n        for (uint i = 0; i < agentList.length; i++) {\\n            if (agentList[i] == agent) {\\n                agentList[i] = agentList[agentList.length - 1];\\n                agentList.pop();\\n                break;\\n            }\\n        }\\n    }\\n    \\n    /**\\n     * @notice Get total number of registered agents\\n     * @return Number of agents\\n     */\\n    function getAgentCount() external view returns (uint256) {\\n        return registeredAgents.length;\\n    }\\n    \\n    /**\\n     * @notice Get total number of tasks\\n     * @return Number of tasks\\n     */\\n    function getTaskCount() external view returns (uint256) {\\n        return taskCounter;\\n    }\\n}\"\n    },\n    \"contracts/interfaces/ILayerZeroEndpoint.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\ninterface ILayerZeroEndpoint {\\n    struct MessagingParams {\\n        uint32 dstEid;\\n        bytes32 receiver;\\n        bytes message;\\n        bytes options;\\n        bool payInLzToken;\\n    }\\n\\n    struct MessagingReceipt {\\n        bytes32 guid;\\n        uint64 nonce;\\n        MessagingFee fee;\\n    }\\n\\n    struct MessagingFee {\\n        uint256 nativeFee;\\n        uint256 lzTokenFee;\\n    }\\n\\n    struct Origin {\\n        uint32 srcEid;\\n        bytes32 sender;\\n        uint64 nonce;\\n    }\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function quote(\\n        MessagingParams calldata _params,\\n        address _sender\\n    ) external view returns (MessagingFee memory);\\n\\n    function setDelegate(address _delegate) external;\\n}\"\n    },\n    \"contracts/MCPPaymentGateway.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { SafeERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { ReentrancyGuard } from \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\ninterface IX402PaymentRouter {\\n    function requestPayment(\\n        address _serviceProvider,\\n        uint256 _amount,\\n        string memory _requestedToken,\\n        uint32 _destinationChain,\\n        bytes calldata _serviceData\\n    ) external payable returns (bytes32 requestId);\\n    \\n    function registerService(\\n        string memory _serviceName,\\n        address _endpoint,\\n        uint256 _fee\\n    ) external;\\n}\\n\\ninterface IHiveMindCoordinator {\\n    function registerAgent(string memory endpoint, string[] memory capabilities) external;\\n    function createTask(string memory taskType, string memory ipfsHash, uint256 reward) external returns (uint256);\\n}\\n\\n/**\\n * @title MCPPaymentGateway\\n * @notice Gateway for MCP (Model Context Protocol) services to receive payments\\n * @dev Integrates with x402 protocol and LayerZero for cross-chain payments\\n */\\ncontract MCPPaymentGateway is Ownable, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n    \\n    // MCP Service structure\\n    struct MCPService {\\n        string serviceName;\\n        address provider;\\n        string[] acceptedTokens;\\n        uint256 baseFee;\\n        uint32[] supportedChains;\\n        bool isActive;\\n        uint256 totalEarned;\\n        uint256 requestsServed;\\n    }\\n    \\n    // Payment request from MCP\\n    struct MCPPaymentRequest {\\n        bytes32 requestId;\\n        address mcp;\\n        address payer;\\n        string requestedToken;\\n        uint256 amount;\\n        uint32 targetChain;\\n        bytes serviceData;\\n        uint256 timestamp;\\n        RequestStatus status;\\n    }\\n    \\n    enum RequestStatus {\\n        Pending,\\n        Processing,\\n        Paid,\\n        Failed,\\n        Refunded\\n    }\\n    \\n    // State variables\\n    IX402PaymentRouter public paymentRouter;\\n    IHiveMindCoordinator public hiveMindCoordinator;\\n    IERC20 public pyusd;\\n    \\n    // MCP registry\\n    mapping(address => MCPService) public mcpServices;\\n    mapping(bytes32 => MCPPaymentRequest) public paymentRequests;\\n    mapping(address => bytes32[]) public mcpRequestHistory;\\n    mapping(string => address[]) public tokenToMCPs; // Token symbol => MCPs accepting it\\n    \\n    // Service discovery\\n    address[] public registeredMCPs;\\n    mapping(string => bool) public supportedTokens;\\n    \\n    // Events\\n    event MCPRegistered(\\n        address indexed mcp,\\n        string serviceName,\\n        string[] acceptedTokens,\\n        uint256 baseFee\\n    );\\n    \\n    event PaymentRequested(\\n        bytes32 indexed requestId,\\n        address indexed mcp,\\n        address indexed payer,\\n        string requestedToken,\\n        uint256 amount\\n    );\\n    \\n    event PaymentProcessed(\\n        bytes32 indexed requestId,\\n        address mcp,\\n        string token,\\n        uint256 amount,\\n        uint32 chain\\n    );\\n    \\n    event ServiceDiscoveryUpdated(\\n        address indexed mcp,\\n        string[] tokens,\\n        uint32[] chains\\n    );\\n    \\n    constructor(\\n        address _paymentRouter,\\n        address _hiveMindCoordinator,\\n        address _pyusd\\n    ) Ownable(msg.sender) {\\n        paymentRouter = IX402PaymentRouter(_paymentRouter);\\n        hiveMindCoordinator = IHiveMindCoordinator(_hiveMindCoordinator);\\n        pyusd = IERC20(_pyusd);\\n        \\n        _initializeSupportedTokens();\\n    }\\n    \\n    /**\\n     * @notice Initialize commonly supported tokens\\n     */\\n    function _initializeSupportedTokens() private {\\n        supportedTokens[\\\"PYUSD\\\"] = true;\\n        supportedTokens[\\\"USDC\\\"] = true;\\n        supportedTokens[\\\"USDT\\\"] = true;\\n        supportedTokens[\\\"DAI\\\"] = true;\\n    }\\n    \\n    /**\\n     * @notice Register MCP service\\n     * @param _serviceName Name of the MCP service\\n     * @param _acceptedTokens Array of accepted token symbols\\n     * @param _baseFee Base fee for the service\\n     * @param _supportedChains Array of supported chain IDs\\n     */\\n    function registerMCP(\\n        string memory _serviceName,\\n        string[] memory _acceptedTokens,\\n        uint256 _baseFee,\\n        uint32[] memory _supportedChains\\n    ) external {\\n        require(bytes(_serviceName).length > 0, \\\"Invalid service name\\\");\\n        require(_acceptedTokens.length > 0, \\\"No tokens specified\\\");\\n        require(_baseFee > 0, \\\"Invalid base fee\\\");\\n        require(_supportedChains.length > 0, \\\"No chains specified\\\");\\n        \\n        MCPService storage mcp = mcpServices[msg.sender];\\n        mcp.serviceName = _serviceName;\\n        mcp.provider = msg.sender;\\n        mcp.acceptedTokens = _acceptedTokens;\\n        mcp.baseFee = _baseFee;\\n        mcp.supportedChains = _supportedChains;\\n        mcp.isActive = true;\\n        \\n        // Register with payment router\\n        paymentRouter.registerService(_serviceName, msg.sender, _baseFee);\\n        \\n        // Update token mappings\\n        for (uint i = 0; i < _acceptedTokens.length; i++) {\\n            tokenToMCPs[_acceptedTokens[i]].push(msg.sender);\\n        }\\n        \\n        // Register as agent in HiveMind\\n        string[] memory capabilities = new string[](1);\\n        capabilities[0] = _serviceName;\\n        hiveMindCoordinator.registerAgent(\\n            string(abi.encodePacked(\\\"mcp://\\\", _serviceName)),\\n            capabilities\\n        );\\n        \\n        registeredMCPs.push(msg.sender);\\n        \\n        emit MCPRegistered(msg.sender, _serviceName, _acceptedTokens, _baseFee);\\n        emit ServiceDiscoveryUpdated(msg.sender, _acceptedTokens, _supportedChains);\\n    }\\n    \\n    /**\\n     * @notice Request payment for MCP service\\n     * @param _mcp MCP service provider address\\n     * @param _requestedToken Token requested by MCP\\n     * @param _amount Payment amount\\n     * @param _targetChain Target chain for payment\\n     * @param _serviceData Additional service data\\n     */\\n    function requestMCPPayment(\\n        address _mcp,\\n        string memory _requestedToken,\\n        uint256 _amount,\\n        uint32 _targetChain,\\n        bytes calldata _serviceData\\n    ) external payable nonReentrant returns (bytes32 requestId) {\\n        MCPService memory mcp = mcpServices[_mcp];\\n        require(mcp.isActive, \\\"MCP not active\\\");\\n        require(_amount >= mcp.baseFee, \\\"Amount below base fee\\\");\\n        require(_isTokenAccepted(_mcp, _requestedToken), \\\"Token not accepted\\\");\\n        require(_isChainSupported(_mcp, _targetChain), \\\"Chain not supported\\\");\\n        \\n        // Generate request ID\\n        requestId = keccak256(\\n            abi.encodePacked(\\n                msg.sender,\\n                _mcp,\\n                _requestedToken,\\n                _amount,\\n                _targetChain,\\n                block.timestamp\\n            )\\n        );\\n        \\n        // Create payment request\\n        paymentRequests[requestId] = MCPPaymentRequest({\\n            requestId: requestId,\\n            mcp: _mcp,\\n            payer: msg.sender,\\n            requestedToken: _requestedToken,\\n            amount: _amount,\\n            targetChain: _targetChain,\\n            serviceData: _serviceData,\\n            timestamp: block.timestamp,\\n            status: RequestStatus.Processing\\n        });\\n        \\n        mcpRequestHistory[_mcp].push(requestId);\\n        \\n        emit PaymentRequested(requestId, _mcp, msg.sender, _requestedToken, _amount);\\n        \\n        // Process payment through router\\n        _processPayment(requestId);\\n        \\n        return requestId;\\n    }\\n    \\n    /**\\n     * @notice Process payment through x402 router\\n     */\\n    function _processPayment(bytes32 _requestId) private {\\n        MCPPaymentRequest storage request = paymentRequests[_requestId];\\n        \\n        // Transfer PYUSD from payer\\n        pyusd.safeTransferFrom(request.payer, address(this), request.amount);\\n        \\n        // Approve router (reset allowance first for safety)\\n        pyusd.safeIncreaseAllowance(address(paymentRouter), request.amount);\\n        \\n        // Route payment with automatic swap if needed\\n        bytes32 routerRequestId = paymentRouter.requestPayment{value: msg.value}(\\n            request.mcp,\\n            request.amount,\\n            request.requestedToken,\\n            request.targetChain,\\n            request.serviceData\\n        );\\n        \\n        // Update status\\n        request.status = RequestStatus.Paid;\\n        \\n        // Update MCP stats\\n        MCPService storage mcp = mcpServices[request.mcp];\\n        mcp.totalEarned += request.amount;\\n        mcp.requestsServed++;\\n        \\n        emit PaymentProcessed(\\n            _requestId,\\n            request.mcp,\\n            request.requestedToken,\\n            request.amount,\\n            request.targetChain\\n        );\\n    }\\n    \\n    /**\\n     * @notice Check if token is accepted by MCP\\n     */\\n    function _isTokenAccepted(address _mcp, string memory _token) \\n        private \\n        view \\n        returns (bool) \\n    {\\n        MCPService memory mcp = mcpServices[_mcp];\\n        for (uint i = 0; i < mcp.acceptedTokens.length; i++) {\\n            if (keccak256(bytes(mcp.acceptedTokens[i])) == keccak256(bytes(_token))) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n    \\n    /**\\n     * @notice Check if chain is supported by MCP\\n     */\\n    function _isChainSupported(address _mcp, uint32 _chain) \\n        private \\n        view \\n        returns (bool) \\n    {\\n        MCPService memory mcp = mcpServices[_mcp];\\n        for (uint i = 0; i < mcp.supportedChains.length; i++) {\\n            if (mcp.supportedChains[i] == _chain) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n    \\n    /**\\n     * @notice Get MCPs accepting specific token\\n     */\\n    function getMCPsByToken(string memory _token) \\n        external \\n        view \\n        returns (address[] memory) \\n    {\\n        return tokenToMCPs[_token];\\n    }\\n    \\n    /**\\n     * @notice Get MCP service details\\n     */\\n    function getMCPService(address _mcp) \\n        external \\n        view \\n        returns (MCPService memory) \\n    {\\n        return mcpServices[_mcp];\\n    }\\n    \\n    /**\\n     * @notice Get payment request details\\n     */\\n    function getPaymentRequest(bytes32 _requestId) \\n        external \\n        view \\n        returns (MCPPaymentRequest memory) \\n    {\\n        return paymentRequests[_requestId];\\n    }\\n    \\n    /**\\n     * @notice Get MCP request history\\n     */\\n    function getMCPRequestHistory(address _mcp) \\n        external \\n        view \\n        returns (bytes32[] memory) \\n    {\\n        return mcpRequestHistory[_mcp];\\n    }\\n    \\n    /**\\n     * @notice Update MCP service fee\\n     */\\n    function updateServiceFee(uint256 _newFee) external {\\n        require(_newFee > 0, \\\"Invalid fee\\\");\\n        MCPService storage mcp = mcpServices[msg.sender];\\n        require(mcp.isActive, \\\"MCP not registered\\\");\\n        \\n        mcp.baseFee = _newFee;\\n    }\\n    \\n    /**\\n     * @notice Add accepted token\\n     */\\n    function addAcceptedToken(string memory _token) external {\\n        MCPService storage mcp = mcpServices[msg.sender];\\n        require(mcp.isActive, \\\"MCP not registered\\\");\\n        require(supportedTokens[_token], \\\"Token not supported\\\");\\n        \\n        mcp.acceptedTokens.push(_token);\\n        tokenToMCPs[_token].push(msg.sender);\\n    }\\n    \\n    /**\\n     * @notice Add supported chain\\n     */\\n    function addSupportedChain(uint32 _chain) external {\\n        MCPService storage mcp = mcpServices[msg.sender];\\n        require(mcp.isActive, \\\"MCP not registered\\\");\\n        \\n        mcp.supportedChains.push(_chain);\\n    }\\n    \\n    /**\\n     * @notice Deactivate MCP service\\n     */\\n    function deactivateMCP() external {\\n        MCPService storage mcp = mcpServices[msg.sender];\\n        require(mcp.isActive, \\\"MCP not active\\\");\\n        \\n        mcp.isActive = false;\\n    }\\n    \\n    /**\\n     * @notice Get all registered MCPs\\n     */\\n    function getRegisteredMCPs() external view returns (address[] memory) {\\n        return registeredMCPs;\\n    }\\n    \\n    /**\\n     * @notice Update router address\\n     */\\n    function updatePaymentRouter(address _newRouter) external onlyOwner {\\n        paymentRouter = IX402PaymentRouter(_newRouter);\\n    }\\n    \\n    /**\\n     * @notice Emergency withdrawal\\n     */\\n    function emergencyWithdraw(address _token, uint256 _amount) external onlyOwner {\\n        IERC20(_token).safeTransfer(owner(), _amount);\\n    }\\n}\"\n    },\n    \"contracts/MockPYUSD.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title MockPYUSD\\n * @notice Mock PayPal USD stablecoin for testing x402 payments\\n * @dev Implements standard ERC20 with minting capability for testing\\n */\\ncontract MockPYUSD is ERC20, Ownable {\\n    uint8 private constant DECIMALS = 6; // PYUSD uses 6 decimals like USDC\\n    \\n    mapping(address => bool) public minters;\\n    mapping(address => uint256) public dailyMintLimit;\\n    mapping(address => uint256) public dailyMinted;\\n    mapping(address => uint256) public lastMintDay;\\n    \\n    event MinterAdded(address indexed minter, uint256 dailyLimit);\\n    event MinterRemoved(address indexed minter);\\n    event EmergencyMint(address indexed to, uint256 amount);\\n    \\n    constructor() ERC20(\\\"PayPal USD\\\", \\\"PYUSD\\\") Ownable(msg.sender) {\\n        // Mint initial supply for testing\\n        _mint(msg.sender, 1000000 * 10**DECIMALS); // 1M PYUSD\\n    }\\n    \\n    function decimals() public pure override returns (uint8) {\\n        return DECIMALS;\\n    }\\n    \\n    /**\\n     * @notice Add a minter with daily limit\\n     * @param minter Address to grant minting permission\\n     * @param limit Daily minting limit in PYUSD\\n     */\\n    function addMinter(address minter, uint256 limit) external onlyOwner {\\n        minters[minter] = true;\\n        dailyMintLimit[minter] = limit * 10**DECIMALS;\\n        emit MinterAdded(minter, limit);\\n    }\\n    \\n    /**\\n     * @notice Remove minter permission\\n     * @param minter Address to revoke minting permission\\n     */\\n    function removeMinter(address minter) external onlyOwner {\\n        minters[minter] = false;\\n        emit MinterRemoved(minter);\\n    }\\n    \\n    /**\\n     * @notice Mint PYUSD within daily limit\\n     * @param to Recipient address\\n     * @param amount Amount to mint (with decimals)\\n     */\\n    function mint(address to, uint256 amount) external {\\n        require(minters[msg.sender], \\\"Not a minter\\\");\\n        \\n        uint256 today = block.timestamp / 1 days;\\n        if (lastMintDay[msg.sender] < today) {\\n            dailyMinted[msg.sender] = 0;\\n            lastMintDay[msg.sender] = today;\\n        }\\n        \\n        require(\\n            dailyMinted[msg.sender] + amount <= dailyMintLimit[msg.sender],\\n            \\\"Daily limit exceeded\\\"\\n        );\\n        \\n        dailyMinted[msg.sender] += amount;\\n        _mint(to, amount);\\n    }\\n    \\n    /**\\n     * @notice Emergency mint by owner (for testing)\\n     * @param to Recipient address\\n     * @param amount Amount to mint\\n     */\\n    function emergencyMint(address to, uint256 amount) external onlyOwner {\\n        _mint(to, amount);\\n        emit EmergencyMint(to, amount);\\n    }\\n    \\n    /**\\n     * @notice Burn PYUSD tokens\\n     * @param amount Amount to burn\\n     */\\n    function burn(uint256 amount) external {\\n        _burn(msg.sender, amount);\\n    }\\n    \\n    /**\\n     * @notice Get formatted balance (for UI display)\\n     * @param account Address to check\\n     * @return balance Balance without decimals\\n     */\\n    function getFormattedBalance(address account) external view returns (uint256) {\\n        return balanceOf(account) / 10**DECIMALS;\\n    }\\n}\"\n    },\n    \"contracts/MockUSDC.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title MockUSDC\\n * @notice Mock USDC token for testing\\n */\\ncontract MockUSDC is ERC20, Ownable {\\n    constructor() ERC20(\\\"Mock USDC\\\", \\\"USDC\\\") Ownable(msg.sender) {\\n        // Mint initial supply to deployer\\n        _mint(msg.sender, 1000000 * 10**6); // 1M USDC (6 decimals)\\n    }\\n    \\n    function decimals() public pure override returns (uint8) {\\n        return 6;\\n    }\\n    \\n    function mint(address to, uint256 amount) public onlyOwner {\\n        _mint(to, amount);\\n    }\\n    \\n    function burn(uint256 amount) public {\\n        _burn(msg.sender, amount);\\n    }\\n}\"\n    },\n    \"contracts/PYUSDOFTAdapter.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./base/OFTCore.sol\\\";\\n\\n/**\\n * @title PYUSDOFTAdapter\\n * @notice LayerZero OFT Adapter for PYUSD enabling cross-chain transfers\\n * @dev Maintains 6 decimal precision across all chains for PYUSD\\n */\\ncontract PYUSDOFTAdapter is OFTCore {\\n    using SafeERC20 for IERC20;\\n    \\n    IERC20 public immutable pyusdToken;\\n    uint8 public constant SHARED_DECIMALS = 6;\\n    \\n    // Chain configuration\\n    mapping(uint32 => address) public chainTokenAddresses;\\n    mapping(uint32 => bool) public supportedChains;\\n    \\n    // Events\\n    event ChainConfigured(uint32 indexed eid, address tokenAddress);\\n    event CrossChainTransferInitiated(\\n        address indexed sender,\\n        uint32 indexed dstEid,\\n        address indexed recipient,\\n        uint256 amount\\n    );\\n    \\n    constructor(\\n        address _pyusd,\\n        address _lzEndpoint,\\n        address _delegate\\n    ) OFTCore(SHARED_DECIMALS, _lzEndpoint, _delegate) {\\n        pyusdToken = IERC20(_pyusd);\\n        \\n        // Configure supported chains\\n        _configureChains();\\n    }\\n    \\n    /**\\n     * @notice Configure supported chains for PYUSD transfers\\n     */\\n    function _configureChains() private {\\n        // Base\\n        supportedChains[30184] = true;\\n        chainTokenAddresses[30184] = address(pyusdToken);\\n        \\n        // Arbitrum\\n        supportedChains[30110] = true;\\n        chainTokenAddresses[30110] = address(pyusdToken);\\n        \\n        // Ethereum\\n        supportedChains[30101] = true;\\n        chainTokenAddresses[30101] = address(pyusdToken);\\n        \\n        // Optimism\\n        supportedChains[30111] = true;\\n        chainTokenAddresses[30111] = address(pyusdToken);\\n    }\\n    \\n    /**\\n     * @notice Lock tokens for cross-chain transfer\\n     */\\n    function _debit(\\n        uint256 _amountLD,\\n        uint256 _minAmountLD,\\n        uint32 _dstEid\\n    ) internal override returns (uint256 amountSentLD, uint256 amountReceivedLD) {\\n        require(supportedChains[_dstEid], \\\"Destination chain not supported\\\");\\n        \\n        // Transfer PYUSD from sender to this contract\\n        pyusdToken.safeTransferFrom(msg.sender, address(this), _amountLD);\\n        \\n        // Convert to shared decimals (already 6 for PYUSD)\\n        amountSentLD = _amountLD;\\n        amountReceivedLD = _amountLD;\\n        \\n        emit CrossChainTransferInitiated(msg.sender, _dstEid, msg.sender, _amountLD);\\n        \\n        return (amountSentLD, amountReceivedLD);\\n    }\\n    \\n    /**\\n     * @notice Release tokens after receiving cross-chain message\\n     */\\n    function _credit(\\n        address _to,\\n        uint256 _amountLD,\\n        uint32 _srcEid\\n    ) internal override returns (uint256 amountReceivedLD) {\\n        require(supportedChains[_srcEid], \\\"Source chain not supported\\\");\\n        \\n        // Transfer PYUSD to recipient\\n        pyusdToken.safeTransfer(_to, _amountLD);\\n        \\n        return _amountLD;\\n    }\\n    \\n    /**\\n     * @notice Send PYUSD cross-chain\\n     */\\n    function sendPYUSD(\\n        uint32 _dstEid,\\n        bytes32 _to,\\n        uint256 _amountLD,\\n        bytes calldata _options\\n    ) external payable {\\n        require(supportedChains[_dstEid], \\\"Destination not supported\\\");\\n        \\n        _send(\\n            SendParam({\\n                dstEid: _dstEid,\\n                to: _to,\\n                amountLD: _amountLD,\\n                minAmountLD: _amountLD * 99 / 100, // 1% slippage\\n                extraOptions: _options,\\n                composeMsg: \\\"\\\",\\n                oftCmd: \\\"\\\"\\n            }),\\n            MessagingFee(msg.value, 0),\\n            msg.sender\\n        );\\n    }\\n    \\n    /**\\n     * @notice Quote fee for cross-chain transfer\\n     */\\n    function quoteSend(\\n        uint32 _dstEid,\\n        uint256 _amountLD,\\n        bytes calldata _options\\n    ) external view returns (MessagingFee memory fee) {\\n        return _quote(\\n            SendParam({\\n                dstEid: _dstEid,\\n                to: bytes32(uint256(uint160(msg.sender))),\\n                amountLD: _amountLD,\\n                minAmountLD: _amountLD * 99 / 100,\\n                extraOptions: _options,\\n                composeMsg: \\\"\\\",\\n                oftCmd: \\\"\\\"\\n            }),\\n            false\\n        );\\n    }\\n    \\n    /**\\n     * @notice Add support for new chain\\n     */\\n    function addSupportedChain(uint32 _eid, address _tokenAddress) external onlyOwner {\\n        supportedChains[_eid] = true;\\n        chainTokenAddresses[_eid] = _tokenAddress;\\n        emit ChainConfigured(_eid, _tokenAddress);\\n    }\\n    \\n    /**\\n     * @notice Emergency token recovery\\n     */\\n    function recoverTokens(address _token, uint256 _amount) external onlyOwner {\\n        IERC20(_token).safeTransfer(owner(), _amount);\\n    }\\n}\"\n    },\n    \"contracts/SimplePYUSDRouter.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\n\\n/**\\n * @title SimplePYUSDRouter\\n * @notice Simplified cross-chain PYUSD payment router for x402 services\\n * @dev Handles PYUSD payments and cross-chain routing via LayerZero\\n */\\ncontract SimplePYUSDRouter is Ownable, ReentrancyGuard {\\n    // State variables\\n    IERC20 public immutable pyusd;\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    \\n    // Chain configuration\\n    mapping(uint32 => address) public trustedRemotes;\\n    mapping(uint32 => bool) public supportedChains;\\n    \\n    // Service registry\\n    struct Service {\\n        address provider;\\n        string endpoint;\\n        uint256 pricePerCall;\\n        address acceptedToken;\\n        bool active;\\n    }\\n    \\n    mapping(bytes32 => Service) public services;\\n    mapping(address => bytes32[]) public providerServices;\\n    \\n    // Payment tracking\\n    struct Payment {\\n        bytes32 serviceId;\\n        address payer;\\n        uint256 amount;\\n        uint32 destinationChain;\\n        uint256 timestamp;\\n        bool completed;\\n    }\\n    \\n    mapping(bytes32 => Payment) public payments;\\n    uint256 public paymentCounter;\\n    \\n    // Events\\n    event ServiceRegistered(bytes32 indexed serviceId, address indexed provider, uint256 price);\\n    event PaymentInitiated(bytes32 indexed paymentId, bytes32 indexed serviceId, address payer, uint256 amount);\\n    event CrossChainPaymentSent(bytes32 indexed paymentId, uint32 destinationChain, bytes32 guid);\\n    event PaymentCompleted(bytes32 indexed paymentId);\\n    \\n    constructor(address _pyusd, address _lzEndpoint) Ownable(msg.sender) {\\n        pyusd = IERC20(_pyusd);\\n        lzEndpoint = ILayerZeroEndpoint(_lzEndpoint);\\n    }\\n    \\n    /**\\n     * @notice Register a new x402 service\\n     */\\n    function registerService(\\n        string calldata endpoint,\\n        uint256 pricePerCall,\\n        address acceptedToken\\n    ) external returns (bytes32 serviceId) {\\n        serviceId = keccak256(abi.encodePacked(msg.sender, endpoint, block.timestamp));\\n        \\n        services[serviceId] = Service({\\n            provider: msg.sender,\\n            endpoint: endpoint,\\n            pricePerCall: pricePerCall,\\n            acceptedToken: acceptedToken,\\n            active: true\\n        });\\n        \\n        providerServices[msg.sender].push(serviceId);\\n        emit ServiceRegistered(serviceId, msg.sender, pricePerCall);\\n    }\\n    \\n    /**\\n     * @notice Pay for a service with PYUSD\\n     */\\n    function payForService(\\n        bytes32 serviceId,\\n        uint32 destinationChain\\n    ) external payable nonReentrant returns (bytes32 paymentId) {\\n        Service memory service = services[serviceId];\\n        require(service.active, \\\"Service not active\\\");\\n        \\n        // Transfer PYUSD from payer\\n        require(\\n            pyusd.transferFrom(msg.sender, address(this), service.pricePerCall),\\n            \\\"PYUSD transfer failed\\\"\\n        );\\n        \\n        // Create payment record\\n        paymentId = keccak256(abi.encodePacked(paymentCounter++, msg.sender, block.timestamp));\\n        payments[paymentId] = Payment({\\n            serviceId: serviceId,\\n            payer: msg.sender,\\n            amount: service.pricePerCall,\\n            destinationChain: destinationChain,\\n            timestamp: block.timestamp,\\n            completed: false\\n        });\\n        \\n        emit PaymentInitiated(paymentId, serviceId, msg.sender, service.pricePerCall);\\n        \\n        // If cross-chain, initiate LayerZero transfer\\n        if (destinationChain != 0 && destinationChain != block.chainid) {\\n            _sendCrossChainPayment(paymentId, service, destinationChain);\\n        } else {\\n            // Direct payment on same chain\\n            _completePayment(paymentId, service);\\n        }\\n    }\\n    \\n    /**\\n     * @notice Send cross-chain payment via LayerZero\\n     */\\n    function _sendCrossChainPayment(\\n        bytes32 paymentId,\\n        Service memory service,\\n        uint32 destinationChain\\n    ) private {\\n        require(supportedChains[destinationChain], \\\"Chain not supported\\\");\\n        require(trustedRemotes[destinationChain] != address(0), \\\"Remote not set\\\");\\n        \\n        // Encode payment message\\n        bytes memory payload = abi.encode(\\n            paymentId,\\n            service.provider,\\n            service.pricePerCall,\\n            service.acceptedToken\\n        );\\n        \\n        // Prepare LayerZero message\\n        ILayerZeroEndpoint.MessagingParams memory params = ILayerZeroEndpoint.MessagingParams({\\n            dstEid: destinationChain,\\n            receiver: bytes32(uint256(uint160(trustedRemotes[destinationChain]))),\\n            message: payload,\\n            options: abi.encodePacked(uint16(1), uint256(200000)), // Gas limit\\n            payInLzToken: false\\n        });\\n        \\n        // Quote and send\\n        ILayerZeroEndpoint.MessagingFee memory fee = lzEndpoint.quote(params, address(this));\\n        require(msg.value >= fee.nativeFee, \\\"Insufficient fee\\\");\\n        \\n        ILayerZeroEndpoint.MessagingReceipt memory receipt = lzEndpoint.send{value: fee.nativeFee}(\\n            params,\\n            msg.sender\\n        );\\n        \\n        emit CrossChainPaymentSent(paymentId, destinationChain, receipt.guid);\\n    }\\n    \\n    /**\\n     * @notice Complete payment on current chain\\n     */\\n    function _completePayment(bytes32 paymentId, Service memory service) private {\\n        // Transfer to service provider\\n        require(\\n            pyusd.transfer(service.provider, service.pricePerCall),\\n            \\\"Provider payment failed\\\"\\n        );\\n        \\n        payments[paymentId].completed = true;\\n        emit PaymentCompleted(paymentId);\\n    }\\n    \\n    /**\\n     * @notice Receive cross-chain message from LayerZero\\n     */\\n    function lzReceive(\\n        ILayerZeroEndpoint.Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external {\\n        require(msg.sender == address(lzEndpoint), \\\"Invalid endpoint\\\");\\n        require(trustedRemotes[_origin.srcEid] != address(0), \\\"Untrusted source\\\");\\n        \\n        // Decode and process payment\\n        (bytes32 paymentId, address provider, uint256 amount, address token) = \\n            abi.decode(_message, (bytes32, address, uint256, address));\\n        \\n        // Handle token swap if needed\\n        if (token != address(pyusd)) {\\n            // Swap PYUSD to requested token\\n            _swapAndTransfer(provider, amount, token);\\n        } else {\\n            // Direct PYUSD transfer\\n            require(pyusd.transfer(provider, amount), \\\"Transfer failed\\\");\\n        }\\n        \\n        emit PaymentCompleted(paymentId);\\n    }\\n    \\n    /**\\n     * @notice Swap PYUSD to requested token and transfer\\n     */\\n    function _swapAndTransfer(address recipient, uint256 amount, address targetToken) private {\\n        // Simplified swap logic - in production would integrate with DEX\\n        // For now, just transfer PYUSD\\n        require(pyusd.transfer(recipient, amount), \\\"Transfer failed\\\");\\n    }\\n    \\n    // Admin functions\\n    function setTrustedRemote(uint32 _chainId, address _remote) external onlyOwner {\\n        trustedRemotes[_chainId] = _remote;\\n        supportedChains[_chainId] = true;\\n    }\\n    \\n    function withdrawStuckTokens(address token, uint256 amount) external onlyOwner {\\n        IERC20(token).transfer(owner(), amount);\\n    }\\n}\"\n    },\n    \"contracts/TestContract.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\ncontract TestContract {\\n    string public name = \\\"Test\\\";\\n    \\n    function getName() public view returns (string memory) {\\n        return name;\\n    }\\n}\"\n    },\n    \"contracts/TokenSwapComposer.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n// LayerZero interfaces\\n\\n/**\\n * @title TokenSwapComposer\\n * @notice LayerZero Composer for automatic token swaps after cross-chain transfers\\n * @dev Receives PYUSD via LayerZero and swaps to requested token\\n */\\ninterface IOAppComposer {\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\\ninterface ILayerZeroEndpointV2 {\\n    function send(\\n        uint32 _dstEid,\\n        bytes calldata _message,\\n        bytes calldata _options\\n    ) external payable returns (bytes32);\\n}\\n\\ncontract TokenSwapComposer is IOAppComposer, Ownable {\\n    using SafeERC20 for IERC20;\\n    \\n    ILayerZeroEndpointV2 public immutable endpoint;\\n    address public immutable pyusd;\\n    \\n    // Swap configuration\\n    mapping(address => address) public swapRouters; // token => DEX router\\n    mapping(address => bool) public supportedTokens;\\n    mapping(bytes32 => address) public oAppRegistry;\\n    \\n    // Events\\n    event SwapExecuted(\\n        address indexed recipient,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut\\n    );\\n    \\n    event OAppRegistered(bytes32 indexed oApp, address indexed implementation);\\n    \\n    constructor(\\n        address _endpoint,\\n        address _pyusd,\\n        address _owner\\n    ) Ownable(_owner) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n        pyusd = _pyusd;\\n        \\n        // Configure default supported tokens\\n        _configureSupportedTokens();\\n    }\\n    \\n    /**\\n     * @notice Configure default supported tokens and DEX routers\\n     */\\n    function _configureSupportedTokens() private {\\n        // USDC\\n        supportedTokens[0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48] = true;\\n        // USDT\\n        supportedTokens[0xdAC17F958D2ee523a2206206994597C13D831ec7] = true;\\n        // WETH\\n        supportedTokens[0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2] = true;\\n    }\\n    \\n    /**\\n     * @notice Compose receiver for LayerZero messages\\n     */\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable override {\\n        require(msg.sender == address(endpoint), \\\"Only endpoint\\\");\\n        require(oAppRegistry[bytes32(uint256(uint160(_from)))] != address(0), \\\"Unknown OApp\\\");\\n        \\n        // Decode the composed message\\n        (\\n            address recipient,\\n            uint256 amountLD,\\n            address targetToken,\\n            uint256 minAmountOut\\n        ) = abi.decode(_message, (address, uint256, address, uint256));\\n        \\n        // Execute the swap\\n        _executeSwap(recipient, amountLD, targetToken, minAmountOut);\\n    }\\n    \\n    /**\\n     * @notice Execute token swap from PYUSD to target token\\n     */\\n    function _executeSwap(\\n        address recipient,\\n        uint256 amountIn,\\n        address targetToken,\\n        uint256 minAmountOut\\n    ) private {\\n        require(supportedTokens[targetToken], \\\"Token not supported\\\");\\n        \\n        if (targetToken == pyusd) {\\n            // No swap needed, direct transfer\\n            IERC20(pyusd).safeTransfer(recipient, amountIn);\\n            emit SwapExecuted(recipient, pyusd, pyusd, amountIn, amountIn);\\n            return;\\n        }\\n        \\n        // Get DEX router for target token\\n        address router = swapRouters[targetToken];\\n        require(router != address(0), \\\"No router configured\\\");\\n        \\n        // Approve router to spend PYUSD\\n        IERC20(pyusd).safeIncreaseAllowance(router, amountIn);\\n        \\n        // Execute swap (simplified - would integrate with actual DEX)\\n        uint256 amountOut = _performSwap(router, pyusd, targetToken, amountIn, minAmountOut);\\n        \\n        // Transfer swapped tokens to recipient\\n        IERC20(targetToken).safeTransfer(recipient, amountOut);\\n        \\n        emit SwapExecuted(recipient, pyusd, targetToken, amountIn, amountOut);\\n    }\\n    \\n    /**\\n     * @notice Perform actual swap on DEX\\n     */\\n    function _performSwap(\\n        address router,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 minAmountOut\\n    ) private returns (uint256 amountOut) {\\n        // Simplified swap logic - in production would call actual DEX\\n        // For demo, return minAmountOut\\n        return minAmountOut;\\n    }\\n    \\n    /**\\n     * @notice Register OApp for composition\\n     */\\n    function registerOApp(bytes32 _oApp, address _implementation) external onlyOwner {\\n        oAppRegistry[_oApp] = _implementation;\\n        emit OAppRegistered(_oApp, _implementation);\\n    }\\n    \\n    /**\\n     * @notice Add supported token\\n     */\\n    function addSupportedToken(address _token, address _router) external onlyOwner {\\n        supportedTokens[_token] = true;\\n        swapRouters[_token] = _router;\\n    }\\n    \\n    /**\\n     * @notice Quote swap for planning\\n     */\\n    function quoteSwap(\\n        uint256 amountIn,\\n        address targetToken\\n    ) external view returns (uint256 expectedOut) {\\n        if (targetToken == pyusd) {\\n            return amountIn;\\n        }\\n        \\n        // In production, would query DEX for actual quote\\n        // For demo, return 1:1 ratio with 1% slippage\\n        return amountIn * 99 / 100;\\n    }\\n    \\n    /**\\n     * @notice Emergency token recovery\\n     */\\n    function recoverTokens(address _token, uint256 _amount) external onlyOwner {\\n        IERC20(_token).safeTransfer(owner(), _amount);\\n    }\\n}\"\n    },\n    \"contracts/X402PaymentRouter.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"./base/OApp.sol\\\";\\n\\n/**\\n * @title X402PaymentRouter\\n * @notice Main payment router for x402 microservices with LayerZero integration\\n * @dev Routes PYUSD payments cross-chain with automatic token swapping\\n */\\ncontract X402PaymentRouter is OApp, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n    \\n    // Core components\\n    IERC20 public immutable pyusd;\\n    address public tokenSwapComposer;\\n    address public pyusdOFTAdapter;\\n    \\n    // Service registry\\n    struct Service {\\n        address provider;\\n        string endpoint;\\n        uint256 pricePerCall;\\n        address[] acceptedTokens;\\n        uint32[] supportedChains;\\n        bool active;\\n    }\\n    \\n    struct PaymentRequest {\\n        bytes32 serviceId;\\n        address payer;\\n        address serviceProvider;\\n        uint256 amount;\\n        address requestedToken;\\n        uint32 destinationChain;\\n        uint256 timestamp;\\n        bool completed;\\n    }\\n    \\n    // State\\n    mapping(bytes32 => Service) public services;\\n    mapping(address => bytes32[]) public providerServices;\\n    mapping(bytes32 => PaymentRequest) public paymentRequests;\\n    uint256 public requestCounter;\\n    \\n    // Events\\n    event ServiceRegistered(\\n        bytes32 indexed serviceId,\\n        address indexed provider,\\n        uint256 price\\n    );\\n    \\n    event PaymentRequested(\\n        bytes32 indexed requestId,\\n        bytes32 indexed serviceId,\\n        address payer,\\n        uint256 amount,\\n        address requestedToken,\\n        uint32 destinationChain\\n    );\\n    \\n    event PaymentCompleted(bytes32 indexed requestId);\\n    \\n    event CrossChainPaymentSent(\\n        bytes32 indexed requestId,\\n        uint32 destinationChain,\\n        bytes32 guid\\n    );\\n    \\n    constructor(\\n        address _pyusd,\\n        address _endpoint,\\n        address _delegate\\n    ) OApp(_endpoint, _delegate) {\\n        pyusd = IERC20(_pyusd);\\n    }\\n    \\n    /**\\n     * @notice Register x402 service\\n     */\\n    function registerService(\\n        string calldata _endpoint,\\n        uint256 _pricePerCall,\\n        address[] calldata _acceptedTokens,\\n        uint32[] calldata _supportedChains\\n    ) external returns (bytes32 serviceId) {\\n        serviceId = keccak256(abi.encodePacked(msg.sender, _endpoint, block.timestamp));\\n        \\n        services[serviceId] = Service({\\n            provider: msg.sender,\\n            endpoint: _endpoint,\\n            pricePerCall: _pricePerCall,\\n            acceptedTokens: _acceptedTokens,\\n            supportedChains: _supportedChains,\\n            active: true\\n        });\\n        \\n        providerServices[msg.sender].push(serviceId);\\n        emit ServiceRegistered(serviceId, msg.sender, _pricePerCall);\\n    }\\n    \\n    /**\\n     * @notice Request payment for x402 service\\n     */\\n    function requestPayment(\\n        bytes32 _serviceId,\\n        address _requestedToken,\\n        uint32 _destinationChain,\\n        bytes calldata _options\\n    ) external payable nonReentrant returns (bytes32 requestId) {\\n        Service memory service = services[_serviceId];\\n        require(service.active, \\\"Service not active\\\");\\n        require(_isTokenAccepted(service, _requestedToken), \\\"Token not accepted\\\");\\n        require(_isChainSupported(service, _destinationChain), \\\"Chain not supported\\\");\\n        \\n        // Transfer PYUSD from payer\\n        pyusd.safeTransferFrom(msg.sender, address(this), service.pricePerCall);\\n        \\n        // Create payment request\\n        requestId = keccak256(abi.encodePacked(requestCounter++, msg.sender, block.timestamp));\\n        paymentRequests[requestId] = PaymentRequest({\\n            serviceId: _serviceId,\\n            payer: msg.sender,\\n            serviceProvider: service.provider,\\n            amount: service.pricePerCall,\\n            requestedToken: _requestedToken,\\n            destinationChain: _destinationChain,\\n            timestamp: block.timestamp,\\n            completed: false\\n        });\\n        \\n        emit PaymentRequested(\\n            requestId,\\n            _serviceId,\\n            msg.sender,\\n            service.pricePerCall,\\n            _requestedToken,\\n            _destinationChain\\n        );\\n        \\n        // Route payment\\n        if (_requestedToken != address(pyusd) || _destinationChain != block.chainid) {\\n            _routeWithSwap(requestId, paymentRequests[requestId], _options);\\n        } else {\\n            _routeDirectPayment(requestId, paymentRequests[requestId]);\\n        }\\n    }\\n    \\n    /**\\n     * @notice Route payment with token swap via LayerZero\\n     */\\n    function _routeWithSwap(\\n        bytes32 requestId,\\n        PaymentRequest memory request,\\n        bytes calldata _options\\n    ) private {\\n        // Prepare composed message for swap\\n        bytes memory composeMsg = abi.encode(\\n            request.serviceProvider,\\n            request.amount,\\n            request.requestedToken,\\n            request.amount * 99 / 100 // 1% slippage\\n        );\\n        \\n        // Send via LayerZero with composition\\n        bytes32 guid = _lzSend(\\n            request.destinationChain,\\n            abi.encode(requestId, request.serviceProvider, request.amount),\\n            _options,\\n            MessagingFee(msg.value, 0),\\n            payable(msg.sender),\\n            composeMsg\\n        );\\n        \\n        emit CrossChainPaymentSent(requestId, request.destinationChain, guid);\\n    }\\n    \\n    /**\\n     * @notice Route direct PYUSD payment on same chain\\n     */\\n    function _routeDirectPayment(bytes32 requestId, PaymentRequest memory request) private {\\n        pyusd.safeTransfer(request.serviceProvider, request.amount);\\n        paymentRequests[requestId].completed = true;\\n        emit PaymentCompleted(requestId);\\n    }\\n    \\n    /**\\n     * @notice Receive cross-chain payment confirmation\\n     */\\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal override {\\n        (bytes32 requestId, address provider, uint256 amount) = \\n            abi.decode(_message, (bytes32, address, uint256));\\n        \\n        // Mark payment as completed\\n        paymentRequests[requestId].completed = true;\\n        emit PaymentCompleted(requestId);\\n    }\\n    \\n    /**\\n     * @notice Check if token is accepted by service\\n     */\\n    function _isTokenAccepted(\\n        Service memory service,\\n        address token\\n    ) private pure returns (bool) {\\n        for (uint i = 0; i < service.acceptedTokens.length; i++) {\\n            if (service.acceptedTokens[i] == token) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n    \\n    /**\\n     * @notice Check if chain is supported by service\\n     */\\n    function _isChainSupported(\\n        Service memory service,\\n        uint32 chainId\\n    ) private pure returns (bool) {\\n        for (uint i = 0; i < service.supportedChains.length; i++) {\\n            if (service.supportedChains[i] == chainId) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n    \\n    /**\\n     * @notice Quote cross-chain payment fee\\n     */\\n    function quotePayment(\\n        bytes32 _serviceId,\\n        uint32 _destinationChain,\\n        bytes calldata _options\\n    ) external view returns (MessagingFee memory fee) {\\n        Service memory service = services[_serviceId];\\n        \\n        return _quote(\\n            _destinationChain,\\n            abi.encode(_serviceId, service.provider, service.pricePerCall),\\n            _options,\\n            false\\n        );\\n    }\\n    \\n    /**\\n     * @notice Set token swap composer address\\n     */\\n    function setTokenSwapComposer(address _composer) external onlyOwner {\\n        tokenSwapComposer = _composer;\\n    }\\n    \\n    /**\\n     * @notice Set PYUSD OFT adapter address\\n     */\\n    function setPYUSDOFTAdapter(address _adapter) external onlyOwner {\\n        pyusdOFTAdapter = _adapter;\\n    }\\n    \\n    /**\\n     * @notice Update service status\\n     */\\n    function updateServiceStatus(bytes32 _serviceId, bool _active) external {\\n        require(services[_serviceId].provider == msg.sender, \\\"Not service owner\\\");\\n        services[_serviceId].active = _active;\\n    }\\n    \\n    /**\\n     * @notice Emergency token recovery\\n     */\\n    function recoverTokens(address _token, uint256 _amount) external onlyOwner {\\n        IERC20(_token).safeTransfer(owner(), _amount);\\n    }\\n}\"\n    }\n  },\n  \"settings\": {\n    \"optimizer\": {\n      \"enabled\": true,\n      \"runs\": 200\n    },\n    \"evmVersion\": \"paris\",\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
      "solcInputHash": "ae6eb21eb1f9879ea2d05131cef739be",
      "transactionHash": "0x66ab220fadd8879442cdf42d982b2216c9204b656c4e9ff0086a3df84768a58f",
      "args": [
        "0x0a6Df0DeB826002258f92D433f9DF68907C482A9",
        "0x6EDCE65403992e310A62460808c4b910D972f10f",
        "0x333774891681e69093bE0000b8f9Db0d280Ae6Ed"
      ]
    },
    "decoded": {
      "from": "0x333774891681e69093bE0000b8f9Db0d280Ae6Ed",
      "gasPrice": "20000000000",
      "gasLimit": "3000000",
      "to": null,
      "value": "0",
      "nonce": 5,
      "data": "",
      "r": "0x67678cbda9b9fd796facc4f9ee2019401afe1aa323f6d086a98c6e3b906b3de6",
      "s": "0x64443cc6f68d033101af5aa8344d1ca7551bfe0b427b07558b9b4da9d0e86cb1",
      "v": 22310258,
      "chainId": 11155111
    }
  }
}