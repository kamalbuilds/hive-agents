{
  "address": "0xAEAb897238015ce8d9C8a248B897D8aea3806795",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_endpoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pyusd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "oApp",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "OAppRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "SwapExecuted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "addSupportedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpointV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "lzCompose",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "oAppRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pyusd",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetToken",
          "type": "address"
        }
      ],
      "name": "quoteSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "expectedOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_oApp",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "registerOApp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "swapRouters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x81bcc892b3122ea0a20710394579c06d2d34e755861f802e82ef27e02775b359",
  "receipt": {
    "to": null,
    "from": "0x333774891681e69093bE0000b8f9Db0d280Ae6Ed",
    "contractAddress": "0xAEAb897238015ce8d9C8a248B897D8aea3806795",
    "transactionIndex": 121,
    "gasUsed": "887587",
    "logsBloom": "0x
    "blockHash": "0x2badc318bc3da10dac32ba4620d8af863dd457235f2ded66e32e1389eb700840",
    "transactionHash": "0x81bcc892b3122ea0a20710394579c06d2d34e755861f802e82ef27e02775b359",
    "logs": [
      {
        "transactionIndex": 121,
        "blockNumber": 9000756,
        "transactionHash": "0x81bcc892b3122ea0a20710394579c06d2d34e755861f802e82ef27e02775b359",
        "address": "0xAEAb897238015ce8d9C8a248B897D8aea3806795",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000333774891681e69093be0000b8f9db0d280ae6ed"
        ],
        "data": "0x",
        "logIndex": 179,
        "blockHash": "0x2badc318bc3da10dac32ba4620d8af863dd457235f2ded66e32e1389eb700840"
      }
    ],
    "blockNumber": 9000756,
    "cumulativeGasUsed": "17860001",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000",
    "0x8f8863423c13844c042Ef85708607D094a05B2bE",
    "0x333774891681e69093bE0000b8f9Db0d280Ae6Ed"
  ],
  "numDeployments": 1,
  "solcInputHash": "ae6eb21eb1f9879ea2d05131cef739be",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pyusd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"oApp\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"OAppRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"oAppRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pyusd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"}],\"name\":\"quoteSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"expectedOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_oApp\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"registerOApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapRouters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addSupportedToken(address,address)\":{\"notice\":\"Add supported token\"},\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"notice\":\"Compose receiver for LayerZero messages\"},\"quoteSwap(uint256,address)\":{\"notice\":\"Quote swap for planning\"},\"recoverTokens(address,uint256)\":{\"notice\":\"Emergency token recovery\"},\"registerOApp(bytes32,address)\":{\"notice\":\"Register OApp for composition\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenSwapComposer.sol\":\"TokenSwapComposer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/TokenSwapComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n// LayerZero interfaces\\n\\n/**\\n * @title TokenSwapComposer\\n * @notice LayerZero Composer for automatic token swaps after cross-chain transfers\\n * @dev Receives PYUSD via LayerZero and swaps to requested token\\n */\\ninterface IOAppComposer {\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\\ninterface ILayerZeroEndpointV2 {\\n    function send(\\n        uint32 _dstEid,\\n        bytes calldata _message,\\n        bytes calldata _options\\n    ) external payable returns (bytes32);\\n}\\n\\ncontract TokenSwapComposer is IOAppComposer, Ownable {\\n    using SafeERC20 for IERC20;\\n    \\n    ILayerZeroEndpointV2 public immutable endpoint;\\n    address public immutable pyusd;\\n    \\n    // Swap configuration\\n    mapping(address => address) public swapRouters; // token => DEX router\\n    mapping(address => bool) public supportedTokens;\\n    mapping(bytes32 => address) public oAppRegistry;\\n    \\n    // Events\\n    event SwapExecuted(\\n        address indexed recipient,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut\\n    );\\n    \\n    event OAppRegistered(bytes32 indexed oApp, address indexed implementation);\\n    \\n    constructor(\\n        address _endpoint,\\n        address _pyusd,\\n        address _owner\\n    ) Ownable(_owner) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n        pyusd = _pyusd;\\n        \\n        // Configure default supported tokens\\n        _configureSupportedTokens();\\n    }\\n    \\n    /**\\n     * @notice Configure default supported tokens and DEX routers\\n     */\\n    function _configureSupportedTokens() private {\\n        // USDC\\n        supportedTokens[0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48] = true;\\n        // USDT\\n        supportedTokens[0xdAC17F958D2ee523a2206206994597C13D831ec7] = true;\\n        // WETH\\n        supportedTokens[0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2] = true;\\n    }\\n    \\n    /**\\n     * @notice Compose receiver for LayerZero messages\\n     */\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable override {\\n        require(msg.sender == address(endpoint), \\\"Only endpoint\\\");\\n        require(oAppRegistry[bytes32(uint256(uint160(_from)))] != address(0), \\\"Unknown OApp\\\");\\n        \\n        // Decode the composed message\\n        (\\n            address recipient,\\n            uint256 amountLD,\\n            address targetToken,\\n            uint256 minAmountOut\\n        ) = abi.decode(_message, (address, uint256, address, uint256));\\n        \\n        // Execute the swap\\n        _executeSwap(recipient, amountLD, targetToken, minAmountOut);\\n    }\\n    \\n    /**\\n     * @notice Execute token swap from PYUSD to target token\\n     */\\n    function _executeSwap(\\n        address recipient,\\n        uint256 amountIn,\\n        address targetToken,\\n        uint256 minAmountOut\\n    ) private {\\n        require(supportedTokens[targetToken], \\\"Token not supported\\\");\\n        \\n        if (targetToken == pyusd) {\\n            // No swap needed, direct transfer\\n            IERC20(pyusd).safeTransfer(recipient, amountIn);\\n            emit SwapExecuted(recipient, pyusd, pyusd, amountIn, amountIn);\\n            return;\\n        }\\n        \\n        // Get DEX router for target token\\n        address router = swapRouters[targetToken];\\n        require(router != address(0), \\\"No router configured\\\");\\n        \\n        // Approve router to spend PYUSD\\n        IERC20(pyusd).safeIncreaseAllowance(router, amountIn);\\n        \\n        // Execute swap (simplified - would integrate with actual DEX)\\n        uint256 amountOut = _performSwap(router, pyusd, targetToken, amountIn, minAmountOut);\\n        \\n        // Transfer swapped tokens to recipient\\n        IERC20(targetToken).safeTransfer(recipient, amountOut);\\n        \\n        emit SwapExecuted(recipient, pyusd, targetToken, amountIn, amountOut);\\n    }\\n    \\n    /**\\n     * @notice Perform actual swap on DEX\\n     */\\n    function _performSwap(\\n        address router,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 minAmountOut\\n    ) private returns (uint256 amountOut) {\\n        // Simplified swap logic - in production would call actual DEX\\n        // For demo, return minAmountOut\\n        return minAmountOut;\\n    }\\n    \\n    /**\\n     * @notice Register OApp for composition\\n     */\\n    function registerOApp(bytes32 _oApp, address _implementation) external onlyOwner {\\n        oAppRegistry[_oApp] = _implementation;\\n        emit OAppRegistered(_oApp, _implementation);\\n    }\\n    \\n    /**\\n     * @notice Add supported token\\n     */\\n    function addSupportedToken(address _token, address _router) external onlyOwner {\\n        supportedTokens[_token] = true;\\n        swapRouters[_token] = _router;\\n    }\\n    \\n    /**\\n     * @notice Quote swap for planning\\n     */\\n    function quoteSwap(\\n        uint256 amountIn,\\n        address targetToken\\n    ) external view returns (uint256 expectedOut) {\\n        if (targetToken == pyusd) {\\n            return amountIn;\\n        }\\n        \\n        // In production, would query DEX for actual quote\\n        // For demo, return 1:1 ratio with 1% slippage\\n        return amountIn * 99 / 100;\\n    }\\n    \\n    /**\\n     * @notice Emergency token recovery\\n     */\\n    function recoverTokens(address _token, uint256 _amount) external onlyOwner {\\n        IERC20(_token).safeTransfer(owner(), _amount);\\n    }\\n}\",\"keccak256\":\"0xd622ccf1244872b96e15a06f90b4d6bdc1b188e48a635a090e51f5d391d64fd8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610f86380380610f8683398101604081905261002f91610195565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006781610129565b506001600160a01b03808416608052821660a05261012160026020527fb7598821b71eb990d952f174dec3507a6d48dc93be8e23cae785c98ca310bfbb8054600160ff1991821681179092557ff4f699a1ef35e64890828cc562d137cceeab28af8455567ef14b6ec385c8e441805482168317905573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26000527fde032e96a833a2191f55c5766e34554d9b07734477ea9cb69c40158c1078e79380549091169091179055565b5050506101d8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461019057600080fd5b919050565b6000806000606084860312156101aa57600080fd5b6101b384610179565b92506101c160208501610179565b91506101cf60408501610179565b90509250925092565b60805160a051610d5861022e6000396000818161014e01528181610385015281816106b8015281816106fc0152818161073b015281816107ff015261084701526000818161019a015261044f0152610d586000f3fe6080604052600436106100c25760003560e01c8063715018a61161007f578063c2b7be1611610059578063c2b7be1614610265578063ceaec18614610285578063d0a10260146102bb578063f2fde38b146102ce57600080fd5b8063715018a6146101fc5780638da5cb5b146102115780639358bd4f1461022f57600080fd5b8063069c9fae146100c75780630e05490d146100e957806311886b8a1461010957806322e669d31461013c5780635e280f111461018857806368c4ac26146101bc575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610aae565b6102ee565b005b3480156100f557600080fd5b506100e7610104366004610ada565b610320565b34801561011557600080fd5b50610129610124366004610ada565b610381565b6040519081526020015b60405180910390f35b34801561014857600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610133565b34801561019457600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c857600080fd5b506101ec6101d7366004610b0a565b60026020526000908152604090205460ff1681565b6040519015158152602001610133565b34801561020857600080fd5b506100e76103e3565b34801561021d57600080fd5b506000546001600160a01b0316610170565b34801561023b57600080fd5b5061017061024a366004610b0a565b6001602052600090815260409020546001600160a01b031681565b34801561027157600080fd5b506100e7610280366004610b2e565b6103f7565b34801561029157600080fd5b506101706102a0366004610b5c565b6003602052600090815260409020546001600160a01b031681565b6100e76102c9366004610bbe565b610444565b3480156102da57600080fd5b506100e76102e9366004610b0a565b610539565b6102f6610577565b61031c61030b6000546001600160a01b031690565b6001600160a01b03841690836105a4565b5050565b610328610577565b60008281526003602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917f618fa058e2e36448418844626911148f4e482103f4e607d0e1dca6d929df515e9190a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036103c35750816103dd565b60646103d0846063610c75565b6103da9190610c8c565b90505b92915050565b6103eb610577565b6103f56000610608565b565b6103ff610577565b6001600160a01b0391821660009081526002602090815260408083208054600160ff199091168117909155909152902080546001600160a01b03191691909216179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104b15760405162461bcd60e51b815260206004820152600d60248201526c13db9b1e48195b991c1bda5b9d609a1b60448201526064015b60405180910390fd5b6001600160a01b03878116600090815260036020526040902054166105075760405162461bcd60e51b815260206004820152600c60248201526b0556e6b6e6f776e204f4170760a41b60448201526064016104a8565b6000808080610518888a018a610cae565b935093509350935061052c84848484610658565b5050505050505050505050565b610541610577565b6001600160a01b03811661056b57604051631e4fbdf760e01b8152600060048201526024016104a8565b61057481610608565b50565b6000546001600160a01b031633146103f55760405163118cdaa760e01b81523360048201526024016104a8565b6040516001600160a01b0383811660248301526044820183905261060391859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506108c4565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821660009081526002602052604090205460ff166106b65760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016104a8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031603610793576107236001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001685856105a4565b60408051848152602081018590526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116928392918816917f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f1910160405180910390a46108be565b6001600160a01b0380831660009081526001602052604090205416806107f25760405162461bcd60e51b8152602060048201526014602482015273139bc81c9bdd5d195c8818dbdb999a59dd5c995960621b60448201526064016104a8565b6108266001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168286610935565b8161083b6001600160a01b03851687836105a4565b836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b03167f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f188856040516108b3929190918252602082015260400190565b60405180910390a450505b50505050565b600080602060008451602086016000885af1806108e7576040513d6000823e3d81fd5b50506000513d915081156108ff57806001141561090c565b6001600160a01b0384163b155b156108be57604051635274afe760e01b81526001600160a01b03851660048201526024016104a8565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190610cf6565b90506108be84846109ba8585610d0f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610a0b8482610a4a565b6108be576040516001600160a01b03848116602483015260006044830152610a4091869182169063095ea7b3906064016105d1565b6108be84826108c4565b6000806000806020600086516020880160008a5af192503d91506000519050828015610a8f57508115610a805780600114610a8f565b6000866001600160a01b03163b115b9695505050505050565b6001600160a01b038116811461057457600080fd5b60008060408385031215610ac157600080fd5b8235610acc81610a99565b946020939093013593505050565b60008060408385031215610aed57600080fd5b823591506020830135610aff81610a99565b809150509250929050565b600060208284031215610b1c57600080fd5b8135610b2781610a99565b9392505050565b60008060408385031215610b4157600080fd5b8235610b4c81610a99565b91506020830135610aff81610a99565b600060208284031215610b6e57600080fd5b5035919050565b60008083601f840112610b8757600080fd5b50813567ffffffffffffffff811115610b9f57600080fd5b602083019150836020828501011115610bb757600080fd5b9250929050565b600080600080600080600060a0888a031215610bd957600080fd5b8735610be481610a99565b965060208801359550604088013567ffffffffffffffff80821115610c0857600080fd5b610c148b838c01610b75565b909750955060608a01359150610c2982610a99565b90935060808901359080821115610c3f57600080fd5b50610c4c8a828b01610b75565b989b979a50959850939692959293505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103dd576103dd610c5f565b600082610ca957634e487b7160e01b600052601260045260246000fd5b500490565b60008060008060808587031215610cc457600080fd5b8435610ccf81610a99565b9350602085013592506040850135610ce681610a99565b9396929550929360600135925050565b600060208284031215610d0857600080fd5b5051919050565b808201808211156103dd576103dd610c5f56fea2646970667358221220aed1c6791f7757bf99c4dc7fc299eff77ec1b3cb369aac5842db4b21deb1713964736f6c63430008160033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063715018a61161007f578063c2b7be1611610059578063c2b7be1614610265578063ceaec18614610285578063d0a10260146102bb578063f2fde38b146102ce57600080fd5b8063715018a6146101fc5780638da5cb5b146102115780639358bd4f1461022f57600080fd5b8063069c9fae146100c75780630e05490d146100e957806311886b8a1461010957806322e669d31461013c5780635e280f111461018857806368c4ac26146101bc575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610aae565b6102ee565b005b3480156100f557600080fd5b506100e7610104366004610ada565b610320565b34801561011557600080fd5b50610129610124366004610ada565b610381565b6040519081526020015b60405180910390f35b34801561014857600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610133565b34801561019457600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c857600080fd5b506101ec6101d7366004610b0a565b60026020526000908152604090205460ff1681565b6040519015158152602001610133565b34801561020857600080fd5b506100e76103e3565b34801561021d57600080fd5b506000546001600160a01b0316610170565b34801561023b57600080fd5b5061017061024a366004610b0a565b6001602052600090815260409020546001600160a01b031681565b34801561027157600080fd5b506100e7610280366004610b2e565b6103f7565b34801561029157600080fd5b506101706102a0366004610b5c565b6003602052600090815260409020546001600160a01b031681565b6100e76102c9366004610bbe565b610444565b3480156102da57600080fd5b506100e76102e9366004610b0a565b610539565b6102f6610577565b61031c61030b6000546001600160a01b031690565b6001600160a01b03841690836105a4565b5050565b610328610577565b60008281526003602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917f618fa058e2e36448418844626911148f4e482103f4e607d0e1dca6d929df515e9190a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036103c35750816103dd565b60646103d0846063610c75565b6103da9190610c8c565b90505b92915050565b6103eb610577565b6103f56000610608565b565b6103ff610577565b6001600160a01b0391821660009081526002602090815260408083208054600160ff199091168117909155909152902080546001600160a01b03191691909216179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104b15760405162461bcd60e51b815260206004820152600d60248201526c13db9b1e48195b991c1bda5b9d609a1b60448201526064015b60405180910390fd5b6001600160a01b03878116600090815260036020526040902054166105075760405162461bcd60e51b815260206004820152600c60248201526b0556e6b6e6f776e204f4170760a41b60448201526064016104a8565b6000808080610518888a018a610cae565b935093509350935061052c84848484610658565b5050505050505050505050565b610541610577565b6001600160a01b03811661056b57604051631e4fbdf760e01b8152600060048201526024016104a8565b61057481610608565b50565b6000546001600160a01b031633146103f55760405163118cdaa760e01b81523360048201526024016104a8565b6040516001600160a01b0383811660248301526044820183905261060391859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506108c4565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821660009081526002602052604090205460ff166106b65760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016104a8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031603610793576107236001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001685856105a4565b60408051848152602081018590526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116928392918816917f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f1910160405180910390a46108be565b6001600160a01b0380831660009081526001602052604090205416806107f25760405162461bcd60e51b8152602060048201526014602482015273139bc81c9bdd5d195c8818dbdb999a59dd5c995960621b60448201526064016104a8565b6108266001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168286610935565b8161083b6001600160a01b03851687836105a4565b836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b03167f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f188856040516108b3929190918252602082015260400190565b60405180910390a450505b50505050565b600080602060008451602086016000885af1806108e7576040513d6000823e3d81fd5b50506000513d915081156108ff57806001141561090c565b6001600160a01b0384163b155b156108be57604051635274afe760e01b81526001600160a01b03851660048201526024016104a8565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190610cf6565b90506108be84846109ba8585610d0f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610a0b8482610a4a565b6108be576040516001600160a01b03848116602483015260006044830152610a4091869182169063095ea7b3906064016105d1565b6108be84826108c4565b6000806000806020600086516020880160008a5af192503d91506000519050828015610a8f57508115610a805780600114610a8f565b6000866001600160a01b03163b115b9695505050505050565b6001600160a01b038116811461057457600080fd5b60008060408385031215610ac157600080fd5b8235610acc81610a99565b946020939093013593505050565b60008060408385031215610aed57600080fd5b823591506020830135610aff81610a99565b809150509250929050565b600060208284031215610b1c57600080fd5b8135610b2781610a99565b9392505050565b60008060408385031215610b4157600080fd5b8235610b4c81610a99565b91506020830135610aff81610a99565b600060208284031215610b6e57600080fd5b5035919050565b60008083601f840112610b8757600080fd5b50813567ffffffffffffffff811115610b9f57600080fd5b602083019150836020828501011115610bb757600080fd5b9250929050565b600080600080600080600060a0888a031215610bd957600080fd5b8735610be481610a99565b965060208801359550604088013567ffffffffffffffff80821115610c0857600080fd5b610c148b838c01610b75565b909750955060608a01359150610c2982610a99565b90935060808901359080821115610c3f57600080fd5b50610c4c8a828b01610b75565b989b979a50959850939692959293505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103dd576103dd610c5f565b600082610ca957634e487b7160e01b600052601260045260246000fd5b500490565b60008060008060808587031215610cc457600080fd5b8435610ccf81610a99565b9350602085013592506040850135610ce681610a99565b9396929550929360600135925050565b600060208284031215610d0857600080fd5b5051919050565b808201808211156103dd576103dd610c5f56fea2646970667358221220aed1c6791f7757bf99c4dc7fc299eff77ec1b3cb369aac5842db4b21deb1713964736f6c63430008160033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC-20 token failed."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addSupportedToken(address,address)": {
        "notice": "Add supported token"
      },
      "lzCompose(address,bytes32,bytes,address,bytes)": {
        "notice": "Compose receiver for LayerZero messages"
      },
      "quoteSwap(uint256,address)": {
        "notice": "Quote swap for planning"
      },
      "recoverTokens(address,uint256)": {
        "notice": "Emergency token recovery"
      },
      "registerOApp(bytes32,address)": {
        "notice": "Register OApp for composition"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/TokenSwapComposer.sol:TokenSwapComposer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4918,
        "contract": "contracts/TokenSwapComposer.sol:TokenSwapComposer",
        "label": "swapRouters",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 4922,
        "contract": "contracts/TokenSwapComposer.sol:TokenSwapComposer",
        "label": "supportedTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4926,
        "contract": "contracts/TokenSwapComposer.sol:TokenSwapComposer",
        "label": "oAppRegistry",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}